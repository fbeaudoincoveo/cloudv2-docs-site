---
  info: 
    termsOfService: "Coveo API terms of service"
    contact: 
      url: "www.coveo.com"
      name: "Coveo"
      email: "support@coveo.com"
    description: |
      The Index API allows you to:
      * Manage fields in a Coveo Cloud V2 organization index.
      * Retrieve a document permission models and effective permissions.

      **Notes:**
      > If you need to map fields to metadata for a source, you must use the [Source API](Source).
      >
      > Effective permissions are evaluated using content from the security identity cache, which you can read and refresh
      > using the [Security Cache API](SecurityCache).
    license: {}
    title: "Index API Reference - Coveo Cloud V2"
    version: "1.0"
  paths: 
    /rest/organizations/{organizationId}/indexes/fields/batch/create: 
      post: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/indexes/fields/batch/create_post"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              items: 
                $ref: "#/definitions/FieldModel"
              type: "array"
            description: "fieldModels"
            required: true
            name: "fieldModels"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "createFields"
        summary: "Creates fields for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createFieldsUsingPOST"
    /rest/organizations/{organizationId}/indexes/fields/batch/delete: 
      delete: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/indexes/fields/batch/delete_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fields"
            items: 
              type: "string"
            required: true
            collectionFormat: "multi"
            in: "query"
            type: "array"
            name: "fields"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "removeFields"
        summary: "Removes fields from an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "removeFieldsUsingDELETE"
    /rest/organizations/{organizationId}/indexes/fields/batch/update: 
      put: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/indexes/fields/batch/update_put"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              items: 
                $ref: "#/definitions/FieldModel"
              type: "array"
            description: "fieldModels"
            required: true
            name: "fieldModels"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "updateFields"
        summary: "Update fields for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateFieldsUsingPUT"
    /rest/organizations/{organizationId}/indexes/page/fields: 
      get: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "VIEW"
        uiOperationId: "/rest/organizations/paramId/indexes/page/fields_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/FieldModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            enum: 
              - "LONG"
              - "LONG_64"
              - "DOUBLE"
              - "DATE"
              - "STRING"
            description: "type"
            required: false
            in: "query"
            type: "string"
            name: "type"
          - 
            description: "filter"
            required: false
            type: "string"
            name: "filter"
            in: "query"
          - 
            description: "sortBy"
            default: "name"
            required: false
            in: "query"
            type: "string"
            name: "sortBy"
          - 
            description: "order"
            default: "ASC"
            required: false
            in: "query"
            type: "string"
            name: "order"
          - 
            description: "page"
            format: "int32"
            default: 0
            required: false
            in: "query"
            type: "integer"
            name: "page"
          - 
            description: "perPage"
            format: "int32"
            default: 100
            required: false
            in: "query"
            type: "integer"
            name: "perPage"
          - 
            enum: 
              - "ALL"
              - "USER"
              - "SYSTEM"
            description: "origin"
            default: "ALL"
            required: false
            in: "query"
            type: "string"
            name: "origin"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "getFields"
        summary: "Get a page of fields for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getFieldsUsingGET"
    /rest/organizations/{organizationId}/indexes/fields/{fieldId}: 
      put: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/indexes/fields/paramId_put"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fieldId"
            required: true
            type: "string"
            name: "fieldId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/FieldModel"
            description: "fieldModel"
            required: true
            name: "fieldModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "updateField"
        summary: "Update a field for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateFieldUsingPUT"
      delete: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/indexes/fields/paramId_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fieldId"
            required: true
            type: "string"
            name: "fieldId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "removeField"
        summary: "Removes a specific field from an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "removeFieldUsingDELETE"
      get: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "VIEW"
        uiOperationId: "/rest/organizations/paramId/indexes/fields/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/FieldModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fieldId"
            required: true
            type: "string"
            name: "fieldId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "getField"
        summary: "Get a single field for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getFieldUsingGET"
    /rest/organizations/{organizationId}/indexes/{indexId}/documents/{documentId}/permissions/effective: 
      get: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SECURITY_CACHE"
          type: "VIEW"
        uiOperationId: "/rest/organizations/paramId/indexes/paramId/documents/paramId/permissions/effective_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/PageModel«SinglePermissionModel»"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "indexId"
            required: true
            type: "string"
            name: "indexId"
            in: "path"
          - 
            description: "documentId"
            required: true
            type: "string"
            name: "documentId"
            in: "path"
          - 
            enum: 
              - "UNKNOWN"
              - "UP_TO_DATE"
              - "NOT_UPDATED"
              - "OUT_OF_DATE"
              - "IN_ERROR"
              - "DISABLED"
            description: "states"
            items: 
              enum: 
                - "UNKNOWN"
                - "UP_TO_DATE"
                - "NOT_UPDATED"
                - "OUT_OF_DATE"
                - "IN_ERROR"
                - "DISABLED"
              type: "string"
            required: false
            collectionFormat: "multi"
            in: "query"
            type: "array"
            name: "states"
          - 
            description: "page"
            format: "int32"
            default: 0
            required: false
            in: "query"
            type: "integer"
            name: "page"
          - 
            description: "perPage"
            format: "int32"
            default: 100
            required: false
            in: "query"
            type: "integer"
            name: "perPage"
          - 
            enum: 
              - "ALL"
              - "ALLOWED"
              - "DENIED"
            description: "includedEntities"
            default: "ALL"
            required: false
            in: "query"
            type: "string"
            name: "includedEntities"
        produces: 
          - "*/*"
        tags: 
          - "Index"
        x-pretty-name: "getEffectivePermissions"
        summary: "Get the effective permissions for a document with filters"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getEffectivePermissionsUsingGET"
    /rest/organizations/{organizationId}/indexes/fields: 
      post: 
        uiOperationId: "/rest/organizations/paramId/indexes/fields_post"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/FieldModel"
            description: "fieldModel"
            required: true
            name: "fieldModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Fields"
        x-pretty-name: "createField"
        summary: "Creates a field for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createFieldUsingPOST"
    /rest/organizations/{organizationId}/indexes/{indexId}/documents/{documentId}/permissions: 
      get: 
        x-required-privilege: 
          owner: "PLATFORM"
          targetDomain: "SECURITY_CACHE"
          type: "VIEW"
        uiOperationId: "/rest/organizations/paramId/indexes/paramId/documents/paramId/permissions_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/DocumentPermissionModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "indexId"
            required: true
            type: "string"
            name: "indexId"
            in: "path"
          - 
            description: "documentId"
            required: true
            type: "string"
            name: "documentId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Index"
        x-pretty-name: "getPermissions"
        summary: "Get the permission model for a document"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getPermissionsUsingGET"
  tags: 
    - 
      name: "Fields"
      description: "Field Resource"
    - 
      name: "Index"
      description: "Index Service Resource"
  basePath: "/"
  securityDefinitions: 
    oauth2: 
      flow: "implicit"
      type: "oauth2"
      authorizationUrl: "https://platform.cloud.coveo.com/oauth/authorize"
      scopes: 
        full: "Required"
  host: "platform.cloud.coveo.com:443"
  definitions: 
    DocumentPermissionModel: 
      type: "object"
      properties: 
        state: 
          enum: 
            - "UNKNOWN"
            - "VALID"
            - "PENDING"
            - "INCOMPLETE"
            - "IN_ERROR"
          type: "string"
        permissionLevels: 
          items: 
            $ref: "#/definitions/PermissionLevelModel"
          type: "array"
        lastUpdatedDate: 
          type: "integer"
          format: "int64"
    PageModel«FieldModel»: 
      type: "object"
      properties: 
        totalPages: 
          type: "integer"
          format: "int32"
        items: 
          items: 
            $ref: "#/definitions/FieldModel"
          type: "array"
        totalEntries: 
          type: "integer"
          format: "int64"
    PermissionSetModel: 
      type: "object"
      properties: 
        anonymousAllowed: 
          type: "boolean"
        name: 
          type: "string"
        lastUpdatedDate: 
          type: "integer"
          format: "int64"
        permissions: 
          items: 
            $ref: "#/definitions/SinglePermissionModel"
          type: "array"
    SinglePermissionModel: 
      type: "object"
      properties: 
        lastUpdateResult: 
          enum: 
            - "NONE"
            - "SUCCESS"
            - "ACCESS_DENIED"
            - "TIMED_OUT"
            - "ENTITY_IS_INVALID"
            - "ENTITY_IS_UNAVAILABLE"
            - "SECURITY_PROVIDER_IS_UNAVAILABLE"
            - "SECURITY_PROVIDER_IS_UNREACHABLE"
            - "SECURITY_PROVIDER_IS_NOT_READY"
            - "UNEXPECTED_ERROR"
          type: "string"
        additionalInfo: 
          additionalProperties: 
            type: "string"
          type: "object"
        securityProvider: 
          type: "string"
        lastUpdateErrorDetail: 
          type: "string"
        identityType: 
          enum: 
            - "USER"
            - "GROUP"
            - "VIRTUAL_GROUP"
            - "UNKNOWN"
          type: "string"
        lastUpdateDate: 
          type: "integer"
          format: "int64"
        state: 
          enum: 
            - "UNKNOWN"
            - "UP_TO_DATE"
            - "NOT_UPDATED"
            - "OUT_OF_DATE"
            - "IN_ERROR"
            - "DISABLED"
          type: "string"
        allowed: 
          type: "boolean"
        identity: 
          type: "string"
    PermissionLevelModel: 
      type: "object"
      properties: 
        permissionSets: 
          items: 
            $ref: "#/definitions/PermissionSetModel"
          type: "array"
        name: 
          type: "string"
    FieldModel: 
      type: "object"
      properties: 
        multiValueFacetTokenizers: 
          type: "string"
        includeInResults: 
          type: "boolean"
        description: 
          type: "string"
        ranking: 
          type: "boolean"
        dateFormat: 
          type: "string"
        multiValueFacet: 
          type: "boolean"
        useCacheForComputedFacet: 
          type: "boolean"
        system: 
          type: "boolean"
        sort: 
          type: "boolean"
        facet: 
          type: "boolean"
        stemming: 
          type: "boolean"
        useCacheForNumericQuery: 
          type: "boolean"
        mergeWithLexicon: 
          type: "boolean"
        useCacheForSort: 
          type: "boolean"
        useCacheForNestedQuery: 
          type: "boolean"
        type: 
          enum: 
            - "LONG"
            - "LONG_64"
            - "DOUBLE"
            - "DATE"
            - "STRING"
          type: "string"
        includeInQuery: 
          type: "boolean"
        smartDateFacet: 
          type: "boolean"
        name: 
          type: "string"
    PageModel«SinglePermissionModel»: 
      type: "object"
      properties: 
        totalPages: 
          type: "integer"
          format: "int32"
        items: 
          items: 
            $ref: "#/definitions/SinglePermissionModel"
          type: "array"
        totalEntries: 
          type: "integer"
          format: "int64"
  swagger: "2.0"

