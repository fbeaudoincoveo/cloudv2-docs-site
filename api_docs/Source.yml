---
  info: 
    termsOfService: "Coveo API terms of service"
    contact: 
      url: "www.coveo.com"
      name: "Coveo"
      email: "support@coveo.com"
    description: |
      The Source API allows you to:
      * Manage sources in a Coveo Cloud V2 organization.
      * Manage metadata mapping rules.
      * Manage which indexing pipeline extensions apply for a source. 

      **Notes:**
      > If you need to create, update, or delete fields in a Coveo Cloud V2 organization index, you must use the
      > [Index API](Index).
      >
      > If you need to test, create, update, or delete indexing pipeline extensions, you must use the
      >[Extension API](Extension).
    license: {}
    title: "Source API Reference - Coveo Cloud V2"
    version: "1.0"
  paths: 
    /rest/organizations/{organizationId}/sources/{sourceId}: 
      put: 
        x-required-privilege: 
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId_put"
        responses: 
          200: 
            description: "OK"
            schema:
              $ref: "#/definitions/JsonStringIdWrapper"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            schema:
              $ref: "#/definitions/SourceModel"
            description: "sourceModel"
            required: true
            name: "sourceModel"
            in: "body"
          -
            description: "updateSecurityProviders"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          -
            description: "rebuild"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "updateSource"
        summary: "Update a source from simple configuration"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "updateSourceUsingPUT"
      delete:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId_delete"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          204:
            description: "No Content"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "deleteSource"
        summary: "Delete a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "deleteSourceUsingDELETE"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "getSource"
        summary: "Get a single source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getSourceUsingGET"
    /rest/sourceconfiguration/salesforce/objects:
      post:
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects_post"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          -
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          -
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          -
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
            description: "inputObjects"
            required: true
            name: "inputObjects"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "refreshObjects"
        summary: "Refresh objects"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "refreshObjectsUsingPOST"
      get:
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          -
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          -
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          -
            description: "serviceCloudIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "serviceCloudIndexed"
          -
            description: "knowledgeIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "knowledgeIndexed"
          -
            description: "contentIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "contentIndexed"
          -
            description: "chatterIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "chatterIndexed"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "getObjects"
        summary: "Get objects"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getObjectsUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types/{typeId}:
      put:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId_put"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/TypedMappingSettingsModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseTypedMappingSettingsModel«BaseRuleModel»"
            description: "typedMappingSettingsModel"
            required: true
            name: "typedMappingSettingsModel"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "updateMappingTypeSettings"
        summary: "Update an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "updateMappingTypeSettingsUsingPUT"
      delete:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId_delete"
        responses:
          204:
            description: "No Content"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "deleteMappingType"
        summary: "Delete an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "deleteMappingTypeUsingDELETE"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/TypedMappingSettingsModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getMappingTypeSettings"
        summary: "Get an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getMappingTypeSettingsUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/stopRefresh:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/stopRefresh_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "stopRefresh"
        summary: "Stop the current refresh operation on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "stopRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/raw:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/sources/raw_post"
        responses:
          201:
            description: "Created"
            schema:
              $ref: "#/definitions/JsonStringIdWrapper"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            schema:
              $ref: "#/definitions/RawSourceConfig"
            description: "platformSourceConfig"
            required: true
            name: "platformSourceConfig"
            in: "body"
          -
            description: "updateSecurityProviders"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          -
            description: "rebuild"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "createRawSource"
        summary: "Create a source from raw configuration"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "createRawSourceUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types_post"
        responses:
          201:
            description: "Created"
            schema:
              $ref: "#/definitions/TypedMappingSettingsModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseTypedMappingSettingsModel«BaseRuleModel»"
            description: "typedMappingSettings"
            required: true
            name: "typedMappingSettings"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "addMappingTypes"
        summary: "Add a new item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "addMappingTypesUsingPOST"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/TypedMappingSettingsModel"
              type: "array"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getMappingTypes"
        summary: "Get all item types"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getMappingTypesUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types/{typeId}/rules/{ruleId}:
      put:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules/paramId_put"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/RuleModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          -
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseRuleModel"
            description: "baseRule"
            required: true
            name: "baseRule"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "updateMappingTypeSettingsRule"
        summary: "Update a mapping rule for an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "updateMappingTypeSettingsRuleUsingPUT"
      delete:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules/paramId_delete"
        responses:
          204:
            description: "No Content"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          -
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "deleteMappingTypeSettingsRule"
        summary: "Delete a mapping rule for an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "deleteMappingTypeSettingsRuleUsingDELETE"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules/paramId_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/RuleModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          -
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getMappingTypeSettingsRule"
        summary: "Get a mapping rule for an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getMappingTypeSettingsRuleUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/raw:
      put:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/raw_put"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/JsonStringIdWrapper"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            schema:
              $ref: "#/definitions/RawSourceConfig"
            description: "platformSourceConfig"
            required: true
            name: "platformSourceConfig"
            in: "body"
          -
            description: "updateSecurityProviders"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          -
            description: "rebuild"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "updateRawSource"
        summary: "Update a source from raw configuration"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "updateRawSourceUsingPUT"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/raw_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/RawSourceConfig"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "getRawSource"
        summary: "Get the raw configuration of a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getRawSourceUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/fullRefresh:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/fullRefresh_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "fullRefresh"
        summary: "Apply a full refresh operation on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "fullRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/light:
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/light_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "getLightSource"
        summary: "Get a single source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getLightSourceUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/pauseRefresh:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/pauseRefresh_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "pauseRefresh"
        summary: "Pause the current refresh operation on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "pauseRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/startRefresh:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/startRefresh_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "startRefresh"
        summary: "Start a refresh operation on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "startRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/extensions:
      put:
        x-required-privilege:
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/extensions_put"
        responses:
          200:
            description: "OK"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/SourceExtensionsMap"
            description: "extensions"
            required: true
            name: "extensions"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Source Extensions"
        x-pretty-name: "setSourceExtensions"
        summary: "Sets the extensions on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "setSourceExtensionsUsingPUT"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "VIEW"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/extensions_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceExtensionsMap"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Source Extensions"
        x-pretty-name: "getSourceExtensions"
        summary: "Get extensions set on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getSourceExtensionsUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/applyChanges:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/applyChanges_post"
        responses:
          201:
            description: "Created"
          204:
            description: "No Content"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "applyChanges"
        summary: "Apply pending changes on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "applyChangesUsingPOST"
    /rest/sourceconfiguration/salesforce/parseOTG:
      post:
        uiOperationId: "/rest/sourceconfiguration/salesforce/parseOTG_post"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            schema:
              type: "string"
            description: "objectsToGetXml"
            required: true
            name: "objectsToGetXml"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "parseOTG"
        summary: "Parse an ObjectsToGet to a schema"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "parseOTGUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/rebuild:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/rebuild_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "rebuild"
        summary: "Apply a rebuild operation on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "rebuildUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/enable:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/enable_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        deprecated: true
        tags:
          - "Sources"
        x-pretty-name: "enable"
        summary: "Enable schedules on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "enableUsingPOST"
    /rest/sourceconfiguration/salesforce/schema:
      post:
        uiOperationId: "/rest/sourceconfiguration/salesforce/schema_post"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          -
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          -
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          -
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
            description: "inputSchema"
            required: true
            name: "inputSchema"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "refreshSchema"
        summary: "Refresh complete schema (objects and fields)"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "refreshSchemaUsingPOST"
      get:
        uiOperationId: "/rest/sourceconfiguration/salesforce/schema_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          -
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          -
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          -
            description: "serviceCloudIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "serviceCloudIndexed"
          -
            description: "knowledgeIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "knowledgeIndexed"
          -
            description: "contentIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "contentIndexed"
          -
            description: "chatterIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "chatterIndexed"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "getSchema"
        summary: "Get complete schema (objects and fields)"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getSchemaUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types/{typeId}/rules:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules_post"
        responses:
          201:
            description: "Created"
            schema:
              $ref: "#/definitions/RuleModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseRuleModel"
            description: "baseRule"
            required: true
            name: "baseRule"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "addMappingTypeSettingRule"
        summary: "Add a new mapping rule for an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "addMappingTypeSettingRuleUsingPOST"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/RuleModel"
              type: "array"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getMappingTypeSettingRules"
        summary: "Get all mapping rules for an item type"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getMappingTypeSettingRulesUsingGET"
    /rest/organizations/{organizationId}/sources:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "EDIT"
        uiOperationId: "/rest/organizations/paramId/sources_post"
        responses:
          201:
            description: "Created"
            schema:
              properties:
                sourceType:
                  type: "enum"
                  description: |
                    The type of the Coveo Cloud V2 source.

                id:
                  type: "string"
                  description: |
                    The unique identifier of the Coveo Cloud V2 source.
                name:
                  type: "string"
                  description: |
                    The display name of the Coveo Cloud V2 source.
                owner:
                  type: "string"
                  description: |
                    The owner of the Coveo Cloud V2 source.
                sourceVisibility:
                  type: "string"
                  description: |
                    The visibility of the Coveo Cloud V2 source.
                information:
                  properties:
                    sourceStatus:
                      type: "object"
                      properties:
                        type:
                          type: "string"
                          description: |
                            The type of operation applied to the source.

                            **Sample value:**
                        numberOfDocuments:
                          type: "integer"
                          example: "3"
                          description: |
                            The number of added or modified items for this operation.

                            **Sample value:**
                            > `3`
                        timestamp:
                          type: "integer"
                          format: "int64"
                          description: |
                            The timestamp related to the status.

                            **Sample value:**
                            > `1498498427628`
                          example: "1498498427628"
                        allowedOperations:
                          type: "string"
                          description: |
                            The list of allowed operations for this source.
                    nextOperation:
                      description: |
                        The next scheduled operation for this particular source.
                      type: "object"
                      example: "GROUP"
                      properties:
                        operationType:
                          type: "string"
                          description: |
                            The type of operation.
                        timestamp:
                          type: "integer"
                          format: "int64"
                          description: |
                            The individual time marker of the scheduled operation.
                    rebuildRequired:
                      type: "boolean"
                      default: false
                      description: |
                        Whether the rebuild operation is required for this source.
                    numberOfDocuments:
                      type: "integer"
                      example: "12"
                      description: |
                        The number of documents in the source.

                        **Sample value:**
                        > "12"
                    documentsTotalSize:
                      type: "integer"
                      example: "1259"
                      description: |
                        The added size of all documents.

                        **Sample value:**
                        > "1259"
                pushEnabled:
                  type: "boolean"
                  description: |
                    **READ-WRITE** Whether to enable push type sources.
                preConversionExtensions:
                  items:
                    type: "extensions"
                  type: "array"
                postConversionExtensions:
                  items:
                    type: "extensions"
                  type: "array"
                urlFilters:
                  items:
                    type: "url"
                  type: "array"
            examples:
                application/json:
                  {
                      "sourceType": "WEB2",
                      "id": "q4fshk6ybwnc3kg4nuirkokpmi-myorganizationid",
                      "name": "mySource",
                      "owner": "alice@mydomain.com",
                      "sourceVisibility": "SHARED",
                      "information": {
                          "sourceStatus": {
                              "type": "CREATING",
                              "numberOfDocuments": 0,
                              "timestamp": 1498068050080,
                              "allowedOperations": [
                                  "DELETE",
                                  "REBUILD"
                              ]
                          },
                          "nextOperation": {
                              "operationType": "REBUILD",
                              "timestamp": 1498068050228
                          },
                          "rebuildRequired": false,
                          "numberOfDocuments": 0,
                          "documentsTotalSize": 0
                      },
                      "pushEnabled": false,
                      "preConversionExtensions": [],
                      "postConversionExtensions": [],
                      "urlFilters": [
                          {
                              "filter": "*",
                              "includeFilter": true,
                              "filterType": "WILDCARD"
                          }
                      ]
                  }
          400:
            description: "Error"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
            examples:
                application/json:
                  errorCode: "INVALID_JSON"
          401:
            description: "Unauthorized"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  errorCode: "INVALID_TOKEN"
                  message: "Token is invalid."
          403:
            description: "Forbidden"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  message: "Access is denied"
                  errorCode: "ACCESS_DENIED"
          404:
            description: "Not Found"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
              application/json:
                errorCode: "ORGANIZATION_NOT_FOUND"
                message: "Organization 'myorganizationid' does not exist."
          405:
            description: "Invalid request"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  errorCode: "INVALID_REQUEST"
                  message: "Method not allowed."
          412:
            description: "Invalid source configuration"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  errorCode: "INVALID_SOURCE_CONFIGURATION"
                  message: "An email address is required for Gmail sources."
          415:
            description: "Unsupported Media Type"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  errorCode: "UNSUPPORTED_MEDIA_TYPE"
                  message: "Media type is not supported."
          500:
            description: "Internal server error"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  message: "Failed to process request due to an internal error."
                  errorCode: "INTERNAL_SERVER_ERROR"

          503:
            description: "Service Unavailable"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  message: "The server is currently unable to handle the request."
                  errorCode: "SERVICE_UNAVAILABLE"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            schema:
              $ref: "#/definitions/SourceModel"
            description: "The request body contains the source model which is the data structure of the Coveo Cloud V2 source to create."
            required: true
            name: "sourceModel"
            in: "body"
          -
            description: "Whether to update the security providers.
            "
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          -
            description: "Whether a rebuild operation is needed for the source.
            When this is set to `false` while creating a source, **rebuildRequired** returns `true` in the response body."
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "createSource"
        summary: "Create a source from simple configuration"
        description: |
                  Creates a Coveo Cloud V2 source from simple configuration. This allows you to configure the `sourceModel` directly in a JSON.

                  **Request example:**
                  ```http
                  POST /rest/organizations/myorganizationid/sources?updateSecurityProviders=true&rebuild=true
                  Host: platform.cloud.coveo.com
                  Content-Type: application/json
                  Authorization: Bearer MyOAuth2Token
                  ```
                  ```json
                  {
                    "sourceType":"WEB2",
                    "name":"mySharedSource",
                    "sourceVisibility":"SHARED",
                    "urls":["http://example.com"]
                  }
                  ```
                  ```json
                  {
                    "sourceType":"CONFLUENCE2_HOSTED",
                    "name":"mySecuredSource",
                    "permissions": {
                      "permissionLevels": [
                        {
                          "permissionSets": [
                            {
                              "permissions": [
                                {
                                  "allowed": true,
                                  "identity": "alice@coveo.com",
                                  "identityType": "USER",
                                  "securityProvider": "Email Security Provider"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "sourceVisibility":"SECURED",
                    "username":"alice",
                    "urls":["https://confluence.atlassian.com/doc/valid-url.html"]
                  }
                  ```
                  ```json
                  {
                  "sourceType":"SITECORE",
                  "name":"myPrivateSource",
                  "permissions": {
                      "permissionLevels": [
                        {
                          "permissionSets": [
                            {
                              "permissions": [
                                {
                                  "allowed": true,
                                  "identityType": "USER",
                                  "identity": "bob@coveo.com",
                                  "securityProvider": "Email Security Provider"              }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                  "sourceVisibility":"PRIVATE",
                  "pushEnabled":true
                  }
                  ```

                  Your request must contain the following headers:

                  ```http
                  Content-Type: application/json
                  Authorization: Bearer {apikey}
                  ```
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "createSourceUsingPOST"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "VIEW"
        uiOperationId: "/rest/organizations/paramId/sources_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SourceModel"
              type: "array"
          401:
            description: "Unauthorized"
            schema:
              type: "object"
              properties:
                errorCode:
                  type: "string"
                  description: |
                    The name of the error.
                message:
                  type: "string"
                  description: |
                    A verbose description of the error.
            examples:
                application/json:
                  errorCode: "INVALID_TOKEN"
                  message: "Token is invalid."
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "getSources"
        summary: "Get all sources"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getSourcesUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/resumeRefresh:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/resumeRefresh_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "resumeRefresh"
        summary: "Resume the current refresh operation on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "resumeRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/tasks/abort:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/tasks/abort_post"
        responses:
          200:
            description: "OK"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "activityId"
            required: true
            type: "string"
            name: "activityId"
            in: "query"
          -
            description: "abortReason"
            required: true
            type: "string"
            name: "abortReason"
            in: "query"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "abortTaskForActivity"
        summary: "Abort a source task related to a given activity."
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "abortTaskForActivityUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/incrementalRefresh:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/incrementalRefresh_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "incrementalRefresh"
        summary: "Apply an incremental refresh operation on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "incrementalRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/common:
      put:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common_put"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/CommonMappingSettingsModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseCommonMappingSettingsModel"
            description: "commonMappingSettings"
            required: true
            name: "commonMappingSettings"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "updateCommonMappingSettings"
        summary: "Update common mapping configuration"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "updateCommonMappingSettingsUsingPUT"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/CommonMappingSettingsModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getCommonMappingSettings"
        summary: "Get common mapping configuration"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getCommonMappingSettingsUsingGET"
    /rest/organizations/{organizationId}/sources/snapshots/{snapshotId}:
      get:
        x-required-privilege:
          owner: "PLATFORM"
          targetDomain: "SOURCE"
          type: "VIEW"
        uiOperationId: "/rest/organizations/paramId/sources/snapshots/paramId_get"
        responses:
          200:
            description: "OK"
            schema:
              type: "object"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "snapshotId"
            required: true
            type: "string"
            name: "snapshotId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "getSnapshot"
        summary: "Gets a source config snapshot"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getSnapshotUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/configuration/salesforce/evict:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/configuration/salesforce/evict_post"
        responses:
          200:
            description: "OK"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "evictSchemaForSource"
        summary: "Evict the salesforce schema of a source."
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "evictSchemaForSourceUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/common/rules:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules_post"
        responses:
          201:
            description: "Created"
            schema:
              $ref: "#/definitions/RuleModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseRuleModel"
            description: "ruleModel"
            required: true
            name: "ruleModel"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "addCommonMappingSettingsRule"
        summary: "Add a new common mapping rule"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "addCommonMappingSettingsRuleUsingPOST"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/RuleModel"
              type: "array"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getCommonMappingSettingsRules"
        summary: "Get all common mapping rules"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getCommonMappingSettingsRulesUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/configuration/salesforce/objects/{objectName}/fields:
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/configuration/salesforce/objects/paramId/fields_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceField"
              type: "array"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "objectName"
            required: true
            type: "string"
            name: "objectName"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "getFieldsForSource"
        summary: "Get an object fields for a given source."
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getFieldsForSourceUsingGET"
    /rest/sourceconfiguration/salesforce/generateOTG:
      post:
        uiOperationId: "/rest/sourceconfiguration/salesforce/generateOTG_post"
        responses:
          200:
            description: "OK"
            schema:
              type: "string"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            schema:
              items:
                $ref: "#/definitions/SalesforceObject"
              type: "array"
            description: "salesforceObjects"
            required: true
            name: "salesforceObjects"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "generateOTG"
        summary: "Generate an ObjectsToGet given a schema"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "generateOTGUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/pushRefresh:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/pushRefresh_post"
        responses:
          200:
            description: "OK"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            enum:
              - "ORG_PROVISIONING_CHECK"
              - "SOURCE_CREATE"
              - "SOURCE_DELETE"
              - "REBUILD"
              - "FULL_REFRESH"
              - "INCREMENTAL_REFRESH"
              - "IDLE"
              - "ROLLBACK_TO"
              - "REFRESH_CANCEL"
              - "SOURCE_PAUSE"
              - "SOURCE_RESUME"
              - "PUSH_SOURCE_CREATE"
              - "PUSH_CONFIG_CHANGE"
              - "COMMIT"
              - "CREATE"
              - "DELETE"
              - "DISABLE"
              - "DUPLICATE"
              - "ENABLE"
              - "UPDATE"
              - "START"
              - "STOP"
              - "PAUSE"
              - "RESUME"
              - "SYNCHRONIZE"
              - "BACKUP"
              - "RECOVER"
              - "REFRESH"
              - "REFRESH_ENTITIES_IN_ERROR"
              - "REFRESH_ENTITY"
              - "RESIZE"
              - "RESTORE"
              - "IMPORT"
              - "CONFIG_CHANGE"
              - "CONFIG_CREATE"
              - "CHANGE_READ_ONLY"
              - "CHANGE_ONLINE"
              - "TEST"
              - "UPGRADE"
              - "SCHEDULE_CREATE"
              - "SCHEDULE_CHANGE"
              - "SCHEDULE_DELETE"
            description: "activityOperation"
            required: true
            in: "query"
            type: "string"
            name: "activityOperation"
        produces:
          - "*/*"
        tags:
          - "Sources"
        x-pretty-name: "setPushRefreshStatus"
        summary: "Sets the refreshing state of a push source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "setPushRefreshStatusUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/common/rules/{ruleId}:
      put:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules/paramId_put"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/RuleModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseRuleModel"
            description: "baseRule"
            required: true
            name: "baseRule"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "updateCommonMappingSettingsRule"
        summary: "Update a common mapping rule"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "updateCommonMappingSettingsRuleUsingPUT"
      delete:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules/paramId_delete"
        responses:
          204:
            description: "No Content"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "deleteCommonMappingSettingsRule"
        summary: "Delete a common mapping rule"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "deleteCommonMappingSettingsRuleUsingDELETE"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules/paramId_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/RuleModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getCommonMappingSettingsRule"
        summary: "Get a common mapping rule"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getCommonMappingSettingsRuleUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/disable:
      post:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/disable_post"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/SourceModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        deprecated: true
        tags:
          - "Sources"
        x-pretty-name: "disable"
        summary: "Disable schedules on a source"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "disableUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings:
      put:
        x-required-privilege:
          owner: "PLATFORM"
          type: "EDIT"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings_put"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/MappingsConfigurationModel"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          -
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          -
            schema:
              $ref: "#/definitions/BaseMappingsConfigurationModel"
            description: "mappingsConfiguration"
            required: true
            name: "mappingsConfiguration"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "updateMappingsConfiguration"
        summary: "Update mapping configuration"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "updateMappingsConfigurationUsingPUT"
      get:
        x-required-privilege:
          owner: "PLATFORM"
          type: "VIEW"
          targetDomain: "SOURCE"
          targetId: "{sourceId}"
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings_get"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/MappingsConfigurationModel"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "The unique identifier of the Coveo Cloud V2 organization."
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          -
            description: "The unique identifier of the Coveo Cloud V2 source."
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces:
          - "*/*"
        tags:
          - "Mappings"
        x-pretty-name: "getMappingsConfiguration"
        summary: "Get mapping configuration"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getMappingsConfigurationUsingGET"
    /rest/sourceconfiguration/salesforce/objects/{objectName}/fields:
      post:
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects/paramId/fields_post"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceField"
              type: "array"
          201:
            description: "Created"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "objectName"
            required: true
            type: "string"
            name: "objectName"
            in: "path"
          -
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          -
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          -
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          -
            schema:
              items:
                $ref: "#/definitions/SalesforceField"
              type: "array"
            description: "inputFields"
            required: true
            name: "inputFields"
            in: "body"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "refreshFields"
        summary: "Refresh fields for a given object"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "refreshFieldsUsingPOST"
      get:
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects/paramId/fields_get"
        responses:
          200:
            description: "OK"
            schema:
              items:
                $ref: "#/definitions/SalesforceField"
              type: "array"
          401:
            description: "Unauthorized"
          403:
            description: "Forbidden"
          404:
            description: "Not Found"
        parameters:
          -
            description: "objectName"
            required: true
            type: "string"
            name: "objectName"
            in: "path"
          -
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          -
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          -
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
        produces:
          - "*/*"
        tags:
          - "Salesforce Source Configuration"
        x-pretty-name: "getFields"
        summary: "Get fields for a given object"
        security:
          -
            oauth2:
              - "full"
        consumes:
          - "application/json"
        operationId: "getFieldsUsingGET"
  tags:
    -
      name: "Mappings"
      description: "Mapping Resource"
    -
      name: "Sources"
      description: "Source Resource"
    -
      name: "Salesforce Source Configuration"
      description: "Salesforce Source Config Resource"
    -
      name: "Source Extensions"
      description: "Source Extension Service Resource"
  basePath: "/"
  securityDefinitions:
    oauth2:
      flow: "implicit"
      type: "oauth2"
      authorizationUrl: "https://platform.cloud.coveo.com/oauth/authorize"
      scopes:
        full: "Required"
  host: "platform.cloud.coveo.com:443"
  definitions:
    XMLRecordDefinition:
      type: "object"
      properties:
        body:
          type: "string"
        dateFormat:
          type: "string"
        author:
          type: "string"
        uri:
          type: "string"
        summary:
          type: "string"
        uniqueId:
          type: "string"
        date:
          type: "string"
        title:
          type: "string"
        root:
          type: "string"
        unescapeXMLEntities:
          type: "boolean"
        metaData:
          items:
            $ref: "#/definitions/XMLMetaData"
          type: "array"
    PermissionLevel:
      type: "object"
      properties:
        permissionSets:
          items:
            $ref: "#/definitions/PermissionSet"
          type: "array"
        name:
          type: "string"
    MappingModel:
      type: "object"
      description: |
        **READ** The mapping models list.
      properties:
        kind:
          enum:
            - "COMMON"
            - "MAPPING"
            - "DEFAULT"
          type: "string"
          description: |
            The kind of mapping used.
        type:
          type: "string"
          example: "ContentVersion"
          description: |

            **Sample value:**
            > `"ContentVersion"`
        content:
          type: "string"
          example: "%[PublishDate]"
          description: |

            **Sample value:**
            > `"%[PublishDate]"`
        fieldTypeHint:
          enum:
            - "LONG"
            - "LONG_64"
            - "DOUBLE"
            - "DATE"
            - "STRING"
          type: "string"
        fieldName:
          type: "string"
          example: "fpublishdate39042"
          description: |
            The name of the mapped field.

            **Sample value:**
            > `"fpublishdate39042"`
        extractionMethod:
          type: "string"
          example: "LITERAL"
          description: |
            The extraction method used to map.

            **Sample value:**
            > `"LITERAL"`
        id:
          type: "string"
          example: "wli5r3u4ks7fjuzk7avksjkevy"
          description: |
            The unique identifier of the mapping model.

            **Sample value:**
            > `"wli5r3u4ks7fjuzk7avksjkevy"`
    SecurityProvider:
      type: "object"
      properties:
        typeName:
          type: "string"
        name:
          type: "string"
    RawSourceConfig:
      type: "object"
      properties:
        postConversionExtensions:
          items:
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        mappings:
          items:
            $ref: "#/definitions/MappingModel"
          type: "array"
        securityProviderReferences:
          items:
            type: "string"
          type: "array"
        securityProviders:
          items:
            $ref: "#/definitions/SecurityProviderModel"
          type: "array"
        pushEnabled:
          type: "boolean"
        additionalInfos:
          type: "object"
        preConversionExtensions:
          items:
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        sourceType:
          enum:
            - "AMAZONS3"
            - "BOX"
            - "BOX_ENTERPRISE"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CONFLUENCE2_HOSTED"
            - "CUSTOM"
            - "DROPBOX"
            - "DROPBOX_FOR_BUSINESS"
            - "EXCHANGE"
            - "EXCHANGE_ENTERPRISE"
            - "GMAIL"
            - "GMAIL_DOMAIN_WIDE"
            - "GMAIL_SINGLE_USER"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "GOOGLE_DRIVE_SINGLE_USER"
            - "JIRA2"
            - "JIRA2_HOSTED"
            - "JIVE"
            - "JIVE_HOSTED"
            - "LITHIUM"
            - "MICROSOFT_DYNAMICS"
            - "PUSH"
            - "RSS"
            - "SALESFORCE"
            - "SHAREPOINT_ONLINE"
            - "SITECORE"
            - "SITEMAP"
            - "TWITTER2"
            - "WEB2"
            - "YOUTUBE"
          type: "string"
        fromRaw:
          type: "boolean"
        additionalComments:
          type: "string"
        owner:
          type: "string"
          example: "alice@mydomain.com"
        crawlerInstanceType:
          type: "string"
        configuration:
          $ref: "#/definitions/ExtendedConfig"
        id:
          type: "string"
        name:
          type: "string"
    FormAuthentication:
      type: "object"
      properties:
        inputs:
          items:
            $ref: "#/definitions/FormAuthenticationInput"
          type: "array"
        reauthenticate:
          type: "boolean"
        formURL:
          type: "string"
        actionMethod:
          enum:
            - "Post"
            - "Get"
          type: "string"
        secureURL:
          type: "string"
        actionURL:
          type: "string"
    XMLMetaData:
      type: "object"
      properties:
        name:
          type: "string"
        value:
          type: "string"
    SalesforceObject:
      type: "object"
      properties:
        name:
          type: "string"
        fields:
          items:
            $ref: "#/definitions/SalesforceField"
          type: "array"
        custom:
          type: "boolean"
        kbPublishStatus:
          $ref: "#/definitions/KbPublishStatus"
        hasCustomFiletype:
          type: "boolean"
        type:
          enum:
            - "SERVICE_CLOUD"
            - "CHATTER"
            - "CONTENT"
            - "KNOWLEDGEBASE"
            - "CUSTOM"
          type: "string"
        indexed:
          type: "boolean"
        label:
          type: "string"
        conditions:
          items:
            $ref: "#/definitions/SalesforceCondition"
          type: "array"
    BaseMappingsConfigurationModel:
      type: "object"
      properties:
        common:
          $ref: "#/definitions/BaseCommonMappingSettingsModel"
        types:
          items:
            $ref: "#/definitions/BaseTypedMappingSettingsModel«BaseRuleModel»"
          type: "array"
    UserIdentity:
      type: "object"
      properties:
        userName:
          type: "string"
        password:
          type: "string"
        name:
          type: "string"
    SinglePermissionModel:
      type: "object"
      description: |
        The single permission properties.
      properties:
        lastUpdateResult:
          enum:
            - "NONE"
            - "SUCCESS"
            - "ACCESS_DENIED"
            - "TIMED_OUT"
            - "ENTITY_IS_INVALID"
            - "ENTITY_IS_UNAVAILABLE"
            - "SECURITY_PROVIDER_IS_UNAVAILABLE"
            - "SECURITY_PROVIDER_IS_UNREACHABLE"
            - "SECURITY_PROVIDER_IS_NOT_READY"
            - "UNEXPECTED_ERROR"
          type: "string"
        additionalInfo:
          additionalProperties:
            type: "string"
          type: "object"
        securityProvider:
          type: "string"
          description: |
            The unique identifier of the security provider.

            **Sample value:**
            > `Email Security Provider`
        lastUpdateErrorDetail:
          type: "string"
        identityType:
          enum:
            - "USER"
            - "GROUP"
            - "VIRTUAL_GROUP"
            - "UNKNOWN"
          type: "string"
          description: |
            The identify type you want to allow access to the source content in search results.
        lastUpdateDate:
          type: "integer"
          format: "int64"
          example: "1499186150657"
          description: |
            The timestamp of the last update.

            **Sample value:**
            > `"1499186150657"`
        state:
          enum:
            - "UNKNOWN"
            - "UP_TO_DATE"
            - "NOT_UPDATED"
            - "OUT_OF_DATE"
            - "IN_ERROR"
            - "DISABLED"
          type: "string"
        allowed:
          type: "boolean"
          description: |
            Whether to allow access to the user or group.
        identity:
          type: "string"
          description: |
            The account name of the user or group.

            **Sample value:**
            > `"alice@coveo.com"`
    SourceInformation:
      type: "object"
      description : |
        **READ** The additionnal information related to the source.
      properties:
        collectionName:
          type: "string"
          example: "default"
          description: |
            The collection name.

            **Sample value:**
            > `default`
        collectionId:
          type: "integer"
          format: "int32"
          example: "42"
          description: |
            The unique identifier of the collection.

            **Sample value:**
            > `42`
        sourceId:
          type: "integer"
          format: "int32"
          example: "8818"
          description: |
            The unique identifier of the Coveo Cloud V2 source.

            **Sample value:**
            > `8818`
        nextOperation:
          $ref: "#/definitions/NextOperation"
          description: |
            The next scheduled operation for the source.
        rebuildRequired:
          type: "boolean"
          default: true
          description: |
            Whether a rebuild is required to complete the creation of the source.
        sourceStatus:
          $ref: "#/definitions/SourceStatus"
        sourceName:
          type: "string"
          example: "mysource"
          description: |
            The name of the source.

            **Sample value:**
            > `mysource`
        numberOfDocuments:
          type: "integer"
          format: "int64"
          example: "32"
          description: |
            The number of items in the source.

            **Sample value:**
            > `32`
        documentsTotalSize:
          type: "integer"
          format: "int64"
          example: "3254"
          description: |
            The added size of all items in the source.

            **Sample value:**
            > `3254`
        lastOperation:
          $ref: "#/definitions/SourceLastOperation"
    UserIdentityModel:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
        name:
          type: "string"
    DocumentProcessor:
      type: "object"
      properties:
        type:
          type: "string"
        parameters:
          $ref: "#/definitions/DocumentProcessorParameters"
    BaseTypedMappingSettingsModel«BaseRuleModel»:
      type: "object"
      properties:
        rules:
          items:
            $ref: "#/definitions/BaseRuleModel"
          type: "array"
        type:
          type: "string"
    Parameter:
      type: "object"
      properties:
        sensitive:
          type: "boolean"
        value:
          type: "string"
    BaseRuleModel:
      type: "object"
      properties:
        content:
          items:
            type: "string"
          type: "array"
        field:
          type: "string"
    DocumentPermissionModel:
      type: "object"
      description: |
        **READ-WRITE** The information related to the information levels.
      properties:
        state:
          enum:
            - "UNKNOWN"
            - "VALID"
            - "PENDING"
            - "INCOMPLETE"
            - "IN_ERROR"
          type: "string"
          description: |
            The state of the permissions.
        permissionLevels:
          items:
            $ref: "#/definitions/PermissionLevelModel"
          type: "array"
        lastUpdatedDate:
          type: "integer"
          format: "int64"
          example: "1499428896000"
          description: |
            The timestamp of the last update.

            **Sample value:**
            > `"1499428896000"`
    ConditionNode:
      type: "object"
    SecurityProviderModel:
      type: "object"
      properties:
        statistics:
          $ref: "#/definitions/SecurityProviderStatisticsModel"
        displayName:
          type: "string"
        name:
          type: "string"
        parameters:
          additionalProperties:
            $ref: "#/definitions/ParameterModel"
          type: "object"
        type:
          enum:
            - "ACTIVE_DIRECTORY"
            - "ACTIVE_DIRECTORY_WITHOUT_EXPANSION"
            - "ALFRESCO"
            - "BOX"
            - "CLAIMS"
            - "CLAIMS_TO_EMAIL"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CUSTOM"
            - "DATABASE"
            - "DROPBOX_FOR_BUSINESS"
            - "EMAIL"
            - "EXCHANGE"
            - "EXPANDED"
            - "FILE_SYSTEM"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "JIRA2"
            - "JIRA_LEGACY"
            - "JIVE"
            - "LDAP"
            - "LIFERAY"
            - "MICROSOFT_DYNAMICS"
            - "MICROSOFT_DYNAMICS_LEGACY"
            - "OFFICE365"
            - "OPENTEXT_CONTENT_SERVER"
            - "ORACLE_KNOWLEDGE"
            - "ORACLE_UCM"
            - "SALESFORCE"
            - "SALESFORCE_LEGACY"
            - "SHAREPOINT"
            - "SITECORE"
            - "SITECORE_LEGACY"
            - "WEBSPHERE_WCM"
            - "WINDCHILL"
            - "YAMMER"
          type: "string"
        organizationClusterId:
          type: "string"
        caseSensitive:
          type: "boolean"
        cascadingSecurityProviders:
          additionalProperties:
            $ref: "#/definitions/CascadingSecurityProvider"
          type: "object"
        currentStatus:
          $ref: "#/definitions/SecurityProviderCurrentStatusModel"
        nodeRequired:
          type: "boolean"
        lastRefreshOperation:
          $ref: "#/definitions/SecurityProviderLastRefreshOperationModel"
        id:
          type: "string"
        referencedBy:
          items:
            $ref: "#/definitions/SecurityProviderReferenceModel"
          type: "array"
        userIdentities:
          additionalProperties:
            $ref: "#/definitions/UserIdentityModel"
          type: "object"
    Permission:
      type: "object"
      properties:
        additionalInfo:
          additionalProperties:
            type: "string"
          type: "object"
        identityType:
          enum:
            - "Unknown"
            - "User"
            - "Group"
            - "VirtualGroup"
          type: "string"
        identity:
          type: "string"
        securityProvider:
          type: "string"
    PermissionSet:
      type: "object"
      properties:
        allowAnonymous:
          type: "boolean"
        deniedPermissions:
          items:
            $ref: "#/definitions/Permission"
          type: "array"
        allowedPermissions:
          items:
            $ref: "#/definitions/Permission"
          type: "array"
        name:
          type: "string"
    SourceLastOperation:
      type: "object"
      description: |
        The information related to a source last operation.
      properties:
        initialBuild:
          type: "boolean"
          description: |
            Whether the last operation was a `REBUILD` operation.
        timestamp:
          type: "integer"
          format: "int64"
          example: "1498498423127"
          description: |
            The unique time scheduled identifier or the last operation.

            **Sample value:**
            > `1498498423127`
        errorCode:
          type: "string"
          example: "SHAREPOINT_AUTHENTICATION_ERROR"
          description: |
            The name of the error.

            **Sample value:**
            > `SHAREPOINT_AUTHENTICATION_ERROR`
        result:
          type: "string"
          example: "SUCCESS"
          description: |
            The result of the operation.

            **Sample value:**
            > `SUCCESS`
        operationType:
          enum:
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
          example: "INCREMENTAL_REFRESH"
          description: |
            The type of operation applied on the source.
        numberOfDocuments:
          type: "integer"
          format: "int64"
          example: "34"
          description: |
            The number of added or changed items in the source.

            **Sample value:**
            > `34`
        id:
          type: "string"
          example: "1498498423127"
          description: |
            The unique identifier of the operation.

            **Sample value:**
            > `1498498423127`
    LanguageHint:
      type: "object"
      properties:
        probability:
          type: "number"
          format: "double"
        language:
          type: "string"
    BaseCommonMappingSettingsModel:
      type: "object"
      properties:
        rules:
          items:
            $ref: "#/definitions/BaseRuleModel"
          type: "array"
    SalesforceField:
      type: "object"
      properties:
        mandatory:
          type: "boolean"
        mappings:
          items:
            $ref: "#/definitions/MappingModel"
          type: "array"
        label:
          type: "string"
        relationshipNameField:
          type: "string"
        referenceTypes:
          items:
            type: "string"
          type: "array"
        values:
          items:
            type: "string"
          type: "array"
        relationshipName:
          type: "string"
        indexed:
          type: "boolean"
        custom:
          type: "boolean"
        type:
          type: "string"
        name:
          type: "string"
    SecurityProviderReferenceModel:
      type: "object"
      properties:
        attributes:
          type: "object"
        type:
          enum:
            - "SOURCE"
            - "SECURITY_PROVIDER"
          type: "string"
        id:
          type: "string"
    ParameterModel:
      type: "object"
      properties:
        sensitive:
          type: "boolean"
        value:
          type: "string"
    LightSourceModel:
      type: "object"
      properties:
        sourceType:
          enum:
            - "AMAZONS3"
            - "BOX"
            - "BOX_ENTERPRISE"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CONFLUENCE2_HOSTED"
            - "CUSTOM"
            - "DROPBOX"
            - "DROPBOX_FOR_BUSINESS"
            - "EXCHANGE"
            - "EXCHANGE_ENTERPRISE"
            - "GMAIL"
            - "GMAIL_DOMAIN_WIDE"
            - "GMAIL_SINGLE_USER"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "GOOGLE_DRIVE_SINGLE_USER"
            - "JIRA2"
            - "JIRA2_HOSTED"
            - "JIVE"
            - "JIVE_HOSTED"
            - "LITHIUM"
            - "MICROSOFT_DYNAMICS"
            - "PUSH"
            - "RSS"
            - "SALESFORCE"
            - "SHAREPOINT_ONLINE"
            - "SITECORE"
            - "SITEMAP"
            - "TWITTER2"
            - "WEB2"
            - "YOUTUBE"
          type: "string"
        crawlerInstanceType:
          type: "string"
        pushEnabled:
          type: "boolean"
        id:
          type: "string"
        name:
          type: "string"
    MappingsConfigurationModel:
      type: "object"
      properties:
        common:
          $ref: "#/definitions/CommonMappingSettingsModel"
        types:
          items:
            $ref: "#/definitions/TypedMappingSettingsModel"
          type: "array"
    ExtensionSettings:
      type: "object"
      properties:
        other:
          $ref: "#/definitions/ExtensionSetting"
        noExtension:
          $ref: "#/definitions/ExtensionSetting"
        byExtensions:
          items:
            $ref: "#/definitions/ExtensionSettingByExtension"
          type: "array"
        byContentTypes:
          items:
            $ref: "#/definitions/ExtensionSettingByExtension"
          type: "array"
    SourceModel:
      type: "object"
      properties:
        configurationError:
          $ref: "#/definitions/ConfigurationError"
        customParameters:
          additionalProperties:
            type: "string"
          type: "object"
          description: |
            **READ-WRITE** The custom parameters related to a source.
        id:
          type: "string"
          example: "mysource"
          description: |
            **READ** The unique identifier of the Coveo Cloud V2 source.

            **Sample value:**
            > `vglab7jw7er2ftz7vxosdskhvu-myorganisationid`

        information:
          $ref: "#/definitions/SourceInformation"
        mappings:
          items:
            $ref: "#/definitions/MappingModel"
          type: "array"
        name:
          type: "string"
          required: true
          description: |
            **READ-WRITE** The name of the source. This parameter cannot be null nor empty when creating a source.

            **Sample value:**
            > `"mysource"`
        owner:
          type: "string"
          description: |
            **READ-WRITE** The owner of the source.

            **Sample value:**
            > `"alice@mydomain.com"`
        permissions:
          $ref: "#/definitions/DocumentPermissionModel"
        postConversionExtensions:
          items:
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        preConversionExtensions:
          items:
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        pushEnabled:
          type: "boolean"
          required: true
          description: |
            Whether the source is push enabled. When creating a push type source, for instance a `SITECORE` source, `pushEnabled` needs to be set to `true` for the source to be created.
        securityProviderReferences:
          type: "string"
          description: |
            **READ-WRITE** The name of the security provider. Must be present to link a source to a security provider.

            **Note:**
            > Once a security provider is named, it can not be renamed. The `displayName` is a different entity and can be changed.

            **Sample value:**
            > `"Email Security Provider"`
        sourceType:
          type: "string"
          required: true
          description: |
            **READ-WRITE** The type of the Coveo Cloud V2 source.
          enum:
              - "AMAZONS3"
              - "BOX"
              - "BOX_ENTERPRISE"
              - "CONFLUENCE"
              - "CONFLUENCE2"
              - "CONFLUENCE2_HOSTED"
              - "CUSTOM"
              - "DROPBOX"
              - "DROPBOX_FOR_BUSINESS"
              - "EXCHANGE"
              - "EXCHANGE_ENTERPRISE"
              - "GMAIL"
              - "GMAIL_DOMAIN_WIDE"
              - "GMAIL_SINGLE_USER"
              - "GOOGLE_DRIVE_DOMAIN_WIDE"
              - "GOOGLE_DRIVE_SINGLE_USER"
              - "JIRA2"
              - "JIRA2_HOSTED"
              - "JIVE"
              - "JIVE_HOSTED"
              - "LITHIUM"
              - "MICROSOFT_DYNAMICS"
              - "PUSH"
              - "RSS"
              - "SALESFORCE"
              - "SHAREPOINT_ONLINE"
              - "SITECORE"
              - "SITEMAP"
              - "TWITTER2"
              - "WEB2"
              - "YOUTUBE"
        sourceVisibility:
          description: |
            **READ-WRITE** The security parameter value of the source.
          enum:
            - "PRIVATE"
            - "SECURED"
            - "SHARED"
          type: "string"
          required: true
          example: "SHARED"

        urlFilters:
          items:
            $ref: "#/definitions/UrlFilter"
          type: "array"
      example:
        sourceType: "WEB2"
        name: "mySource"
        sourceVisibility: "SHARED"
        pushEnabled: false
        urls: ["http://example.com"]
    SourceExtensionModel:
      type: "object"
      description: |
        **READ-WRITE** The conversion extension applied to the source.
      properties:
        actionOnError:
          type: "string"
          example: "SKIP_EXTENSION"
          description: |
            The command to execute when there is an error.

            **Sample value:**
            > `"SKIP_EXTENSION"`
        parameters:
          additionalProperties:
          type: "object"
          description: |
            The added parameters related to the extension.
        versionId:
          type: "string"
        extensionId:
          type: "string"
          example: "coveointernaltesting1-xpb73sckqsmcaqmyxtocizkkti"
          description: |
            The unique identifier of the extension script.

            **Sample value:**
            > `"mysource-xpb73sckqsmcaqmyxtocizkkti"`
        itemType:
          type: "string"
        condition:
          type: "boolean"
          example: '"%[meta1]" == "your_user_ID"'
    DocumentProcessorParameters:
      type: "object"
      properties:
        values:
          additionalProperties:
            type: "string"
          type: "object"
        deleteOnError:
          type: "boolean"
        condition:
          $ref: "#/definitions/ConditionNode"
    NextOperation:
      type: "object"
      description: |
        The next scheduled operation details.
      properties:
        timestamp:
          type: "integer"
          description: |
            The unique scheduled time identifier for the operation.

            **Sample value:**
            > `"1498498427628"`
          format: "int64"
          example: "1498498427628"
        operationType:
          enum:
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
          description: |
            The type of scheduled operation.
    SalesforceInConditionValue:
      type: "object"
      properties:
        type:
          enum:
            - "SOQL_STRING"
            - "SOQL_ID"
            - "SOQL_DATETIME"
            - "SOQL_BOOLEAN"
            - "SOQL_OTHER"
          type: "string"
        value:
          type: "string"
    ExtendedDataFile:
      type: "object"
      properties:
        sensitive:
          type: "boolean"
        data:
          type: "string"
        extendedData:
          type: "object"
    CharsetDetectionHint:
      type: "object"
      properties:
        confidence:
          type: "number"
          format: "double"
        charset:
          type: "string"
    SourceExtensionsModel:
      type: "object"
      properties:
        postConversionExtensions:
          items:
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        preConversionExtensions:
          items:
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
    ExtensionSetting:
      type: "object"
      properties:
        openResultWithQuickView:
          type: "boolean"
        customConverter:
          $ref: "#/definitions/DocumentProcessor"
        converter:
          enum:
            - "Detect"
            - "Skip"
            - "Html"
            - "IFilter"
            - "Wordperfect"
            - "Rtf"
            - "Excel"
            - "Word"
            - "Pdf"
            - "Powerpoint"
            - "PlainText"
            - "Zip"
            - "Xml"
            - "Msg"
            - "Mime"
            - "Image"
          type: "string"
        generateThumbnail:
          type: "boolean"
        summarizeDocument:
          type: "boolean"
        saveExcerptBlob:
          type: "boolean"
        convertDirectlyToHtml:
          type: "boolean"
        indexContainer:
          type: "boolean"
        fileTypeValue:
          type: "string"
        excerptSource:
          enum:
            - "Document"
            - "Summary"
          type: "string"
        action:
          enum:
            - "Retrieve"
            - "Reference"
            - "Ignore"
          type: "string"
        actionOnError:
          enum:
            - "Reference"
            - "Ignore"
          type: "string"
        useContentType:
          type: "boolean"
        useExternalHTMLGenerator:
          type: "boolean"
    DocumentProcessorConfig:
      type: "object"
      properties:
        summarizeDocument:
          type: "boolean"
        maxTextOutputSize:
          type: "integer"
          format: "int32"
        addRawTextDataStream:
          type: "boolean"
        openResultWithQuickView:
          type: "boolean"
        indexMeta:
          type: "boolean"
        beautifyDocuments:
          type: "boolean"
        generateMobileHTML:
          type: "boolean"
        fieldMappingOrigin:
          type: "string"
        summarySize:
          type: "integer"
          format: "int32"
        titleGrammaticalScoreWeight:
          type: "number"
          format: "double"
        reportProgressionTimeout:
          type: "integer"
          format: "int32"
        imageMinimumSize:
          type: "integer"
          format: "int32"
        xmlrecordDefinitions:
          items:
            $ref: "#/definitions/XMLRecordDefinition"
          type: "array"
        excerptSource:
          enum:
            - "Document"
            - "Summary"
          type: "string"
        extensionSettings:
          $ref: "#/definitions/ExtensionSettings"
        indexExcelNumbers:
          type: "boolean"
        timeout:
          type: "integer"
          format: "int32"
        titlePositionScoreWeight:
          type: "number"
          format: "double"
        titleLengthProbabilityWeight:
          type: "number"
          format: "double"
        styleSheet:
          type: "string"
        generateHTML:
          type: "boolean"
        titlePercentageOfCapsFirstLettersWeight:
          type: "number"
          format: "double"
        languagesSettings:
          type: "string"
        languageHints:
          items:
            $ref: "#/definitions/LanguageHint"
          type: "array"
        charsetDetectionHint:
          $ref: "#/definitions/CharsetDetectionHint"
        saveExcerptBlob:
          type: "boolean"
        maxHTMLOutputSize:
          type: "integer"
          format: "int32"
        excelFloatingPointPrecision:
          type: "integer"
          format: "int32"
        maximumNumberOfPagesToConvert:
          type: "integer"
          format: "int32"
        useClickableUriAsBasePath:
          type: "boolean"
    PermissionLevelModel:
      type: "object"
      description: |
        The complete list of permission sets.
      properties:
        permissionSets:
          items:
            $ref: "#/definitions/PermissionSetModel"
          type: "array"
        name:
          type: "string"
          enum:
            - "allowedPermissions"
            - "deniedPermissions"
          description: |
            The name of the permission set.
    SourceExtensionsMap:
      type: "object"
      properties:
        items:
          additionalProperties:
            $ref: "#/definitions/SourceExtensionsModel"
          type: "object"
        common:
          $ref: "#/definitions/SourceExtensionsModel"
    ExtendedConfig:
      type: "object"
      properties:
        dataFiles:
          additionalProperties:
            $ref: "#/definitions/DataFile"
          type: "object"
        parameters:
          additionalProperties:
            $ref: "#/definitions/Parameter"
          type: "object"
        addressPatterns:
          items:
            $ref: "#/definitions/AddressPattern"
          type: "array"
        startingAddresses:
          items:
            type: "string"
          type: "array"
        dbConnectionString:
          type: "string"
        documentConsumerURI:
          type: "string"
        sourceSecurityOption:
          enum:
            - "Retrieve"
            - "Specified"
            - "Merge"
          type: "string"
        caseSensitivePatterns:
          type: "boolean"
        securityProviders:
          additionalProperties:
            $ref: "#/definitions/SecurityProvider"
          type: "object"
        authenticationForms:
          additionalProperties:
            $ref: "#/definitions/FormAuthentication"
          type: "object"
        metricsEnabled:
          type: "boolean"
        extendedDataFiles:
          additionalProperties:
            $ref: "#/definitions/ExtendedDataFile"
          type: "object"
        sourceInformation:
          $ref: "#/definitions/SourceInformation"
        documentConfig:
          $ref: "#/definitions/DocumentConfig"
        indexIdentifier:
          type: "string"
        userIdentities:
          additionalProperties:
            $ref: "#/definitions/UserIdentity"
          type: "object"
        permissions:
          items:
            $ref: "#/definitions/PermissionLevel"
          type: "array"
    FormAuthenticationInput:
      type: "object"
      properties:
        type:
          enum:
            - "Text"
            - "Password"
            - "Checkbox"
            - "Radio"
            - "Submit"
            - "Reset"
            - "File"
            - "Hidden"
            - "Image"
            - "Button"
          type: "string"
        name:
          type: "string"
        value:
          type: "string"
    RuleModel:
      type: "object"
      properties:
        content:
          items:
            type: "string"
          type: "array"
        field:
          type: "string"
        id:
          type: "string"
    AddressPattern:
      type: "object"
      properties:
        expression:
          type: "string"
        patternType:
          enum:
            - "Wildcard"
            - "RegEx"
          type: "string"
        allowed:
          type: "boolean"
    DataFile:
      type: "object"
      properties:
        sensitive:
          type: "boolean"
        data:
          type: "string"
    SecurityProviderCurrentStatusModel:
      type: "object"
      properties:
        numberOfEntitiesInError:
          type: "integer"
          format: "int32"
        refreshType:
          enum:
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
        type:
          enum:
            - "CREATING"
            - "DISABLED"
            - "REFRESHING"
            - "PAUSED"
            - "PAUSED_ON_ERROR"
            - "IDLE"
            - "ERROR"
            - "PUSH_READY"
          type: "string"
        totalNumberOfEntities:
          type: "integer"
          format: "int32"
        numberOfEntitiesProcessed:
          type: "integer"
          format: "int32"
    TypedMappingSettingsModel:
      type: "object"
      properties:
        rules:
          items:
            $ref: "#/definitions/RuleModel"
          type: "array"
        type:
          type: "string"
        id:
          type: "string"
    ExtensionSettingByExtension:
      type: "object"
      properties:
        extensionSetting:
          $ref: "#/definitions/ExtensionSetting"
        extensions:
          items:
            type: "string"
          type: "array"
    CascadingSecurityProvider:
      type: "object"
      properties:
        type:
          enum:
            - "ACTIVE_DIRECTORY"
            - "ACTIVE_DIRECTORY_WITHOUT_EXPANSION"
            - "ALFRESCO"
            - "BOX"
            - "CLAIMS"
            - "CLAIMS_TO_EMAIL"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CUSTOM"
            - "DATABASE"
            - "DROPBOX_FOR_BUSINESS"
            - "EMAIL"
            - "EXCHANGE"
            - "EXPANDED"
            - "FILE_SYSTEM"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "JIRA2"
            - "JIRA_LEGACY"
            - "JIVE"
            - "LDAP"
            - "LIFERAY"
            - "MICROSOFT_DYNAMICS"
            - "MICROSOFT_DYNAMICS_LEGACY"
            - "OFFICE365"
            - "OPENTEXT_CONTENT_SERVER"
            - "ORACLE_KNOWLEDGE"
            - "ORACLE_UCM"
            - "SALESFORCE"
            - "SALESFORCE_LEGACY"
            - "SHAREPOINT"
            - "SITECORE"
            - "SITECORE_LEGACY"
            - "WEBSPHERE_WCM"
            - "WINDCHILL"
            - "YAMMER"
          type: "string"
        id:
          type: "string"
        name:
          type: "string"
    UrlFilter:
      type: "object"
      description: |
        **READ-WRITE** The url filters that are applied.
      properties:
        filter:
          type: "string"
          description: |
            The string containing the url filter.

            **Sample value:**
            > `"http://www.coveo.com/en/*"`
          example: "http://www.coveo.com/en/*"
        filterType:
          enum:
            - "WILDCARD"
            - "REGEX"
          type: "string"
          description: |
            The type of url filter.
        includeFilter:
          type: "boolean"
          description: |
            Whether to include or to exclude urls matching the filter.
    CommonMappingSettingsModel:
      type: "object"
      properties:
        rules:
          items:
            $ref: "#/definitions/RuleModel"
          type: "array"
    SecurityProviderLastRefreshOperationModel:
      type: "object"
      properties:
        timestamp:
          type: "integer"
          format: "int64"
        numberOfEntitiesProcessed:
          type: "integer"
          format: "int32"
        errorCode:
          type: "string"
          description: |
            The name of the error.
        result:
          type: "string"
        operationType:
          enum:
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
        id:
          type: "string"
    SalesforceCondition:
      type: "object"
      properties:
        operator:
          enum:
            - "EQUALS"
            - "NOT_EQUALS"
            - "LESS_THAN"
            - "LESS_OR_EQUAL_THAN"
            - "GREATER_THAN"
            - "GREATER_OR_EQUAL_THAN"
            - "LIKE"
            - "NOT_LIKE"
            - "INCLUDES"
            - "EXCLUDES"
            - "IN"
            - "NOT_IN"
          type: "string"
        inConditionValues:
          items:
            $ref: "#/definitions/SalesforceInConditionValue"
          type: "array"
        fieldName:
          type: "string"
        value:
          type: "string"
    ConfigurationError:
      type: "object"
      description: |
        **READ** The information given when a source creation fails.
      properties:
        errorCode:
          type: "string"
          example: "INVALID_SOURCE_CONFIGURATION"
          description: |
            The name of the error.

            **Sample value:**
            > `"INVALID_SOURCE_CONFIGURATION"`
        message:
          type: "string"
          example: "Push sources can only be push enabled sources."
          description: |
            A verbose description of the error.

            **Sample value:**
            > `"Push sources can only be push enabled sources."`
    JsonStringIdWrapper:
      type: "object"
      properties:
        id:
          type: "string"
          description: |
            The unique identifier of the Coveo Cloud V2 source.
    PermissionSetModel:
      type: "object"
      description: |
        The complete list of permissions.
      properties:
        anonymousAllowed:
          type: "boolean"
          description: |
            Whether to allow anonymous access.
        name:
          enum:
            - "allowedPermissions"
            - "deniedPermissions"
          type: "string"
          description: |
            The unique identifier for the set.
        lastUpdatedDate:
          type: "integer"
          format: "int64"
          description: |
            The timestamp of the last update.

            **Sample value:**
            > `"1499428896000"`
        permissions:
          items:
            $ref: "#/definitions/SinglePermissionModel"
          type: "array"
    DocumentConfig:
      type: "object"
      properties:
        preConversions:
          items:
            $ref: "#/definitions/DocumentProcessor"
          type: "array"
        indexUri:
          type: "string"
        documentProcessorConfig:
          $ref: "#/definitions/DocumentProcessorConfig"
        postConversions:
          items:
            $ref: "#/definitions/DocumentProcessor"
          type: "array"
    SecurityProviderStatisticsModel:
      type: "object"
      properties:
        numberOfEntitiesInError:
          type: "integer"
          format: "int32"
        numberOfEntitiesByState:
          additionalProperties:
            type: "integer"
            format: "int32"
          type: "object"
        totalNumberOfEntities:
          type: "integer"
          format: "int32"
    SourceStatus:
      type: "object"
      description: |
        The information related to the last or actual refresh operation.
      properties:
        initialBuild:
          type: "boolean"
          example: "true"
          description: |
            Whether the last operation was a `REBUILD` operation.
        timestamp:
          type: "integer"
          format: "int64"
          example: "1498498423127"
          description: |
            The unique time identifier of the actual refresh operation.
            When there is no present operation running, the timestamp is the unique time identifier of the last runned operation.

            **Sample value:**
            > `1498498423127`
        refreshType:
          enum:
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
          example: "FULL_REFRESH"
          description: |
            The type of refresh operation applied to the source.
        allowedOperations:
          items:
            enum:
              - "ORG_PROVISIONING_CHECK"
              - "SOURCE_CREATE"
              - "SOURCE_DELETE"
              - "REBUILD"
              - "FULL_REFRESH"
              - "INCREMENTAL_REFRESH"
              - "IDLE"
              - "ROLLBACK_TO"
              - "REFRESH_CANCEL"
              - "SOURCE_PAUSE"
              - "SOURCE_RESUME"
              - "PUSH_SOURCE_CREATE"
              - "PUSH_CONFIG_CHANGE"
              - "COMMIT"
              - "CREATE"
              - "DELETE"
              - "DISABLE"
              - "DUPLICATE"
              - "ENABLE"
              - "UPDATE"
              - "START"
              - "STOP"
              - "PAUSE"
              - "RESUME"
              - "SYNCHRONIZE"
              - "BACKUP"
              - "RECOVER"
              - "REFRESH"
              - "REFRESH_ENTITIES_IN_ERROR"
              - "REFRESH_ENTITY"
              - "RESIZE"
              - "RESTORE"
              - "IMPORT"
              - "CONFIG_CHANGE"
              - "CONFIG_CREATE"
              - "CHANGE_READ_ONLY"
              - "CHANGE_ONLINE"
              - "TEST"
              - "UPGRADE"
              - "SCHEDULE_CREATE"
              - "SCHEDULE_CHANGE"
              - "SCHEDULE_DELETE"
            type: "string"
            example: "REBUILD"
            description: |
              The list of all allowed operations for this source.
          type: "array"
        pausedOnErrorCode:
          type: "string"
          description: |
            The error code returned when `PAUSED_ON_ERROR` operation is applied to the source.
        numberOfDocuments:
          type: "integer"
          description: |
            The number of added or modified items for this operation.

            **Sample value:**
            > `3`
          format: "int64"
          example: "3"
        type:
          enum:
            - "CREATING"
            - "DISABLED"
            - "REFRESHING"
            - "PAUSED"
            - "PAUSED_ON_ERROR"
            - "IDLE"
            - "ERROR"
            - "PUSH_READY"
          type: "string"
          description: |
            The type of operation applied to the source.
    KbPublishStatus: 
      type: "object"
      properties: 
        archived: 
          type: "boolean"
        draft: 
          type: "boolean"
        online: 
          type: "boolean"
  swagger: "2.0"

