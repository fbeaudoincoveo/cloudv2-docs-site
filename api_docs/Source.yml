---
  info: 
    termsOfService: "Coveo API terms of service"
    contact: 
      url: "www.coveo.com"
      name: "Coveo"
      email: "support@coveo.com"
    description: |
      The Source API allows you to:
      * Manage sources in a Coveo Cloud V2 organization.
      * Manage metadata mapping rules.
      * Manage which indexing pipeline extensions apply for a source. 

      **Note:**
      > If you need to create, update, or delete fields in a Coveo Cloud V2 organization index, you must use the
      > [Index API](Index).
      >
      > If you need to test, create, update, or delete indexing pipeline extensions, you must use the
      >[Extension API](Extension).
    license: {}
    title: "Source API Reference - Coveo Cloud V2"
    version: "1.0"
  paths: 
    /rest/sourceTokenRetriever/gmail/authorize: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/gmail/authorize_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "redirect_uri"
            required: true
            type: "string"
            name: "redirect_uri"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "authorizeGmail"
        summary: "Authorize Gmail"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "authorizeGmailUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId_put"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/JsonStringIdWrapper"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/SourceModel"
            description: "sourceModel"
            required: true
            name: "sourceModel"
            in: "body"
          - 
            description: "updateSecurityProviders"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          - 
            description: "rebuild"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "updateSource"
        summary: "Update a source from simple configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateSourceUsingPUT"
      delete: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId_delete"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "deleteSource"
        summary: "Delete a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "deleteSourceUsingDELETE"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getSource"
        summary: "Get a single source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getSourceUsingGET"
    /rest/sourceTokenRetriever/dropbox/authorize: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/dropbox/authorize_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "redirect_uri"
            required: true
            type: "string"
            name: "redirect_uri"
            in: "query"
          - 
            description: "is_for_business"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "is_for_business"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "authorizeDropbox"
        summary: "Authorize Dropbox"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "authorizeDropboxUsingGET"
    /rest/sourceconfiguration/salesforce/objects: 
      post: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          - 
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          - 
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          - 
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
            description: "inputObjects"
            required: true
            name: "inputObjects"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "refreshObjects"
        summary: "Refresh objects"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "refreshObjectsUsingPOST"
      get: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          - 
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          - 
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          - 
            description: "serviceCloudIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "serviceCloudIndexed"
          - 
            description: "knowledgeIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "knowledgeIndexed"
          - 
            description: "contentIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "contentIndexed"
          - 
            description: "chatterIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "chatterIndexed"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "getObjects"
        summary: "Get objects"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getObjectsUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types/{typeId}: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId_put"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/TypedMappingSettingsModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseTypedMappingSettingsModel«BaseRuleModel»"
            description: "typedMappingSettingsModel"
            required: true
            name: "typedMappingSettingsModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "updateMappingTypeSettings"
        summary: "Update an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateMappingTypeSettingsUsingPUT"
      delete: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "deleteMappingType"
        summary: "Delete an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "deleteMappingTypeUsingDELETE"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/TypedMappingSettingsModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getMappingTypeSettings"
        summary: "Get an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getMappingTypeSettingsUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/stopRefresh: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/stopRefresh_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "stopRefresh"
        summary: "Stop the current refresh operation on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "stopRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/schedules: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/schedules_post"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/ScheduleModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/ScheduleModel"
            description: "sourceScheduleModel"
            required: true
            name: "sourceScheduleModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "createSourceSchedule"
        summary: "Create a new schedule for the source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createSourceScheduleUsingPOST"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/schedules_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/ScheduleModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getSourceSchedules"
        summary: "Get all source schedules"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getSourceSchedulesUsingGET"
    /rest/sourceTokenRetriever/box/personal/tokens: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/box/personal/tokens_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "state"
            required: true
            type: "string"
            name: "state"
            in: "query"
          - 
            description: "code"
            required: true
            type: "string"
            name: "code"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "getBoxPersonalTokens"
        summary: "Get Box Personal tokens"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getBoxPersonalTokensUsingGET"
    /rest/organizations/{organizationId}/sources/raw: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/raw_post"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/JsonStringIdWrapper"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/RawSourceConfig"
            description: "platformSourceConfig"
            required: true
            name: "platformSourceConfig"
            in: "body"
          - 
            description: "updateSecurityProviders"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          - 
            description: "rebuild"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "createRawSource"
        summary: "Create a source from raw configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createRawSourceUsingPOST"
    /rest/globalsources: 
      get: 
        uiOperationId: "/rest/globalsources_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SourceOrganizationModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "page"
            format: "int32"
            default: 0
            required: false
            in: "query"
            type: "integer"
            name: "page"
          - 
            description: "perPage"
            format: "int32"
            default: 100
            required: false
            in: "query"
            type: "integer"
            name: "perPage"
        produces: 
          - "*/*"
        tags: 
          - "Global Sources"
        x-pretty-name: "getAllSources"
        summary: "Get all sources of all organizations"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getAllSourcesUsingGET"
    /rest/defaultmappings/versions/{version}/sourceType/{sourceType}: 
      get: 
        uiOperationId: "/rest/defaultmappings/versions/paramId/sourceType/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/DefaultSourceMappingsModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "version"
            required: true
            type: "string"
            name: "version"
            in: "path"
          - 
            enum: 
              - "AMAZONS3"
              - "BOX"
              - "BOX_ENTERPRISE"
              - "CONFLUENCE"
              - "CONFLUENCE2"
              - "CONFLUENCE2_HOSTED"
              - "CUSTOM"
              - "DROPBOX"
              - "DROPBOX_FOR_BUSINESS"
              - "EXCHANGE"
              - "EXCHANGE_ENTERPRISE"
              - "GMAIL"
              - "GMAIL_DOMAIN_WIDE"
              - "GMAIL_SINGLE_USER"
              - "GOOGLE_DRIVE_DOMAIN_WIDE"
              - "GOOGLE_DRIVE_SINGLE_USER"
              - "JIRA2"
              - "JIRA2_HOSTED"
              - "JIVE"
              - "JIVE_HOSTED"
              - "LITHIUM"
              - "MICROSOFT_DYNAMICS"
              - "PUSH"
              - "RSS"
              - "SALESFORCE"
              - "SHAREPOINT_ONLINE"
              - "SITECORE"
              - "SITEMAP"
              - "TWITTER2"
              - "WEB2"
              - "YOUTUBE"
            description: "sourceType"
            required: true
            in: "path"
            type: "string"
            name: "sourceType"
        produces: 
          - "*/*"
        tags: 
          - "Default Mappings"
        x-pretty-name: "getDefaultSourceMappingsByVersion"
        summary: "Get default mappings for specified version and source type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getDefaultSourceMappingsByVersionUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types_post"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/TypedMappingSettingsModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseTypedMappingSettingsModel«BaseRuleModel»"
            description: "typedMappingSettings"
            required: true
            name: "typedMappingSettings"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "addMappingTypes"
        summary: "Add a new item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "addMappingTypesUsingPOST"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/TypedMappingSettingsModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getMappingTypes"
        summary: "Get all item types"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getMappingTypesUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types/{typeId}/rules/{ruleId}: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules/paramId_put"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/RuleModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          - 
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseRuleModel"
            description: "baseRule"
            required: true
            name: "baseRule"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "updateMappingTypeSettingsRule"
        summary: "Update a mapping rule for an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateMappingTypeSettingsRuleUsingPUT"
      delete: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules/paramId_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          - 
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "deleteMappingTypeSettingsRule"
        summary: "Delete a mapping rule for an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "deleteMappingTypeSettingsRuleUsingDELETE"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/RuleModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          - 
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getMappingTypeSettingsRule"
        summary: "Get a mapping rule for an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getMappingTypeSettingsRuleUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/raw: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/raw_put"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/JsonStringIdWrapper"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/RawSourceConfig"
            description: "platformSourceConfig"
            required: true
            name: "platformSourceConfig"
            in: "body"
          - 
            description: "updateSecurityProviders"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          - 
            description: "rebuild"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "updateRawSource"
        summary: "Update a source from raw configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateRawSourceUsingPUT"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/raw_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/RawSourceConfig"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getRawSource"
        summary: "Get the raw configuration of a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getRawSourceUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/fullRefresh: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/fullRefresh_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "fullRefresh"
        summary: "Apply a full refresh operation on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "fullRefreshUsingPOST"
    /rest/sourceTokenRetriever/box/personal/authorize: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/box/personal/authorize_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "redirect_uri"
            required: true
            type: "string"
            name: "redirect_uri"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "authorizeBoxPersonal"
        summary: "Authorize Box Personal"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "authorizeBoxPersonalUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/light: 
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/light_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getLightSource"
        summary: "Get a single source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getLightSourceUsingGET"
    /rest/sourceconfiguration/salesforce/parseOTG: 
      post: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/parseOTG_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            schema: 
              type: "string"
            description: "objectsToGetXml"
            required: true
            name: "objectsToGetXml"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "parseOTG"
        summary: "Parse an ObjectsToGet to a schema"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "parseOTGUsingPOST"
    /rest/organizations/{organizationId}/defaultmappings: 
      get: 
        uiOperationId: "/rest/organizations/paramId/defaultmappings_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/ValueModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Default Mappings"
        x-pretty-name: "getDefaultMappingsVersionByOrganization"
        summary: "Get default mappings version for specified organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getDefaultMappingsVersionByOrganizationUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/pauseRefresh: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/pauseRefresh_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "pauseRefresh"
        summary: "Pause the current refresh operation on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "pauseRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/startRefresh: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/startRefresh_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "startRefresh"
        summary: "Start a refresh operation on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "startRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/extensions: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/extensions_put"
        responses: 
          200: 
            description: "OK"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/SourceExtensionsMap"
            description: "extensions"
            required: true
            name: "extensions"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Source Extensions"
        x-pretty-name: "setSourceExtensions"
        summary: "Sets the extensions on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "setSourceExtensionsUsingPUT"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/extensions_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceExtensionsMap"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Source Extensions"
        x-pretty-name: "getSourceExtensions"
        summary: "Get extensions set on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getSourceExtensionsUsingGET"
    /rest/organizations/{organizationId}/sources/fields/{fieldId}: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/fields/paramId_put"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fieldId"
            required: true
            type: "string"
            name: "fieldId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/SourceFieldModel"
            description: "fieldModel"
            required: true
            name: "fieldModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "updateField"
        summary: "Update a field for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateFieldUsingPUT"
      delete: 
        uiOperationId: "/rest/organizations/paramId/sources/fields/paramId_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fieldId"
            required: true
            type: "string"
            name: "fieldId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "removeField"
        summary: "Removes a specific field from an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "removeFieldUsingDELETE"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/fields/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/FieldModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fieldId"
            required: true
            type: "string"
            name: "fieldId"
            in: "path"
          - 
            description: "includeMappings"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "includeMappings"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getField"
        summary: "Get a single field for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getFieldUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/applyChanges: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/applyChanges_post"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "applyChanges"
        summary: "Apply pending changes on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "applyChangesUsingPOST"
    /rest/sourceTokenRetriever/dropbox/tokens: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/dropbox/tokens_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            schema: 
              type: "string"
            description: "redirectUri"
            required: false
            name: "redirectUri"
            in: "body"
          - 
            description: "code"
            required: true
            type: "string"
            name: "code"
            in: "query"
          - 
            description: "is_for_business"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "is_for_business"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "getDropboxTokens"
        summary: "Get Dropbox tokens"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getDropboxTokensUsingGET"
    /rest/organizations/{organizationId}/sources/fields/batch/create: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/fields/batch/create_post"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              items: 
                $ref: "#/definitions/SourceFieldModel"
              type: "array"
            description: "fieldModels"
            required: true
            name: "fieldModels"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "createFields"
        summary: "Creates fields for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createFieldsUsingPOST"
    /rest/sourceTokenRetriever/gmail/tokens: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/gmail/tokens_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "state"
            required: true
            type: "string"
            name: "state"
            in: "query"
          - 
            description: "code"
            required: true
            type: "string"
            name: "code"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "getGmailTokens"
        summary: "Get Gmail tokens"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getGmailTokensUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/rebuild: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/rebuild_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "rebuild"
        summary: "Apply a rebuild operation on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "rebuildUsingPOST"
    /rest/sourceTokenRetriever/gmail/personal/tokens: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/gmail/personal/tokens_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "state"
            required: true
            type: "string"
            name: "state"
            in: "query"
          - 
            description: "code"
            required: true
            type: "string"
            name: "code"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "getGmailPersonalTokens"
        summary: "Get Gmail Personal tokens"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getGmailPersonalTokensUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/enable: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/enable_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "enable"
        summary: "Enable schedules on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "enableUsingPOST"
    /rest/sourceconfiguration/salesforce/schema: 
      post: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/schema_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          - 
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          - 
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          - 
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
            description: "inputSchema"
            required: true
            name: "inputSchema"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "refreshSchema"
        summary: "Refresh complete schema (objects and fields)"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "refreshSchemaUsingPOST"
      get: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/schema_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          - 
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          - 
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          - 
            description: "serviceCloudIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "serviceCloudIndexed"
          - 
            description: "knowledgeIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "knowledgeIndexed"
          - 
            description: "contentIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "contentIndexed"
          - 
            description: "chatterIndexed"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "chatterIndexed"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "getSchema"
        summary: "Get complete schema (objects and fields)"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getSchemaUsingGET"
    /rest/organizations/{organizationId}/sources/fields/batch/update: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/fields/batch/update_put"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              items: 
                $ref: "#/definitions/SourceFieldModel"
              type: "array"
            description: "fieldModels"
            required: true
            name: "fieldModels"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "updateFields"
        summary: "Update a field for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateFieldsUsingPUT"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/common/rules: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules_post"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/RuleModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseRuleModel"
            description: "ruleModel"
            required: true
            name: "ruleModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "addCommonMappingSettingsRule"
        summary: "Add a new common mapping rule"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "addCommonMappingSettingsRuleUsingPOST"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/RuleModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getCommonMappingSettingsRules"
        summary: "Get all common mapping rules"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getCommonMappingSettingsRulesUsingGET"
    /rest/sourceTokenRetriever/drive/personal/authorize: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/drive/personal/authorize_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "redirect_uri"
            required: true
            type: "string"
            name: "redirect_uri"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "authorizeDrivePersonal"
        summary: "Authorize Google Drive Personal"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "authorizeDrivePersonalUsingGET"
    /rest/organizations/{organizationId}/sources: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources_post"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/JsonStringIdWrapper"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/SourceModel"
            description: "sourceModel"
            required: true
            name: "sourceModel"
            in: "body"
          - 
            description: "updateSecurityProviders"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "updateSecurityProviders"
          - 
            description: "rebuild"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "createSource"
        summary: "Create a source from simple configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createSourceUsingPOST"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SourceModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getSources"
        summary: "Get all sources"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getSourcesUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/resumeRefresh: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/resumeRefresh_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "resumeRefresh"
        summary: "Resume the current refresh operation on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "resumeRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/tasks/abort: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/tasks/abort_post"
        responses: 
          200: 
            description: "OK"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "activityId"
            required: true
            type: "string"
            name: "activityId"
            in: "query"
          - 
            description: "abortReason"
            required: true
            type: "string"
            name: "abortReason"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "abortTaskForActivity"
        summary: "Abort a source task related to a given activity."
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "abortTaskForActivityUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/incrementalRefresh: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/incrementalRefresh_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "incrementalRefresh"
        summary: "Apply an incremental refresh operation on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "incrementalRefreshUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/common: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common_put"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/CommonMappingSettingsModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseCommonMappingSettingsModel"
            description: "commonMappingSettings"
            required: true
            name: "commonMappingSettings"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "updateCommonMappingSettings"
        summary: "Update common mapping configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateCommonMappingSettingsUsingPUT"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/CommonMappingSettingsModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getCommonMappingSettings"
        summary: "Get common mapping configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getCommonMappingSettingsUsingGET"
    /rest/organizations/{organizationId}/sources/snapshots/{snapshotId}: 
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/snapshots/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              type: "object"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "snapshotId"
            required: true
            type: "string"
            name: "snapshotId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getSnapshot"
        summary: "Gets a source config snapshot"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getSnapshotUsingGET"
    /rest/sourceTokenRetriever/salesforce/authorize: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/salesforce/authorize_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "redirect_uri"
            required: true
            type: "string"
            name: "redirect_uri"
            in: "query"
          - 
            description: "type"
            required: true
            type: "string"
            name: "type"
            in: "query"
          - 
            description: "promptLogin"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "promptLogin"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "authorizeSalesforce"
        summary: "Authorize Salesforce"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "authorizeSalesforceUsingGET"
    /rest/organizations/{organizationId}/sources/fields/batch/delete: 
      delete: 
        uiOperationId: "/rest/organizations/paramId/sources/fields/batch/delete_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "fields"
            items: 
              type: "string"
            required: true
            collectionFormat: "multi"
            in: "query"
            type: "array"
            name: "fields"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "removeFields"
        summary: "Removes fields from an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "removeFieldsUsingDELETE"
    /rest/organizations/{organizationId}/sources/{sourceId}/configuration/salesforce/evict: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/configuration/salesforce/evict_post"
        responses: 
          200: 
            description: "OK"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "evictSchemaForSource"
        summary: "Evict the salesforce schema of a source."
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "evictSchemaForSourceUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/schedules/{scheduleId}: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/schedules/paramId_put"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/ScheduleModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "scheduleId"
            required: true
            type: "string"
            name: "scheduleId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/ScheduleModel"
            description: "sourceScheduleModel"
            required: true
            name: "sourceScheduleModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "updateSourceSchedule"
        summary: "Update a source schedule"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateSourceScheduleUsingPUT"
      delete: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/schedules/paramId_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "scheduleId"
            required: true
            type: "string"
            name: "scheduleId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "deleteSourceSchedule"
        summary: "Delete a source schedule"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "deleteSourceScheduleUsingDELETE"
    /rest/organizations/{organizationId}/sources/page/fields: 
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/page/fields_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/FieldModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "includeMappings"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "includeMappings"
          - 
            enum: 
              - "LONG"
              - "LONG_64"
              - "DOUBLE"
              - "DATE"
              - "STRING"
            description: "type"
            required: false
            in: "query"
            type: "string"
            name: "type"
          - 
            description: "filter"
            required: false
            type: "string"
            name: "filter"
            in: "query"
          - 
            description: "sortBy"
            default: "name"
            required: false
            in: "query"
            type: "string"
            name: "sortBy"
          - 
            description: "order"
            default: "ASC"
            required: false
            in: "query"
            type: "string"
            name: "order"
          - 
            description: "page"
            format: "int32"
            default: 0
            required: false
            in: "query"
            type: "integer"
            name: "page"
          - 
            description: "perPage"
            format: "int32"
            default: 100
            required: false
            in: "query"
            type: "integer"
            name: "perPage"
          - 
            enum: 
              - "ALL"
              - "USER"
              - "SYSTEM"
            description: "origin"
            default: "ALL"
            required: false
            in: "query"
            type: "string"
            name: "origin"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getFields"
        summary: "Get a page of fields for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getFieldsUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/types/{typeId}/rules: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules_post"
        responses: 
          201: 
            description: "Created"
            schema: 
              $ref: "#/definitions/RuleModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseRuleModel"
            description: "baseRule"
            required: true
            name: "baseRule"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "addMappingTypeSettingRule"
        summary: "Add a new mapping rule for an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "addMappingTypeSettingRuleUsingPOST"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/types/paramId/rules_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/RuleModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "typeId"
            required: true
            type: "string"
            name: "typeId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getMappingTypeSettingRules"
        summary: "Get all mapping rules for an item type"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getMappingTypeSettingRulesUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings_put"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/MappingsConfigurationModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseMappingsConfigurationModel"
            description: "mappingsConfiguration"
            required: true
            name: "mappingsConfiguration"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "updateMappingsConfiguration"
        summary: "Update mapping configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateMappingsConfigurationUsingPUT"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/MappingsConfigurationModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getMappingsConfiguration"
        summary: "Get mapping configuration"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getMappingsConfigurationUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/configuration/salesforce/objects/{objectName}/fields: 
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/configuration/salesforce/objects/paramId/fields_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceField"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "objectName"
            required: true
            type: "string"
            name: "objectName"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "getFieldsForSource"
        summary: "Get an object fields for a given source."
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getFieldsForSourceUsingGET"
    /rest/sourceTokenRetriever/drive/personal/tokens: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/drive/personal/tokens_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "state"
            required: true
            type: "string"
            name: "state"
            in: "query"
          - 
            description: "code"
            required: true
            type: "string"
            name: "code"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "getDrivePersonalTokens"
        summary: "Get Google Drive Personal tokens"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getDrivePersonalTokensUsingGET"
    /rest/sourceconfiguration/salesforce/generateOTG: 
      post: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/generateOTG_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              type: "string"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            schema: 
              items: 
                $ref: "#/definitions/SalesforceObject"
              type: "array"
            description: "salesforceObjects"
            required: true
            name: "salesforceObjects"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "generateOTG"
        summary: "Generate an ObjectsToGet given a schema"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "generateOTGUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/pushRefresh: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/pushRefresh_post"
        responses: 
          200: 
            description: "OK"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            enum: 
              - "ORG_PROVISIONING_CHECK"
              - "SOURCE_CREATE"
              - "SOURCE_DELETE"
              - "REBUILD"
              - "FULL_REFRESH"
              - "INCREMENTAL_REFRESH"
              - "IDLE"
              - "ROLLBACK_TO"
              - "REFRESH_CANCEL"
              - "SOURCE_PAUSE"
              - "SOURCE_RESUME"
              - "PUSH_SOURCE_CREATE"
              - "PUSH_CONFIG_CHANGE"
              - "COMMIT"
              - "CREATE"
              - "DELETE"
              - "DISABLE"
              - "DUPLICATE"
              - "ENABLE"
              - "UPDATE"
              - "START"
              - "STOP"
              - "PAUSE"
              - "RESUME"
              - "SYNCHRONIZE"
              - "BACKUP"
              - "RECOVER"
              - "REFRESH"
              - "REFRESH_ENTITIES_IN_ERROR"
              - "REFRESH_ENTITY"
              - "RESIZE"
              - "RESTORE"
              - "IMPORT"
              - "CONFIG_CHANGE"
              - "CONFIG_CREATE"
              - "CHANGE_READ_ONLY"
              - "CHANGE_ONLINE"
              - "TEST"
              - "UPGRADE"
              - "SCHEDULE_CREATE"
              - "SCHEDULE_CHANGE"
              - "SCHEDULE_DELETE"
            description: "activityOperation"
            required: true
            in: "query"
            type: "string"
            name: "activityOperation"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "setPushRefreshStatus"
        summary: "Sets the refreshing state of a push source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "setPushRefreshStatusUsingPOST"
    /rest/organizations/{organizationId}/sources/{sourceId}/mappings/common/rules/{ruleId}: 
      put: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules/paramId_put"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/RuleModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
          - 
            schema: 
              $ref: "#/definitions/BaseRuleModel"
            description: "baseRule"
            required: true
            name: "baseRule"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "updateCommonMappingSettingsRule"
        summary: "Update a common mapping rule"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "updateCommonMappingSettingsRuleUsingPUT"
      delete: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules/paramId_delete"
        responses: 
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
          - 
            description: "rebuild"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "rebuild"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "deleteCommonMappingSettingsRule"
        summary: "Delete a common mapping rule"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "deleteCommonMappingSettingsRuleUsingDELETE"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/mappings/common/rules/paramId_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/RuleModel"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
          - 
            description: "ruleId"
            required: true
            type: "string"
            name: "ruleId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Mappings"
        x-pretty-name: "getCommonMappingSettingsRule"
        summary: "Get a common mapping rule"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getCommonMappingSettingsRuleUsingGET"
    /rest/sourceTokenRetriever/gmail/personal/authorize: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/gmail/personal/authorize_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "redirect_uri"
            required: true
            type: "string"
            name: "redirect_uri"
            in: "query"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "authorizeGmailPersonal"
        summary: "Authorize Gmail Personal"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "authorizeGmailPersonalUsingGET"
    /rest/organizations/{organizationId}/sources/{sourceId}/disable: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/paramId/disable_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              $ref: "#/definitions/SourceModel"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: true
            type: "string"
            name: "sourceId"
            in: "path"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "disable"
        summary: "Disable schedules on a source"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "disableUsingPOST"
    /rest/organizations/{organizationId}/sources/fields: 
      post: 
        uiOperationId: "/rest/organizations/paramId/sources/fields_post"
        responses: 
          201: 
            description: "Created"
          204: 
            description: "No Content"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            schema: 
              $ref: "#/definitions/SourceFieldModel"
            description: "fieldModel"
            required: true
            name: "fieldModel"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Sources"
        x-pretty-name: "createField"
        summary: "Creates a field for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "createFieldUsingPOST"
      get: 
        uiOperationId: "/rest/organizations/paramId/sources/fields_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/FieldModel"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "organizationId"
            required: true
            type: "string"
            name: "organizationId"
            in: "path"
          - 
            description: "sourceId"
            required: false
            type: "string"
            name: "sourceId"
            in: "query"
          - 
            description: "includeMappings"
            default: true
            required: false
            in: "query"
            type: "boolean"
            name: "includeMappings"
        produces: 
          - "*/*"
        deprecated: true
        tags: 
          - "Sources"
        x-pretty-name: "getFields"
        summary: "Get all fields for an organization"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getFieldsUsingGET"
    /rest/sourceTokenRetriever/salesforce/tokens: 
      get: 
        uiOperationId: "/rest/sourceTokenRetriever/salesforce/tokens_get"
        responses: 
          200: 
            description: "OK"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "code"
            required: false
            type: "string"
            name: "code"
            in: "query"
          - 
            description: "state"
            required: false
            type: "string"
            name: "state"
            in: "query"
          - 
            schema: 
              type: "string"
            description: "redirectUri"
            required: false
            name: "redirectUri"
            in: "body"
          - 
            schema: 
              type: "string"
            description: "rndValue"
            required: false
            name: "rndValue"
            in: "body"
          - 
            schema: 
              type: "string"
            description: "type"
            required: false
            name: "type"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Token Retriever"
        x-pretty-name: "getSalesforceTokens"
        summary: "Get Salesforce tokens"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getSalesforceTokensUsingGET"
    /rest/sourceconfiguration/salesforce/objects/{objectName}/fields: 
      post: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects/paramId/fields_post"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceField"
              type: "array"
          201: 
            description: "Created"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "objectName"
            required: true
            type: "string"
            name: "objectName"
            in: "path"
          - 
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          - 
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          - 
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
          - 
            schema: 
              items: 
                $ref: "#/definitions/SalesforceField"
              type: "array"
            description: "inputFields"
            required: true
            name: "inputFields"
            in: "body"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "refreshFields"
        summary: "Refresh fields for a given object"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "refreshFieldsUsingPOST"
      get: 
        uiOperationId: "/rest/sourceconfiguration/salesforce/objects/paramId/fields_get"
        responses: 
          200: 
            description: "OK"
            schema: 
              items: 
                $ref: "#/definitions/SalesforceField"
              type: "array"
          401: 
            description: "Unauthorized"
          403: 
            description: "Forbidden"
          404: 
            description: "Not Found"
        parameters: 
          - 
            description: "objectName"
            required: true
            type: "string"
            name: "objectName"
            in: "path"
          - 
            description: "refreshToken"
            required: true
            type: "string"
            name: "refreshToken"
            in: "query"
          - 
            description: "refreshTokenGuid"
            required: true
            type: "string"
            name: "refreshTokenGuid"
            in: "query"
          - 
            description: "sandbox"
            default: false
            required: false
            in: "query"
            type: "boolean"
            name: "sandbox"
        produces: 
          - "*/*"
        tags: 
          - "Salesforce Source Configuration"
        x-pretty-name: "getFields"
        summary: "Get fields for a given object"
        security: 
          - 
            oauth2: 
              - "full"
        consumes: 
          - "application/json"
        operationId: "getFieldsUsingGET"
  tags: 
    - 
      name: "Token Retriever"
      description: "Token Retriever Service Resource"
    - 
      name: "Global Sources"
      description: "Global Source Service Resource"
    - 
      name: "Mappings"
      description: "Mapping Resource"
    - 
      name: "Sources"
      description: "Operations specific to fields in sources"
    - 
      name: "Salesforce Source Configuration"
      description: "Salesforce Source Config Resource"
    - 
      name: "Default Mappings"
      description: "Default Mapping Service Resource"
    - 
      name: "Source Extensions"
      description: "Source Extension Service Resource"
  basePath: "/"
  securityDefinitions: 
    oauth2: 
      flow: "implicit"
      type: "oauth2"
      authorizationUrl: "https://platform.cloud.coveo.com/oauth/authorize"
      scopes: 
        full: "Required"
  host: "platform.cloud.coveo.com:443"
  definitions: 
    XMLRecordDefinition: 
      type: "object"
      properties: 
        body: 
          type: "string"
        dateFormat: 
          type: "string"
        author: 
          type: "string"
        uri: 
          type: "string"
        summary: 
          type: "string"
        uniqueId: 
          type: "string"
        date: 
          type: "string"
        title: 
          type: "string"
        root: 
          type: "string"
        unescapeXMLEntities: 
          type: "boolean"
        metaData: 
          items: 
            $ref: "#/definitions/XMLMetaData"
          type: "array"
    PermissionLevel: 
      type: "object"
      properties: 
        permissionSets: 
          items: 
            $ref: "#/definitions/PermissionSet"
          type: "array"
        name: 
          type: "string"
    MappingModel: 
      type: "object"
      properties: 
        kind: 
          enum: 
            - "COMMON"
            - "MAPPING"
            - "DEFAULT"
          type: "string"
        type: 
          type: "string"
        content: 
          type: "string"
        fieldTypeHint: 
          enum: 
            - "LONG"
            - "LONG_64"
            - "DOUBLE"
            - "DATE"
            - "STRING"
          type: "string"
        fieldName: 
          type: "string"
        extractionMethod: 
          type: "string"
        id: 
          type: "string"
    SecurityProvider: 
      type: "object"
      properties: 
        typeName: 
          type: "string"
        name: 
          type: "string"
    FieldMappingModel: 
      type: "object"
      properties: 
        sourceId: 
          type: "string"
        sourceName: 
          type: "string"
        mappings: 
          items: 
            $ref: "#/definitions/MappingModel"
          type: "array"
    ConditionNode: 
      type: "object"
    FormAuthentication: 
      type: "object"
      properties: 
        inputs: 
          items: 
            $ref: "#/definitions/FormAuthenticationInput"
          type: "array"
        reauthenticate: 
          type: "boolean"
        formURL: 
          type: "string"
        actionMethod: 
          enum: 
            - "Post"
            - "Get"
          type: "string"
        secureURL: 
          type: "string"
        actionURL: 
          type: "string"
    XMLMetaData: 
      type: "object"
      properties: 
        name: 
          type: "string"
        value: 
          type: "string"
    SalesforceObject: 
      type: "object"
      properties: 
        name: 
          type: "string"
        fields: 
          items: 
            $ref: "#/definitions/SalesforceField"
          type: "array"
        label: 
          type: "string"
        kbPublishStatus: 
          $ref: "#/definitions/KbPublishStatus"
        type: 
          enum: 
            - "SERVICE_CLOUD"
            - "CHATTER"
            - "CONTENT"
            - "KNOWLEDGEBASE"
            - "CUSTOM"
          type: "string"
        indexed: 
          type: "boolean"
        custom: 
          type: "boolean"
        conditions: 
          items: 
            $ref: "#/definitions/SalesforceCondition"
          type: "array"
    BaseMappingsConfigurationModel: 
      type: "object"
      properties: 
        common: 
          $ref: "#/definitions/BaseCommonMappingSettingsModel"
        types: 
          items: 
            $ref: "#/definitions/BaseTypedMappingSettingsModel«BaseRuleModel»"
          type: "array"
    UserIdentity: 
      type: "object"
      properties: 
        userName: 
          type: "string"
        password: 
          type: "string"
        name: 
          type: "string"
    SinglePermissionModel: 
      type: "object"
      properties: 
        lastUpdateResult: 
          enum: 
            - "NONE"
            - "SUCCESS"
            - "ACCESS_DENIED"
            - "TIMED_OUT"
            - "ENTITY_IS_INVALID"
            - "ENTITY_IS_UNAVAILABLE"
            - "SECURITY_PROVIDER_IS_UNAVAILABLE"
            - "SECURITY_PROVIDER_IS_UNREACHABLE"
            - "SECURITY_PROVIDER_IS_NOT_READY"
            - "UNEXPECTED_ERROR"
          type: "string"
        additionalInfo: 
          additionalProperties: 
            type: "string"
          type: "object"
        securityProvider: 
          type: "string"
        lastUpdateErrorDetail: 
          type: "string"
        identityType: 
          enum: 
            - "USER"
            - "GROUP"
            - "VIRTUAL_GROUP"
            - "UNKNOWN"
          type: "string"
        lastUpdateDate: 
          type: "integer"
          format: "int64"
        state: 
          enum: 
            - "UNKNOWN"
            - "UP_TO_DATE"
            - "NOT_UPDATED"
            - "OUT_OF_DATE"
            - "IN_ERROR"
            - "DISABLED"
          type: "string"
        allowed: 
          type: "boolean"
        identity: 
          type: "string"
    SourceInformation: 
      type: "object"
      properties: 
        collectionName: 
          type: "string"
        collectionId: 
          type: "integer"
          format: "int32"
        sourceId: 
          type: "integer"
          format: "int32"
        nextOperation: 
          $ref: "#/definitions/NextOperation"
        rebuildRequired: 
          type: "boolean"
        sourceStatus: 
          $ref: "#/definitions/SourceStatus"
        sourceName: 
          type: "string"
        numberOfDocuments: 
          type: "integer"
          format: "int64"
        documentsTotalSize: 
          type: "integer"
          format: "int64"
        lastOperation: 
          $ref: "#/definitions/SourceLastOperation"
    UserIdentityModel: 
      type: "object"
      properties: 
        username: 
          type: "string"
        password: 
          type: "string"
        name: 
          type: "string"
    DocumentProcessor: 
      type: "object"
      properties: 
        type: 
          type: "string"
        parameters: 
          $ref: "#/definitions/DocumentProcessorParameters"
    BaseTypedMappingSettingsModel«BaseRuleModel»: 
      type: "object"
      properties: 
        rules: 
          items: 
            $ref: "#/definitions/BaseRuleModel"
          type: "array"
        type: 
          type: "string"
    Parameter: 
      type: "object"
      properties: 
        sensitive: 
          type: "boolean"
        value: 
          type: "string"
    BaseRuleModel: 
      type: "object"
      properties: 
        content: 
          items: 
            type: "string"
          type: "array"
        field: 
          type: "string"
    DocumentPermissionModel: 
      type: "object"
      properties: 
        state: 
          enum: 
            - "UNKNOWN"
            - "VALID"
            - "PENDING"
            - "INCOMPLETE"
            - "IN_ERROR"
          type: "string"
        permissionLevels: 
          items: 
            $ref: "#/definitions/PermissionLevelModel"
          type: "array"
        lastUpdatedDate: 
          type: "integer"
          format: "int64"
    ScheduleFrequency: 
      type: "object"
      properties: 
        monthDay: 
          type: "integer"
          format: "int32"
        hourMinute: 
          $ref: "#/definitions/HourMinutePair"
        weekDays: 
          items: 
            enum: 
              - "MONDAY"
              - "TUESDAY"
              - "WEDNESDAY"
              - "THURSDAY"
              - "FRIDAY"
              - "SATURDAY"
              - "SUNDAY"
            type: "string"
          type: "array"
        value: 
          type: "integer"
          format: "int32"
        type: 
          enum: 
            - "MINUTELY"
            - "HOURLY"
            - "DAILY"
            - "WEEKLY"
            - "MONTHLY"
          type: "string"
    SalesforceField: 
      type: "object"
      properties: 
        mandatory: 
          type: "boolean"
        mappings: 
          items: 
            $ref: "#/definitions/MappingModel"
          type: "array"
        label: 
          type: "string"
        relationshipNameField: 
          type: "string"
        referenceTypes: 
          items: 
            type: "string"
          type: "array"
        values: 
          items: 
            type: "string"
          type: "array"
        relationshipName: 
          type: "string"
        indexed: 
          type: "boolean"
        custom: 
          type: "boolean"
        type: 
          type: "string"
        name: 
          type: "string"
    SecurityProviderModel: 
      type: "object"
      properties: 
        statistics: 
          $ref: "#/definitions/SecurityProviderStatisticsModel"
        displayName: 
          type: "string"
        name: 
          type: "string"
        parameters: 
          additionalProperties: 
            $ref: "#/definitions/ParameterModel"
          type: "object"
        type: 
          enum: 
            - "ACTIVE_DIRECTORY"
            - "ACTIVE_DIRECTORY_WITHOUT_EXPANSION"
            - "ALFRESCO"
            - "BOX"
            - "CLAIMS"
            - "CLAIMS_TO_EMAIL"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CUSTOM"
            - "DATABASE"
            - "DROPBOX_FOR_BUSINESS"
            - "EMAIL"
            - "EXCHANGE"
            - "EXPANDED"
            - "FILE_SYSTEM"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "JIRA2"
            - "JIRA_LEGACY"
            - "JIVE"
            - "LDAP"
            - "LIFERAY"
            - "MICROSOFT_DYNAMICS"
            - "MICROSOFT_DYNAMICS_LEGACY"
            - "OFFICE365"
            - "OPENTEXT_CONTENT_SERVER"
            - "ORACLE_KNOWLEDGE"
            - "ORACLE_UCM"
            - "SALESFORCE"
            - "SALESFORCE_LEGACY"
            - "SHAREPOINT"
            - "SITECORE"
            - "SITECORE_LEGACY"
            - "WEBSPHERE_WCM"
            - "WINDCHILL"
            - "YAMMER"
          type: "string"
        organizationClusterId: 
          type: "string"
        caseSensitive: 
          type: "boolean"
        cascadingSecurityProviders: 
          additionalProperties: 
            $ref: "#/definitions/CascadingSecurityProvider"
          type: "object"
        currentStatus: 
          $ref: "#/definitions/SecurityProviderCurrentStatusModel"
        nodeRequired: 
          type: "boolean"
        lastRefreshOperation: 
          $ref: "#/definitions/SecurityProviderLastRefreshOperationModel"
        id: 
          type: "string"
        referencedBy: 
          items: 
            $ref: "#/definitions/SecurityProviderReferenceModel"
          type: "array"
        userIdentities: 
          additionalProperties: 
            $ref: "#/definitions/UserIdentityModel"
          type: "object"
    Permission: 
      type: "object"
      properties: 
        additionalInfo: 
          additionalProperties: 
            type: "string"
          type: "object"
        identityType: 
          enum: 
            - "Unknown"
            - "User"
            - "Group"
            - "VirtualGroup"
          type: "string"
        identity: 
          type: "string"
        securityProvider: 
          type: "string"
    AddressPattern: 
      type: "object"
      properties: 
        expression: 
          type: "string"
        patternType: 
          enum: 
            - "Wildcard"
            - "RegEx"
          type: "string"
        allowed: 
          type: "boolean"
    PermissionSet: 
      type: "object"
      properties: 
        allowAnonymous: 
          type: "boolean"
        deniedPermissions: 
          items: 
            $ref: "#/definitions/Permission"
          type: "array"
        allowedPermissions: 
          items: 
            $ref: "#/definitions/Permission"
          type: "array"
        name: 
          type: "string"
    SourceLastOperation: 
      type: "object"
      properties: 
        initialBuild: 
          type: "boolean"
        timestamp: 
          type: "integer"
          format: "int64"
        errorCode: 
          type: "string"
        result: 
          type: "string"
        operationType: 
          enum: 
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
        numberOfDocuments: 
          type: "integer"
          format: "int64"
        id: 
          type: "string"
    LanguageHint: 
      type: "object"
      properties: 
        probability: 
          type: "number"
          format: "double"
        language: 
          type: "string"
    BaseCommonMappingSettingsModel: 
      type: "object"
      properties: 
        rules: 
          items: 
            $ref: "#/definitions/BaseRuleModel"
          type: "array"
    SourceExtensionModel: 
      type: "object"
      properties: 
        parameters: 
          additionalProperties: 
            type: "string"
          type: "object"
        versionId: 
          type: "string"
        extensionId: 
          type: "string"
        itemType: 
          type: "string"
        condition: 
          type: "string"
    ValueModel: 
      type: "object"
      properties: 
        value: 
          type: "string"
    SecurityProviderReferenceModel: 
      type: "object"
      properties: 
        attributes: 
          type: "object"
        type: 
          enum: 
            - "SOURCE"
            - "SECURITY_PROVIDER"
          type: "string"
        id: 
          type: "string"
    ParameterModel: 
      type: "object"
      properties: 
        sensitive: 
          type: "boolean"
        value: 
          type: "string"
    ScheduleModel: 
      type: "object"
      properties: 
        organizationId: 
          type: "string"
        resourceId: 
          type: "string"
        refreshType: 
          enum: 
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
        enabled: 
          type: "boolean"
        frequency: 
          $ref: "#/definitions/ScheduleFrequency"
        scheduleType: 
          enum: 
            - "SECURITY_CACHE"
            - "SOURCE"
          type: "string"
        id: 
          type: "string"
    RawSourceConfig: 
      type: "object"
      properties: 
        postConversionExtensions: 
          items: 
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        mappings: 
          items: 
            $ref: "#/definitions/MappingModel"
          type: "array"
        securityProviderReferences: 
          items: 
            type: "string"
          type: "array"
        securityProviders: 
          items: 
            $ref: "#/definitions/SecurityProviderModel"
          type: "array"
        pushEnabled: 
          type: "boolean"
        additionalInfos: 
          type: "object"
        preConversionExtensions: 
          items: 
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        sourceType: 
          enum: 
            - "AMAZONS3"
            - "BOX"
            - "BOX_ENTERPRISE"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CONFLUENCE2_HOSTED"
            - "CUSTOM"
            - "DROPBOX"
            - "DROPBOX_FOR_BUSINESS"
            - "EXCHANGE"
            - "EXCHANGE_ENTERPRISE"
            - "GMAIL"
            - "GMAIL_DOMAIN_WIDE"
            - "GMAIL_SINGLE_USER"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "GOOGLE_DRIVE_SINGLE_USER"
            - "JIRA2"
            - "JIRA2_HOSTED"
            - "JIVE"
            - "JIVE_HOSTED"
            - "LITHIUM"
            - "MICROSOFT_DYNAMICS"
            - "PUSH"
            - "RSS"
            - "SALESFORCE"
            - "SHAREPOINT_ONLINE"
            - "SITECORE"
            - "SITEMAP"
            - "TWITTER2"
            - "WEB2"
            - "YOUTUBE"
          type: "string"
        fromRaw: 
          type: "boolean"
        additionalComments: 
          type: "string"
        owner: 
          type: "string"
        crawlerInstanceType: 
          type: "string"
        configuration: 
          $ref: "#/definitions/ExtendedConfig"
        id: 
          type: "string"
        name: 
          type: "string"
    LightSourceModel: 
      type: "object"
      properties: 
        sourceType: 
          enum: 
            - "AMAZONS3"
            - "BOX"
            - "BOX_ENTERPRISE"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CONFLUENCE2_HOSTED"
            - "CUSTOM"
            - "DROPBOX"
            - "DROPBOX_FOR_BUSINESS"
            - "EXCHANGE"
            - "EXCHANGE_ENTERPRISE"
            - "GMAIL"
            - "GMAIL_DOMAIN_WIDE"
            - "GMAIL_SINGLE_USER"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "GOOGLE_DRIVE_SINGLE_USER"
            - "JIRA2"
            - "JIRA2_HOSTED"
            - "JIVE"
            - "JIVE_HOSTED"
            - "LITHIUM"
            - "MICROSOFT_DYNAMICS"
            - "PUSH"
            - "RSS"
            - "SALESFORCE"
            - "SHAREPOINT_ONLINE"
            - "SITECORE"
            - "SITEMAP"
            - "TWITTER2"
            - "WEB2"
            - "YOUTUBE"
          type: "string"
        crawlerInstanceType: 
          type: "string"
        pushEnabled: 
          type: "boolean"
        id: 
          type: "string"
        name: 
          type: "string"
    MappingsConfigurationModel: 
      type: "object"
      properties: 
        common: 
          $ref: "#/definitions/CommonMappingSettingsModel"
        types: 
          items: 
            $ref: "#/definitions/TypedMappingSettingsModel"
          type: "array"
    ExtensionSettings: 
      type: "object"
      properties: 
        other: 
          $ref: "#/definitions/ExtensionSetting"
        noExtension: 
          $ref: "#/definitions/ExtensionSetting"
        byExtensions: 
          items: 
            $ref: "#/definitions/ExtensionSettingByExtension"
          type: "array"
        byContentTypes: 
          items: 
            $ref: "#/definitions/ExtensionSettingByExtension"
          type: "array"
    SourceModel: 
      type: "object"
      properties: 
        postConversionExtensions: 
          items: 
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        customParameters: 
          additionalProperties: 
            type: "string"
          type: "object"
        name: 
          type: "string"
        information: 
          $ref: "#/definitions/SourceInformation"
        urlFilters: 
          items: 
            $ref: "#/definitions/UrlFilter"
          type: "array"
        pushEnabled: 
          type: "boolean"
        configurationError: 
          $ref: "#/definitions/ConfigurationError"
        securityProviderReferences: 
          items: 
            type: "string"
          type: "array"
        preConversionExtensions: 
          items: 
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        sourceVisibility: 
          enum: 
            - "PRIVATE"
            - "SECURED"
            - "SHARED"
          type: "string"
        owner: 
          type: "string"
        sourceType: 
          enum: 
            - "AMAZONS3"
            - "BOX"
            - "BOX_ENTERPRISE"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CONFLUENCE2_HOSTED"
            - "CUSTOM"
            - "DROPBOX"
            - "DROPBOX_FOR_BUSINESS"
            - "EXCHANGE"
            - "EXCHANGE_ENTERPRISE"
            - "GMAIL"
            - "GMAIL_DOMAIN_WIDE"
            - "GMAIL_SINGLE_USER"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "GOOGLE_DRIVE_SINGLE_USER"
            - "JIRA2"
            - "JIRA2_HOSTED"
            - "JIVE"
            - "JIVE_HOSTED"
            - "LITHIUM"
            - "MICROSOFT_DYNAMICS"
            - "PUSH"
            - "RSS"
            - "SALESFORCE"
            - "SHAREPOINT_ONLINE"
            - "SITECORE"
            - "SITEMAP"
            - "TWITTER2"
            - "WEB2"
            - "YOUTUBE"
          type: "string"
        permissions: 
          $ref: "#/definitions/DocumentPermissionModel"
        id: 
          type: "string"
        mappings: 
          items: 
            $ref: "#/definitions/MappingModel"
          type: "array"
    PageModel«SourceOrganizationModel»: 
      type: "object"
      properties: 
        totalPages: 
          type: "integer"
          format: "int32"
        items: 
          items: 
            $ref: "#/definitions/SourceOrganizationModel"
          type: "array"
        totalEntries: 
          type: "integer"
          format: "int64"
    DocumentProcessorParameters: 
      type: "object"
      properties: 
        values: 
          additionalProperties: 
            type: "string"
          type: "object"
        deleteOnError: 
          type: "boolean"
        condition: 
          $ref: "#/definitions/ConditionNode"
    NextOperation: 
      type: "object"
      properties: 
        timestamp: 
          type: "integer"
          format: "int64"
        operationType: 
          enum: 
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
    SalesforceInConditionValue: 
      type: "object"
      properties: 
        type: 
          enum: 
            - "SOQL_STRING"
            - "SOQL_ID"
            - "SOQL_DATETIME"
            - "SOQL_BOOLEAN"
            - "SOQL_OTHER"
          type: "string"
        value: 
          type: "string"
    ExtendedDataFile: 
      type: "object"
      properties: 
        sensitive: 
          type: "boolean"
        data: 
          type: "string"
        extendedData: 
          type: "object"
    CharsetDetectionHint: 
      type: "object"
      properties: 
        confidence: 
          type: "number"
          format: "double"
        charset: 
          type: "string"
    SourceExtensionsModel: 
      type: "object"
      properties: 
        postConversionExtensions: 
          items: 
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
        preConversionExtensions: 
          items: 
            $ref: "#/definitions/SourceExtensionModel"
          type: "array"
    ExtensionSetting: 
      type: "object"
      properties: 
        openResultWithQuickView: 
          type: "boolean"
        customConverter: 
          $ref: "#/definitions/DocumentProcessor"
        converter: 
          enum: 
            - "Detect"
            - "Skip"
            - "Html"
            - "IFilter"
            - "Wordperfect"
            - "Rtf"
            - "Excel"
            - "Word"
            - "Pdf"
            - "Powerpoint"
            - "PlainText"
            - "Zip"
            - "Xml"
            - "Msg"
            - "Mime"
            - "Image"
          type: "string"
        generateThumbnail: 
          type: "boolean"
        summarizeDocument: 
          type: "boolean"
        saveExcerptBlob: 
          type: "boolean"
        convertDirectlyToHtml: 
          type: "boolean"
        indexContainer: 
          type: "boolean"
        fileTypeValue: 
          type: "string"
        excerptSource: 
          enum: 
            - "Document"
            - "Summary"
          type: "string"
        action: 
          enum: 
            - "Retrieve"
            - "Reference"
            - "Ignore"
          type: "string"
        actionOnError: 
          enum: 
            - "Reference"
            - "Ignore"
          type: "string"
        useContentType: 
          type: "boolean"
        useExternalHTMLGenerator: 
          type: "boolean"
    DocumentProcessorConfig: 
      type: "object"
      properties: 
        summarizeDocument: 
          type: "boolean"
        maxTextOutputSize: 
          type: "integer"
          format: "int32"
        addRawTextDataStream: 
          type: "boolean"
        openResultWithQuickView: 
          type: "boolean"
        indexMeta: 
          type: "boolean"
        beautifyDocuments: 
          type: "boolean"
        generateMobileHTML: 
          type: "boolean"
        fieldMappingOrigin: 
          type: "string"
        summarySize: 
          type: "integer"
          format: "int32"
        titleGrammaticalScoreWeight: 
          type: "number"
          format: "double"
        reportProgressionTimeout: 
          type: "integer"
          format: "int32"
        imageMinimumSize: 
          type: "integer"
          format: "int32"
        xmlrecordDefinitions: 
          items: 
            $ref: "#/definitions/XMLRecordDefinition"
          type: "array"
        excerptSource: 
          enum: 
            - "Document"
            - "Summary"
          type: "string"
        extensionSettings: 
          $ref: "#/definitions/ExtensionSettings"
        indexExcelNumbers: 
          type: "boolean"
        timeout: 
          type: "integer"
          format: "int32"
        titlePositionScoreWeight: 
          type: "number"
          format: "double"
        titleLengthProbabilityWeight: 
          type: "number"
          format: "double"
        styleSheet: 
          type: "string"
        generateHTML: 
          type: "boolean"
        titlePercentageOfCapsFirstLettersWeight: 
          type: "number"
          format: "double"
        languagesSettings: 
          type: "string"
        languageHints: 
          items: 
            $ref: "#/definitions/LanguageHint"
          type: "array"
        charsetDetectionHint: 
          $ref: "#/definitions/CharsetDetectionHint"
        saveExcerptBlob: 
          type: "boolean"
        maxHTMLOutputSize: 
          type: "integer"
          format: "int32"
        excelFloatingPointPrecision: 
          type: "integer"
          format: "int32"
        maximumNumberOfPagesToConvert: 
          type: "integer"
          format: "int32"
        useClickableUriAsBasePath: 
          type: "boolean"
    PageModel«SourceFieldModel»: 
      type: "object"
      properties: 
        totalPages: 
          type: "integer"
          format: "int32"
        items: 
          items: 
            $ref: "#/definitions/SourceFieldModel"
          type: "array"
        totalEntries: 
          type: "integer"
          format: "int64"
    PermissionLevelModel: 
      type: "object"
      properties: 
        permissionSets: 
          items: 
            $ref: "#/definitions/PermissionSetModel"
          type: "array"
        name: 
          type: "string"
    FieldModel: 
      type: "object"
      properties: 
        multiValueFacetTokenizers: 
          type: "string"
        includeInResults: 
          type: "boolean"
        description: 
          type: "string"
        ranking: 
          type: "boolean"
        dateFormat: 
          type: "string"
        multiValueFacet: 
          type: "boolean"
        useCacheForComputedFacet: 
          type: "boolean"
        system: 
          type: "boolean"
        sort: 
          type: "boolean"
        facet: 
          type: "boolean"
        stemming: 
          type: "boolean"
        useCacheForNumericQuery: 
          type: "boolean"
        mergeWithLexicon: 
          type: "boolean"
        useCacheForSort: 
          type: "boolean"
        useCacheForNestedQuery: 
          type: "boolean"
        type: 
          enum: 
            - "LONG"
            - "LONG_64"
            - "DOUBLE"
            - "DATE"
            - "STRING"
          type: "string"
        includeInQuery: 
          type: "boolean"
        smartDateFacet: 
          type: "boolean"
        name: 
          type: "string"
    SourceExtensionsMap: 
      type: "object"
      properties: 
        items: 
          additionalProperties: 
            $ref: "#/definitions/SourceExtensionsModel"
          type: "object"
        common: 
          $ref: "#/definitions/SourceExtensionsModel"
    ExtendedConfig: 
      type: "object"
      properties: 
        dataFiles: 
          additionalProperties: 
            $ref: "#/definitions/DataFile"
          type: "object"
        parameters: 
          additionalProperties: 
            $ref: "#/definitions/Parameter"
          type: "object"
        addressPatterns: 
          items: 
            $ref: "#/definitions/AddressPattern"
          type: "array"
        startingAddresses: 
          items: 
            type: "string"
          type: "array"
        dbConnectionString: 
          type: "string"
        documentConsumerURI: 
          type: "string"
        sourceSecurityOption: 
          enum: 
            - "Retrieve"
            - "Specified"
            - "Merge"
          type: "string"
        caseSensitivePatterns: 
          type: "boolean"
        securityProviders: 
          additionalProperties: 
            $ref: "#/definitions/SecurityProvider"
          type: "object"
        authenticationForms: 
          additionalProperties: 
            $ref: "#/definitions/FormAuthentication"
          type: "object"
        metricsEnabled: 
          type: "boolean"
        extendedDataFiles: 
          additionalProperties: 
            $ref: "#/definitions/ExtendedDataFile"
          type: "object"
        sourceInformation: 
          $ref: "#/definitions/SourceInformation"
        documentConfig: 
          $ref: "#/definitions/DocumentConfig"
        indexIdentifier: 
          type: "string"
        userIdentities: 
          additionalProperties: 
            $ref: "#/definitions/UserIdentity"
          type: "object"
        permissions: 
          items: 
            $ref: "#/definitions/PermissionLevel"
          type: "array"
    SourceFieldModel: 
      type: "object"
      properties: 
        multiValueFacetTokenizers: 
          type: "string"
        includeInResults: 
          type: "boolean"
        description: 
          type: "string"
        ranking: 
          type: "boolean"
        dateFormat: 
          type: "string"
        multiValueFacet: 
          type: "boolean"
        useCacheForComputedFacet: 
          type: "boolean"
        system: 
          type: "boolean"
        name: 
          type: "string"
        facet: 
          type: "boolean"
        sort: 
          type: "boolean"
        sources: 
          items: 
            $ref: "#/definitions/LightSourceModel"
          type: "array"
        useCacheForNumericQuery: 
          type: "boolean"
        useCacheForSort: 
          type: "boolean"
        mergeWithLexicon: 
          type: "boolean"
        stemming: 
          type: "boolean"
        useCacheForNestedQuery: 
          type: "boolean"
        type: 
          enum: 
            - "LONG"
            - "LONG_64"
            - "DOUBLE"
            - "DATE"
            - "STRING"
          type: "string"
        includeInQuery: 
          type: "boolean"
        smartDateFacet: 
          type: "boolean"
        mappings: 
          items: 
            $ref: "#/definitions/FieldMappingModel"
          type: "array"
    FormAuthenticationInput: 
      type: "object"
      properties: 
        type: 
          enum: 
            - "Text"
            - "Password"
            - "Checkbox"
            - "Radio"
            - "Submit"
            - "Reset"
            - "File"
            - "Hidden"
            - "Image"
            - "Button"
          type: "string"
        name: 
          type: "string"
        value: 
          type: "string"
    RuleModel: 
      type: "object"
      properties: 
        content: 
          items: 
            type: "string"
          type: "array"
        field: 
          type: "string"
        id: 
          type: "string"
    DefaultSourceMappingsModel: 
      type: "object"
      properties: 
        defaultMappings: 
          items: 
            $ref: "#/definitions/MappingModel"
          type: "array"
        version: 
          type: "string"
        sourceType: 
          enum: 
            - "AMAZONS3"
            - "BOX"
            - "BOX_ENTERPRISE"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CONFLUENCE2_HOSTED"
            - "CUSTOM"
            - "DROPBOX"
            - "DROPBOX_FOR_BUSINESS"
            - "EXCHANGE"
            - "EXCHANGE_ENTERPRISE"
            - "GMAIL"
            - "GMAIL_DOMAIN_WIDE"
            - "GMAIL_SINGLE_USER"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "GOOGLE_DRIVE_SINGLE_USER"
            - "JIRA2"
            - "JIRA2_HOSTED"
            - "JIVE"
            - "JIVE_HOSTED"
            - "LITHIUM"
            - "MICROSOFT_DYNAMICS"
            - "PUSH"
            - "RSS"
            - "SALESFORCE"
            - "SHAREPOINT_ONLINE"
            - "SITECORE"
            - "SITEMAP"
            - "TWITTER2"
            - "WEB2"
            - "YOUTUBE"
          type: "string"
    DataFile: 
      type: "object"
      properties: 
        sensitive: 
          type: "boolean"
        data: 
          type: "string"
    SecurityProviderCurrentStatusModel: 
      type: "object"
      properties: 
        numberOfEntitiesInError: 
          type: "integer"
          format: "int32"
        refreshType: 
          enum: 
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
        type: 
          enum: 
            - "CREATING"
            - "DISABLED"
            - "DELETING"
            - "REFRESHING"
            - "PAUSED"
            - "IDLE"
            - "ERROR"
            - "PUSH_READY"
            - "PAUSING"
            - "RESUMING"
            - "CANCELING_REFRESH"
          type: "string"
        totalNumberOfEntities: 
          type: "integer"
          format: "int32"
        numberOfEntitiesProcessed: 
          type: "integer"
          format: "int32"
    TypedMappingSettingsModel: 
      type: "object"
      properties: 
        rules: 
          items: 
            $ref: "#/definitions/RuleModel"
          type: "array"
        type: 
          type: "string"
        id: 
          type: "string"
    ExtensionSettingByExtension: 
      type: "object"
      properties: 
        extensionSetting: 
          $ref: "#/definitions/ExtensionSetting"
        extensions: 
          items: 
            type: "string"
          type: "array"
    CascadingSecurityProvider: 
      type: "object"
      properties: 
        type: 
          enum: 
            - "ACTIVE_DIRECTORY"
            - "ACTIVE_DIRECTORY_WITHOUT_EXPANSION"
            - "ALFRESCO"
            - "BOX"
            - "CLAIMS"
            - "CLAIMS_TO_EMAIL"
            - "CONFLUENCE"
            - "CONFLUENCE2"
            - "CUSTOM"
            - "DATABASE"
            - "DROPBOX_FOR_BUSINESS"
            - "EMAIL"
            - "EXCHANGE"
            - "EXPANDED"
            - "FILE_SYSTEM"
            - "GOOGLE_DRIVE_DOMAIN_WIDE"
            - "JIRA2"
            - "JIRA_LEGACY"
            - "JIVE"
            - "LDAP"
            - "LIFERAY"
            - "MICROSOFT_DYNAMICS"
            - "MICROSOFT_DYNAMICS_LEGACY"
            - "OFFICE365"
            - "OPENTEXT_CONTENT_SERVER"
            - "ORACLE_KNOWLEDGE"
            - "ORACLE_UCM"
            - "SALESFORCE"
            - "SALESFORCE_LEGACY"
            - "SHAREPOINT"
            - "SITECORE"
            - "SITECORE_LEGACY"
            - "WEBSPHERE_WCM"
            - "WINDCHILL"
            - "YAMMER"
          type: "string"
        id: 
          type: "string"
        name: 
          type: "string"
    UrlFilter: 
      type: "object"
      properties: 
        filter: 
          type: "string"
        filterType: 
          enum: 
            - "WILDCARD"
            - "REGEX"
          type: "string"
        includeFilter: 
          type: "boolean"
    SourceOrganizationModel: 
      type: "object"
      properties: 
        organizationId: 
          type: "string"
        sourceId: 
          type: "string"
    SecurityProviderLastRefreshOperationModel: 
      type: "object"
      properties: 
        timestamp: 
          type: "integer"
          format: "int64"
        numberOfEntitiesProcessed: 
          type: "integer"
          format: "int32"
        errorCode: 
          type: "string"
        result: 
          type: "string"
        operationType: 
          enum: 
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
        id: 
          type: "string"
    SalesforceCondition: 
      type: "object"
      properties: 
        operator: 
          enum: 
            - "EQUALS"
            - "NOT_EQUALS"
            - "LESS_THAN"
            - "LESS_OR_EQUAL_THAN"
            - "GREATER_THAN"
            - "GREATER_OR_EQUAL_THAN"
            - "LIKE"
            - "NOT_LIKE"
            - "INCLUDES"
            - "EXCLUDES"
            - "IN"
            - "NOT_IN"
          type: "string"
        inConditionValues: 
          items: 
            $ref: "#/definitions/SalesforceInConditionValue"
          type: "array"
        fieldName: 
          type: "string"
        value: 
          type: "string"
    ConfigurationError: 
      type: "object"
      properties: 
        errorCode: 
          type: "string"
        message: 
          type: "string"
    JsonStringIdWrapper: 
      type: "object"
      properties: 
        id: 
          type: "string"
    PermissionSetModel: 
      type: "object"
      properties: 
        anonymousAllowed: 
          type: "boolean"
        name: 
          type: "string"
        lastUpdatedDate: 
          type: "integer"
          format: "int64"
        permissions: 
          items: 
            $ref: "#/definitions/SinglePermissionModel"
          type: "array"
    CommonMappingSettingsModel: 
      type: "object"
      properties: 
        rules: 
          items: 
            $ref: "#/definitions/RuleModel"
          type: "array"
    DocumentConfig: 
      type: "object"
      properties: 
        preConversions: 
          items: 
            $ref: "#/definitions/DocumentProcessor"
          type: "array"
        indexUri: 
          type: "string"
        documentProcessorConfig: 
          $ref: "#/definitions/DocumentProcessorConfig"
        postConversions: 
          items: 
            $ref: "#/definitions/DocumentProcessor"
          type: "array"
    SecurityProviderStatisticsModel: 
      type: "object"
      properties: 
        numberOfEntitiesInError: 
          type: "integer"
          format: "int32"
        numberOfEntitiesByState: 
          additionalProperties: 
            type: "integer"
            format: "int32"
          type: "object"
        totalNumberOfEntities: 
          type: "integer"
          format: "int32"
    SourceStatus: 
      type: "object"
      properties: 
        initialBuild: 
          type: "boolean"
        timestamp: 
          type: "integer"
          format: "int64"
        refreshType: 
          enum: 
            - "REBUILD"
            - "FULL_REFRESH"
            - "INCREMENTAL_REFRESH"
            - "DELETION"
            - "SECURITY_CACHE_REFRESH"
            - "SECURITY_CACHE_REFRESH_ENTITIES_IN_ERROR"
          type: "string"
        allowedOperations: 
          items: 
            enum: 
              - "ORG_PROVISIONING_CHECK"
              - "SOURCE_CREATE"
              - "SOURCE_DELETE"
              - "REBUILD"
              - "FULL_REFRESH"
              - "INCREMENTAL_REFRESH"
              - "IDLE"
              - "ROLLBACK_TO"
              - "REFRESH_CANCEL"
              - "SOURCE_PAUSE"
              - "SOURCE_RESUME"
              - "PUSH_SOURCE_CREATE"
              - "PUSH_CONFIG_CHANGE"
              - "COMMIT"
              - "CREATE"
              - "DELETE"
              - "DISABLE"
              - "DUPLICATE"
              - "ENABLE"
              - "UPDATE"
              - "START"
              - "STOP"
              - "PAUSE"
              - "RESUME"
              - "SYNCHRONIZE"
              - "BACKUP"
              - "RECOVER"
              - "REFRESH"
              - "REFRESH_ENTITIES_IN_ERROR"
              - "REFRESH_ENTITY"
              - "RESIZE"
              - "RESTORE"
              - "IMPORT"
              - "CONFIG_CHANGE"
              - "CONFIG_CREATE"
              - "CHANGE_READ_ONLY"
              - "CHANGE_ONLINE"
              - "TEST"
              - "UPGRADE"
              - "SCHEDULE_CREATE"
              - "SCHEDULE_CHANGE"
              - "SCHEDULE_DELETE"
            type: "string"
          type: "array"
        numberOfDocuments: 
          type: "integer"
          format: "int64"
        type: 
          enum: 
            - "CREATING"
            - "DISABLED"
            - "DELETING"
            - "REFRESHING"
            - "PAUSED"
            - "IDLE"
            - "ERROR"
            - "PUSH_READY"
            - "PAUSING"
            - "RESUMING"
            - "CANCELING_REFRESH"
          type: "string"
    HourMinutePair: 
      type: "object"
      properties: 
        minute: 
          type: "integer"
          format: "int32"
        hour: 
          type: "integer"
          format: "int32"
    KbPublishStatus: 
      type: "object"
      properties: 
        archived: 
          type: "boolean"
        draft: 
          type: "boolean"
        online: 
          type: "boolean"
  swagger: "2.0"

