---
  swagger: "2.0"
  info: 
    title: "Search API Reference - Coveo Cloud"
    version: "1.0.0"
    description: |
      The Search API allows you to:
      * Process search requests and send them to the index.
      * Manage and apply query pipelines.
      * Create search tokens, and manage SharePoint or SAML authentication
      providers.
    termsOfService: "http://www.coveo.com/en/support/terms-agreements"
    contact: 
      name: "support@coveo.com"
    license: 
      name: ""
      url: ""
  tags: 
    - 
      name: "default"
      description: "Exposes a few ops-related APIs."
    - 
      name: "Search"
      description: "Exposes the search related methods from Search API."
    - 
      name: "Organizations"
      description: "Exposes APIs to manage organizations."
    - 
      name: "Pipelines"
      description: "Exposes APIs to manage pipelines"
  paths: 
    /rest/organizations/{organizationId}/authentication/sharepoint/{id}: 
      delete: 
        operationId: "deleteSharePointAuthentication"
        tags: 
          - "Organizations"
        summary: "Deletes a SharePoint authentication from an organization"
        parameters: 
          - 
            name: "id"
            description: "The SharePoint authentication ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "loadSharePointAuthentication"
        tags: 
          - "Organizations"
        summary: "Loads a single SharePoint authentication from an organization"
        parameters: 
          - 
            name: "id"
            description: "The sharepoint authentication ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/OutgoingSharePointAuthentication"
      put: 
        operationId: "updateSharePointAuthentication"
        tags: 
          - "Organizations"
        summary: "Updates a SharePoint authentication in an organization"
        parameters: 
          - 
            name: "sharepoint"
            description: "The SharePoint authentication data"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingSharePointAuthentication"
          - 
            name: "id"
            description: "The SharePoint authentication ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/admin/pipelines/{pipelineId}/statements/{statementId}/move: 
      put: 
        operationId: "Move a pipeline statement"
        tags: 
          - "Pipelines"
        summary: "Move a pipeline statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "statement"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingMoveStatement"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/search/querySuggest: 
      post: 
        operationId: "querySuggest"
        tags: 
          - "Search"
        summary: "Query suggest method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "autoCompleter"
            description: ""
            required: false
            defaultValue: "default"
            in: "formData"
            type: "string"
          - 
            name: "additionalData"
            description: ""
            required: false
            defaultValue: "{}"
            in: "formData"
            type: "undefined"
          - 
            name: "count"
            description: ""
            required: false
            defaultValue: "5"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "enableWordCompletion"
            description: "Whether to enable word completion\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "undefined"
          - 
            name: "pipeline"
            description: "The query pipeline (pass an empty string to use an empty pipeline).\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "q"
            description: "The basic query expression.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "language"
            description: "Deprecated."
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "locale"
            description: ""
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "tab"
            description: "Represent the current Tab name in use.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "searchHub"
            description: "Represents the search dimension name.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "debug"
            description: "Whether to include debug info in the results.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "format"
            description: "The format of the results.\n"
            required: false
            defaultValue: "json"
            in: "formData"
            type: "string"
          - 
            name: "recommendation"
            description: "Represent the current Recommendation id in use.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "context"
            description: "Value of the context JSON object to use.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "undefined"
          - 
            name: "actionsHistory"
            description: "The action history of the current user.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "undefined"
          - 
            name: "indexToken"
            description: "A token that you can pass to always make queries using the same index\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "querySuggest"
        tags: 
          - "Search"
        summary: "Query suggest method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "autoCompleter"
            description: ""
            required: false
            defaultValue: "default"
            in: "query"
            type: "string"
          - 
            name: "additionalData"
            description: ""
            required: false
            defaultValue: "{}"
            in: "query"
            type: "undefined"
          - 
            name: "count"
            description: ""
            required: false
            defaultValue: "5"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "enableWordCompletion"
            description: "Whether to enable word completion\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "undefined"
          - 
            name: "pipeline"
            description: "The query pipeline (pass an empty string to use an empty pipeline).\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "q"
            description: "The basic query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "language"
            description: "Deprecated."
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "locale"
            description: ""
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "tab"
            description: "Represent the current Tab name in use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "searchHub"
            description: "Represents the search dimension name.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "debug"
            description: "Whether to include debug info in the results.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "format"
            description: "The format of the results.\n"
            required: false
            defaultValue: "json"
            in: "query"
            type: "string"
          - 
            name: "recommendation"
            description: "Represent the current Recommendation id in use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "context"
            description: "Value of the context JSON object to use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "undefined"
          - 
            name: "actionsHistory"
            description: "The action history of the current user.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "undefined"
          - 
            name: "indexToken"
            description: "A token that you can pass to always make queries using the same index\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /api/ops/organizations/{organizationId}: 
      delete: 
        operationId: "organizations"
        tags: 
          - "default"
        summary: "Deletes organization specified from search api if it doesn't exist in the cloud platform"
        parameters: 
          - 
            name: "organizationId"
            description: "The id of the organization to delete"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "organizations"
        tags: 
          - "default"
        summary: "Gets a search api organization cloud status"
        parameters: 
          - 
            name: "organizationId"
            description: "The id of the organization"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/tagDocument: 
      get: 
        operationId: "tagDocument"
        tags: 
          - "Search"
        summary: "Tag a document"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "doAdd"
            required: false
            defaultValue: "true"
            in: "query"
            type: "boolean"
          - 
            name: "fieldValue"
            description: "The field value."
            required: true
            in: "query"
            type: "string"
          - 
            name: "fieldName"
            description: "The field name."
            required: true
            in: "query"
            type: "string"
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/text: 
      get: 
        operationId: "text"
        tags: 
          - "Search"
        summary: "Get the text version for a document"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/token: 
      post: 
        operationId: "token"
        tags: 
          - "Search"
        summary: "Create a search token"
        description: |
          *Search tokens* are special JSON web tokens (see [https://jwt.io/](https://jwt.io/)) which can be used to
          execute queries on the Coveo Cloud V2 Platform as a specific user. Search tokens are intended to be used in
          JavaScript code running in a web browser, typically along with the Coveo JavaScript Search Framework (see
          [JavaScript Search Framework V1 Home](https://developers.coveo.com/x/OIGfAQ)).

          A search token automatically expires after a certain amount of time (24 hours).

          Typically, you will want to use search token authentication when the users of your search page are
          authenticated, and some (or all) of your indexed content is secured. In such a use case, each user
          transparently gets a unique search token, allowing the search interface to securely return only the items
          which the user has the right to see.
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "body"
            description: "The information about the token."
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/RestTokenParams"
        responses: 
          200:
            description: "Success"
            schema: 
              #type: "TokenModel"
              $ref: "#/definitions/TokenModel"
            examples:
              application/json:
                token: "fzKjcHdjPJKJVaJ2OjK0fSwiZXhwIJpYXQiOjE0lQGN"
    /rest/organizations/{organizationId}/indexes/onpremises/status: 
      get: 
        operationId: "loadOnPremisesIndexStatus"
        tags: 
          - "Organizations"
        summary: "Gets the status of a on premises index for an organization"
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/OnPremisesIndexStatus"
    /rest/search/admin/pipelines/{pipelineId}/statements/export: 
      get: 
        operationId: "Export pipeline statements"
        tags: 
          - "Pipelines"
        summary: "Export pipeline statements"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "feature"
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/organizations/{organization}/authentication: 
      get: 
        operationId: "listAuthentications"
        tags: 
          - "Organizations"
        summary: "Lists all authentication providers for an organization"
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/OutgoingSharePointAuthentication"
    /rest/search/rating: 
      post: 
        operationId: "rating"
        tags: 
          - "Search"
        summary: "Update user rating"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "rating"
            description: "The rate to be updated."
            required: true
            in: "query"
            type: "string"
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/organizations/{organizationId}/indexes/onpremises: 
      get: 
        operationId: "loadOnPremisesIndexStatus"
        tags: 
          - "Organizations"
        summary: "Gets the url of the on premises index for an organization"
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/OnPremisesIndex"
      put: 
        operationId: "loadOnPremisesIndexStatus"
        tags: 
          - "Organizations"
        summary: "Sets the url, client and server certificates of the on premises index for an organization"
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: ""
    /rest/search/fields: 
      get: 
        operationId: "fields"
        tags: 
          - "Search"
        summary: "Get the list of fields"
        produces: 
          - "application/json"
        parameters: []
        responses: 
          200: 
            description: "No response"
    /rest/search/: 
      post: 
        operationId: "search"
        tags: 
          - "Search"
        summary: "Search request to the Search API"
        produces: 
          - "application/json"
          - "application/xml"
        parameters:
          -
            name: "queryParameters"
            type: "object"
            in: "body"
            schema:
              $ref: "#/definitions/IncomingQueryParameters"
        responses:
          200:
            description: "OK"
            schema:
              $ref: "#/definitions/OutgoingQueryResponse"
        examples:
          q: test
      get:
        operationId: "search"
        tags:
          - "Search"
        summary: "Search request to the Search API"
        produces:
          - "application/json"
          - "application/xml"
        parameters:
          -
            name: "aq"
            description: "The advanced query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "cq"
            description: "The constant query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "dq"
            description: "The disjunction query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "lq"
            description: "The large query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "wildcards"
            description: "Whether to enable wildcards on the basic expression keywords.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "questionMark"
            description: "Whether to enable question marks with wildcards.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "partialMatch"
            description: "Whether to enable partial matching of the basic expression keywords.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "partialMatchKeywords"
            description: "The minimum number of keywords needed to activate partial match.\n"
            required: false
            defaultValue: "5"
            in: "query"
            type: "integer"
            format: "int32"
          -
            name: "partialMatchThreshold"
            description: "The threshold to use for matching documents when partial match is enabled.\n"
            required: false
            defaultValue: "50%"
            in: "query"
            type: "string"
          -
            name: "lowercaseOperators"
            description: ""
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "firstResult"
            description: "Index of the first result to return.\n"
            required: false
            defaultValue: "0"
            in: "query"
            type: "integer"
            format: "int32"
          -
            name: "numberOfResults"
            description: "The number of results to return.\n"
            required: false
            defaultValue: "10"
            in: "query"
            type: "integer"
            format: "int32"
          -
            name: "sortCriteria"
            description: "Sort criteria(s) to use to sort results.\n"
            required: false
            defaultValue: "Relevancy"
            in: "query"
            type: "string"
          -
            name: "sortField"
            description: "Name of the field to use for sorting.\nDeprecated."
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "enableDuplicateFiltering"
            description: "Whether to filter duplicates.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "parentField"
            description: "Name of the parent field to use when loading the parent.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "childField"
            description: "Name of the child field to use when loading the parent.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "filterFieldRange"
            description: "Number of results that should be folded.\n"
            required: false
            defaultValue: "5"
            in: "query"
            type: "integer"
            format: "int32"
          -
            name: "filterField"
            description: "Name of the field to use for folding.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "excerptLength"
            description: "Length of the generated excerpts.\n"
            required: false
            defaultValue: "200"
            in: "query"
            type: "integer"
            format: "int32"
          -
            name: "summaryLength"
            description: ""
            required: false
            defaultValue: "0"
            in: "query"
            type: "integer"
            format: "int32"
          -
            name: "retrieveFirstSentences"
            description: "Whether to retrieve the first sentences.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "groupBy"
            description: "Definition of the facets to compute on the results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items:
              $ref: "#/definitions/RestGroupBy"
          -
            name: "fieldsToInclude"
            description: "Fields that should be included in the query results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items:
              type: "string"
          -
            name: "fieldsToExclude"
            description: "Fields that should be excluded from the query results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items:
              type: "string"
          -
            name: "enableDidYouMean"
            description: "Whether to suggest query corrections.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "timezone"
            description: "The time zone to use for dates in the query and in the results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "enableThesaurus"
            description: "Whether to expand the query with the thesaurus.\n"
            required: false
            defaultValue: "true"
            in: "query"
            type: "boolean"
          -
            name: "enableCollaborativeRating"
            description: ""
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "queryFunctions"
            description: "Definition of query functions to execute on the results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items:
              $ref: "#/definitions/RestQueryFunction"
          -
            name: "rankingFunctions"
            description: "Definition of ranking functions to alter the ranking.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items:
              $ref: "#/definitions/RestRankingFunction"
          -
            name: "maximumAge"
            description: "The maximum age for cached query results, in milliseconds.\n"
            required: false
            defaultValue: "-1"
            in: "query"
            type: "integer"
            format: "int32"
          -
            name: "disableQuerySyntax"
            description: "Whether or not to interpret special query syntax such as field references in the basic query expression (parameter q).\nDeprecated."
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "enableQuerySyntax"
            description: "Whether or not to interpret special query syntax such as field references in the basic query expression (parameter q).\n"
            required: false
            defaultValue: "true"
            in: "query"
            type: "boolean"
          -
            name: "syntax"
            description: "Name of the query syntax to apply in the basic query expression (parameter q).\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "pipeline"
            description: "The query pipeline (pass an empty string to use an empty pipeline).\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "q"
            description: "The basic query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "language"
            description: "Deprecated."
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "locale"
            description: ""
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "tab"
            description: "Represent the current Tab name in use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "searchHub"
            description: "Represents the search dimension name.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "debug"
            description: "Whether to include debug info in the results.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          -
            name: "format"
            description: "The format of the results.\n"
            required: false
            defaultValue: "json"
            in: "query"
            type: "string"
          -
            name: "recommendation"
            description: "Represent the current Recommendation id in use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          -
            name: "context"
            description: "Value of the context JSON object to use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "undefined"
          -
            name: "actionsHistory"
            description: "The action history of the current user.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "undefined"
          -
            name: "indexToken"
            description: "A token that you can pass to always make queries using the same index\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/admin/pipelines/{pipelineId}/statements/{statementId}: 
      delete: 
        operationId: "Delete a pipeline statement"
        tags: 
          - "Pipelines"
        summary: "Delete a pipeline statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
      get: 
        operationId: "Get a pipeline statement"
        tags: 
          - "Pipelines"
        summary: "Get a pipeline statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
      put: 
        operationId: "Update a pipeline statement"
        tags: 
          - "Pipelines"
        summary: "Update a pipeline statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "statement"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingStatement"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/search/values/batch: 
      post: 
        operationId: "valuesBatch"
        tags: 
          - "Search"
        summary: "Get field list values method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "batch"
            description: "Batch/Array of parameters. For more information about them see /rest/search/values documentation.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "array"
            items: 
              $ref: "#/definitions/RestListFieldValuesParameters"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "valuesBatch"
        tags: 
          - "Search"
        summary: "Get field list values method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "batch"
            description: "Batch/Array of parameters. For more information about them see /rest/search/values documentation.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "array"
            items: 
              $ref: "#/definitions/RestListFieldValuesParameters"
        responses: 
          200: 
            description: "No response"
    /rest/search/admin/pipelines/{pipelineId}: 
      delete: 
        operationId: "Delete a pipeline"
        tags: 
          - "Pipelines"
        summary: "Delete a pipeline"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
      get: 
        operationId: "Get a pipeline"
        tags: 
          - "Pipelines"
        summary: "Get a pipeline"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
      put: 
        operationId: "Update a pipeline"
        tags: 
          - "Pipelines"
        summary: "Update a pipeline"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "pipeline"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingPipeline"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/search/admin/pipelines/statements/{statementId}: 
      delete: 
        operationId: "Delete a statement"
        tags: 
          - "Pipelines"
        summary: "Delete a statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "accessToken"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
      get: 
        operationId: "Get a single statement"
        tags: 
          - "Pipelines"
        summary: "Get a single statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "accessToken"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
      put: 
        operationId: "Update a statement"
        tags: 
          - "Pipelines"
        summary: "Update a statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "accessToken"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "statement"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingCondition"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/search/tag: 
      post: 
        operationId: "tag"
        tags: 
          - "Search"
        summary: "Tag a document"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "doAdd"
            required: false
            defaultValue: "true"
            in: "formData"
            type: "boolean"
          - 
            name: "fieldValue"
            description: "The field value."
            required: true
            in: "formData"
            type: "string"
          - 
            name: "fieldName"
            description: "The field name."
            required: true
            in: "formData"
            type: "string"
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "formData"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/admin/pipelines/{pipelineId}/statements: 
      post: 
        operationId: "Create a pipeline statement"
        tags: 
          - "Pipelines"
        summary: "Create a pipeline statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "statement"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingStatement"
        responses: 
          200: 
            schema: 
              type: "string"
      get: 
        operationId: "List pipeline statements"
        tags: 
          - "Pipelines"
        summary: "List pipeline statements"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "feature"
            description: "the targeted feature"
            required: false
            in: "query"
            type: "string"
          - 
            name: "perPage"
            description: "the number of results per page"
            required: false
            in: "query"
            type: "string"
          - 
            name: "page"
            description: "The page of results to get"
            required: false
            in: "query"
            type: "string"
          - 
            name: "sortBy"
            description: "Sorting type (description or definition)"
            required: false
            in: "query"
            type: "string"
          - 
            name: "filter"
            description: "will filter out results who do not contain filter"
            required: false
            in: "query"
            type: "string"
          - 
            name: "isOrderAscending"
            description: "false will reverse the order of the results"
            required: false
            in: "query"
            type: "boolean"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/search/admin/pipelines/{pipelineId}/swap: 
      post: 
        operationId: "Swap two pipelines"
        tags: 
          - "Pipelines"
        summary: "Swap two pipelines"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "other"
            description: "the other pipeline id"
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/organizations/{organizationId}/salesforce/tokens: 
      delete: 
        operationId: "clearSalesforceTokens"
        tags: 
          - "Organizations"
        summary: "Clears the OAuth tokens to use to execute queries on a Salesforce index."
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
      put: 
        operationId: "startSalesforceHandshake"
        tags: 
          - "Organizations"
        summary: "Starts the OAuth handshake to gain access to refresh and access tokens to a Salesforce organization."
        parameters: 
          - 
            name: "handshake"
            description: "Information about the handshake."
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingOAuthHandshake"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/CreatedOAuthHandshake"
    /rest/search/values: 
      post: 
        operationId: "values"
        tags: 
          - "Search"
        summary: "Get field list values method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "field"
            description: "Specifies the field of the request.\n"
            required: true
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "lookupField"
            description: "Specifies the name of an additional field whose value should be included.\nDeprecated."
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "ignoreAccents"
            description: "Specifies if the accents should be ignored.\n"
            required: false
            defaultValue: "true"
            in: "formData"
            type: "boolean"
          - 
            name: "sortCriteria"
            description: "Specifies the sort criteria to be used.\n"
            required: false
            defaultValue: "occurrences"
            in: "formData"
            type: "string"
          - 
            name: "maximumNumberOfValues"
            description: "Specifies the maximum number of values to be returned by the query.\n"
            required: false
            defaultValue: "10"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "queryOverride"
            description: "Specifies a different query expression to be used.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "constantQueryOverride"
            description: "Specifies a different constant query expression to be used.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "disjunctionQueryOverride"
            description: "Specifies a different disjunction query expression to be used.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "pattern"
            description: ""
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "patternType"
            description: "Specifies the type of pattern that is being used to list field values.\n"
            required: false
            defaultValue: "wildcards"
            in: "formData"
            type: "string"
          - 
            name: "debug"
            description: "Whether to include debug info in the results.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "values"
        tags: 
          - "Search"
        summary: "Get field list values method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "field"
            description: "Specifies the field of the request.\n"
            required: true
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "lookupField"
            description: "Specifies the name of an additional field whose value should be included.\nDeprecated."
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "ignoreAccents"
            description: "Specifies if the accents should be ignored.\n"
            required: false
            defaultValue: "true"
            in: "query"
            type: "boolean"
          - 
            name: "sortCriteria"
            description: "Specifies the sort criteria to be used.\n"
            required: false
            defaultValue: "occurrences"
            in: "query"
            type: "string"
          - 
            name: "maximumNumberOfValues"
            description: "Specifies the maximum number of values to be returned by the query.\n"
            required: false
            defaultValue: "10"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "queryOverride"
            description: "Specifies a different query expression to be used.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "constantQueryOverride"
            description: "Specifies a different constant query expression to be used.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "disjunctionQueryOverride"
            description: "Specifies a different disjunction query expression to be used.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "pattern"
            description: ""
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "patternType"
            description: "Specifies the type of pattern that is being used to list field values.\n"
            required: false
            defaultValue: "wildcards"
            in: "query"
            type: "string"
          - 
            name: "debug"
            description: "Whether to include debug info in the results.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
        responses: 
          200: 
            description: "No response"
    /api/ops/reveal/synchronize: 
      post: 
        operationId: "synchronize"
        tags: 
          - "default"
        summary: "Synchronize Reveal for a single organization"
        parameters: 
          - 
            name: "delete"
            description: "Whether to delete superfluous schedules"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "create"
            description: "Whether to create missing schedules"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "organizationId"
            description: "The current organization ID"
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/login/{provider}: 
      post: 
        operationId: "login"
        tags: 
          - "Search"
        summary: "Login method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "provider"
            description: "The authentication provider to be used."
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "login"
        tags: 
          - "Search"
        summary: "Login method"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "provider"
            description: "The authentication provider to be used."
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/organizations/{organizationId}/pages/{id}: 
      delete: 
        operationId: "deleteSearchPageOperation"
        tags: 
          - "Organizations"
        summary: "Deletes a search page from an organization"
        parameters: 
          - 
            name: "id"
            description: "The search page ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "loadSearchPage"
        tags: 
          - "Organizations"
        summary: "Loads a single search page from an organization"
        parameters: 
          - 
            name: "id"
            description: "The search page ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/OutgoingSearchPage"
      put: 
        operationId: "updateSearchPage"
        tags: 
          - "Organizations"
        summary: "Updates a search page in an organization"
        parameters: 
          - 
            name: "page"
            description: "The search page data"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingSearchPage"
          - 
            name: "id"
            description: "The search page ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /api/ops/loggingLevel: 
      post: 
        operationId: "loggingLevel"
        tags: 
          - "default"
        summary: "Change the logging level of the application"
        parameters: 
          - 
            name: "level"
            description: "The desired logging level"
            required: true
            enum: 
              - "ALL"
              - "DEBUG"
              - "INFO"
              - "WARN"
              - "ERROR"
              - "FATAL"
              - "OFF"
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /api/ops/organizations/unsynced: 
      get: 
        operationId: "organizations"
        tags: 
          - "default"
        summary: "Lists all organizations in the search api that does not exist in the cloud platform"
        parameters: []
        responses: 
          200: 
            description: "No response"
    /rest/search/document: 
      get: 
        operationId: "document"
        tags: 
          - "Search"
        summary: "Get document"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "query"
            type: "integer"
            format: "int32"
        responses: 
          200: 
            description: "No response"
    /rest/organizations/{organizationId}/authentication/saml/{id}: 
      delete: 
        operationId: "deleteSamlAuthentication"
        tags: 
          - "Organizations"
        summary: "Deletes a SAML authentication from an organization"
        parameters: 
          - 
            name: "id"
            description: "The SAML authentication ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "loadSamlAuthentication"
        tags: 
          - "Organizations"
        summary: "Loads a single SAML authentication from an organization"
        parameters: 
          - 
            name: "id"
            description: "The SAML authentication ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/OutgoingSamlAuthentication"
      put: 
        operationId: "updateSamlAuthentication"
        tags: 
          - "Organizations"
        summary: "Updates a SAML authentication in an organization"
        parameters: 
          - 
            name: "saml"
            description: "The SAML authentication data"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingSamlAuthentication"
          - 
            name: "id"
            description: "The SAML authentication ID"
            required: true
            in: "path"
            type: "string"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/log: 
      post: 
        operationId: "log"
        tags: 
          - "Search"
        summary: "Log an error to sentry for the JSUI"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "title"
            description: "title of the log\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "message"
            description: "content of the log\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "level"
            description: "log level\n"
            required: false
            defaultValue: "ERROR"
            in: "formData"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/search/debug/version: 
      get: 
        operationId: "debugVersion"
        tags: 
          - "Search"
        summary: "Get the api version"
        produces: 
          - "application/json"
        parameters: []
        responses: 
          200: 
            description: "No response"
    /rest/search/debug/expandedUserIds: 
      get: 
        operationId: "debugExpandedUserIds"
        tags: 
          - "Search"
        summary: "Get the debug expanded user ids"
        produces: 
          - "application/json"
        parameters: []
        responses: 
          200: 
            description: "No response"
    /rest/organizations/{organizationId}/authentication/saml: 
      post: 
        operationId: "createSamlAuthentication"
        tags: 
          - "Organizations"
        summary: "Creates a new SAML authentication in an organization"
        parameters: 
          - 
            name: "saml"
            description: "The SAML authentication data"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingSamlAuthentication"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/CreatedSamlAuthentication"
      get: 
        operationId: "listSamlAuthentications"
        tags: 
          - "Organizations"
        summary: "Lists the SAML authentications for an organization"
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/OutgoingSamlAuthentication"
    /rest/search/extensions: 
      get: 
        operationId: "extensions"
        tags: 
          - "Search"
        summary: "Get a list of all extensions from the pipeline"
        produces: 
          - "application/json"
        parameters: []
        responses: 
          200: 
            description: "No response"
    /rest/search/admin/pipelines/{pipelineId}/duplicate: 
      post: 
        operationId: "Copy a pipeline"
        tags: 
          - "Pipelines"
        summary: "Copy a pipeline"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "string"
    /api/ops/organizations/{organizationId}/reload: 
      post: 
        operationId: "Reloads an organization"
        tags: 
          - "default"
        summary: "Reloads cached organization information, including pipelines and license"
        parameters: []
        responses: 
          200: 
            description: "No response"
    /rest/search/admin/pipelines/: 
      post: 
        operationId: "Create a pipeline"
        tags: 
          - "Pipelines"
        summary: "Create a pipeline"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "pipeline"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingPipeline"
        responses: 
          200: 
            schema: 
              type: "string"
      get: 
        operationId: "List pipelines"
        tags: 
          - "Pipelines"
        summary: "List pipelines"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "access_token"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "feature"
            description: "the targeted feature"
            required: false
            in: "query"
            type: "string"
          - 
            name: "perPage"
            description: "the number of results per page"
            required: false
            in: "query"
            type: "string"
          - 
            name: "page"
            description: "The page of results to get"
            required: false
            in: "query"
            type: "string"
          - 
            name: "sortBy"
            description: "Sorting type (id, name, description, condition)"
            required: false
            in: "query"
            type: "string"
          - 
            name: "filter"
            description: "will filter out results who do not contain filter"
            required: false
            in: "query"
            type: "string"
          - 
            name: "isOrderAscending"
            description: "false will reverse the order of the results"
            required: false
            in: "query"
            type: "boolean"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/search/datastream: 
      get: 
        operationId: "datastream"
        tags: 
          - "Search"
        summary: "Get data stream for a document"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "contentType"
            description: "The unique id of the document."
            required: false
            defaultValue: "application/binary"
            in: "query"
            type: "string"
          - 
            name: "dataStream"
            description: "The unique id of the document."
            required: true
            in: "query"
            type: "string"
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /api/ops/reveal/synchronizeAll: 
      post: 
        operationId: "synchronizeAll"
        tags: 
          - "default"
        summary: "Synchronize Reveal for all organization"
        parameters: 
          - 
            name: "delete"
            description: "Whether to delete superfluous schedules"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "create"
            description: "Whether to create missing schedules"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
        responses: 
          200: 
            description: "No response"
    /rest/organizations/{organizationId}/authentication/sharepoint: 
      post: 
        operationId: "createSharePointAuthentication"
        tags: 
          - "Organizations"
        summary: "Create a new SharePoint authentication in an organization"
        description: |
          When querying documents indexed from a SharePoint server relying on claims authentication, it is necessary to
          obtain certain special information from the SharePoint server to allow the end users to see the documents they
          have access to (see
          [The Claims-Based Identity Model](https://msdn.microsoft.com/en-ca/library/ee517291.aspx)). There is no way
          for the Coveo index to obtain this information directly from SharePoint; it can only be computed when the
          querying user is logged into SharePoint. This means that the web browser must perform a round-trip to
          SharePoint and back before it is possible to query the content.

          The Coveo Search API provides a simple process to automate those steps. The only external requirement is that
          before performing queries, the end user must be redirected to a special URL.
        parameters: 
          - 
            name: "sharepoint"
            description: "The SharePoint authentication data"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingSharePointAuthentication"
          - 
            name: "organizationId"
            description: "The organization ID."
            required: true
            in: "path"
            type: "string"
        responses:
# Changed to 201 - this is the actual response.
          #200
          201:
            description: "Created"
            schema: 
              $ref: "#/definitions/CreatedSharePointAuthentication"
            examples:
              application/json:
                id: "b5g86444-739i-4945-u9z0-0u0hp37n674b"
      get: 
        operationId: "listSharePointAuthentications"
        tags: 
          - "Organizations"
        summary: "Lists the SharePoint authentications for an organization"
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/OutgoingSharePointAuthentication"
    /rest/search/admin/pipelines/statements: 
      post: 
        operationId: "Create a statement"
        tags: 
          - "Pipelines"
        summary: "Create a statement"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "accessToken"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "statement"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingCondition"
        responses: 
          200: 
            schema: 
              type: "string"
      get: 
        operationId: "list statements"
        tags: 
          - "Pipelines"
        summary: "List multiple statements"
        produces: 
          - "application/json"
        parameters: 
          - 
            name: "accessToken"
            required: true
            in: "query"
            type: "string"
          - 
            name: "organizationId"
            required: false
            in: "query"
            type: "string"
          - 
            name: "feature"
            description: "the targeted feature"
            required: false
            in: "query"
            type: "string"
          - 
            name: "perPage"
            description: "the number of results per page"
            required: false
            in: "query"
            type: "string"
          - 
            name: "page"
            description: "The page of results to get"
            required: false
            in: "query"
            type: "string"
          - 
            name: "sortBy"
            description: "Sorting type (description or definition)"
            required: false
            in: "query"
            type: "string"
          - 
            name: "filter"
            description: "will filter out results who do not contain filter"
            required: false
            in: "query"
            type: "string"
          - 
            name: "isOrderAscending"
            description: "false will reverse the order of the results"
            required: false
            in: "query"
            type: "boolean"
        responses: 
          200: 
            schema: 
              type: "string"
    /rest/search/html: 
      post: 
        operationId: "html"
        tags: 
          - "Search"
        summary: "Get html document"
        produces: 
          - "text/html"
        parameters: 
          - 
            name: "aq"
            description: "The advanced query expression.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "cq"
            description: "The constant query expression.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "dq"
            description: "The disjunction query expression.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "lq"
            description: "The large query expression.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "wildcards"
            description: "Whether to enable wildcards on the basic expression keywords.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "questionMark"
            description: "Whether to enable question marks with wildcards.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "partialMatch"
            description: "Whether to enable partial matching of the basic expression keywords.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "partialMatchKeywords"
            description: "The minimum number of keywords needed to activate partial match.\n"
            required: false
            defaultValue: "5"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "partialMatchThreshold"
            description: "The threshold to use for matching documents when partial match is enabled.\n"
            required: false
            defaultValue: "50%"
            in: "formData"
            type: "string"
          - 
            name: "lowercaseOperators"
            description: ""
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "firstResult"
            description: "Index of the first result to return.\n"
            required: false
            defaultValue: "0"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "numberOfResults"
            description: "The number of results to return.\n"
            required: false
            defaultValue: "10"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "sortCriteria"
            description: "Sort criteria(s) to use to sort results.\n"
            required: false
            defaultValue: "Relevancy"
            in: "formData"
            type: "string"
          - 
            name: "sortField"
            description: "Name of the field to use for sorting.\nDeprecated."
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "enableDuplicateFiltering"
            description: "Whether to filter duplicates.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "parentField"
            description: "Name of the parent field to use when loading the parent.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "childField"
            description: "Name of the child field to use when loading the parent.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "filterFieldRange"
            description: "Number of results that should be folded.\n"
            required: false
            defaultValue: "5"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "filterField"
            description: "Name of the field to use for folding.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "excerptLength"
            description: "Length of the generated excerpts.\n"
            required: false
            defaultValue: "200"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "summaryLength"
            description: ""
            required: false
            defaultValue: "0"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "retrieveFirstSentences"
            description: "Whether to retrieve the first sentences.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "groupBy"
            description: "Definition of the facets to compute on the results.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "array"
            items: 
              $ref: "#/definitions/RestGroupBy"
          - 
            name: "fieldsToInclude"
            description: "Fields that should be included in the query results.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "array"
            items: 
              type: "string"
          - 
            name: "fieldsToExclude"
            description: "Fields that should be excluded from the query results.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "array"
            items: 
              type: "string"
          - 
            name: "enableDidYouMean"
            description: "Whether to suggest query corrections.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "timezone"
            description: "The time zone to use for dates in the query and in the results.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "enableThesaurus"
            description: "Whether to expand the query with the thesaurus.\n"
            required: false
            defaultValue: "true"
            in: "formData"
            type: "boolean"
          - 
            name: "enableCollaborativeRating"
            description: ""
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "queryFunctions"
            description: "Definition of query functions to execute on the results.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "array"
            items:
              $ref: "#/definitions/RestQueryFunction"
          - 
            name: "rankingFunctions"
            description: "Definition of ranking functions to alter the ranking.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "array"
            items: 
              $ref: "#/definitions/RestRankingFunction"
          - 
            name: "maximumAge"
            description: "The maximum age for cached query results, in milliseconds.\n"
            required: false
            defaultValue: "-1"
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "disableQuerySyntax"
            description: "Whether or not to interpret special query syntax such as field references in the basic query expression (parameter q).\nDeprecated."
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "enableQuerySyntax"
            description: "Whether or not to interpret special query syntax such as field references in the basic query expression (parameter q).\n"
            required: false
            defaultValue: "true"
            in: "formData"
            type: "boolean"
          - 
            name: "syntax"
            description: "Name of the query syntax to apply in the basic query expression (parameter q).\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "pipeline"
            description: "The query pipeline (pass an empty string to use an empty pipeline).\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "q"
            description: "The basic query expression.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "language"
            description: "Deprecated."
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "locale"
            description: ""
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "tab"
            description: "Represent the current Tab name in use.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "searchHub"
            description: "Represents the search dimension name.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "debug"
            description: "Whether to include debug info in the results.\n"
            required: false
            defaultValue: "false"
            in: "formData"
            type: "boolean"
          - 
            name: "format"
            description: "The format of the results.\n"
            required: false
            defaultValue: "json"
            in: "formData"
            type: "string"
          - 
            name: "recommendation"
            description: "Represent the current Recommendation id in use.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "context"
            description: "Value of the context JSON object to use.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "undefined"
          - 
            name: "actionsHistory"
            description: "The action history of the current user.\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "undefined"
          - 
            name: "indexToken"
            description: "A token that you can pass to always make queries using the same index\n"
            required: false
            defaultValue: ""
            in: "formData"
            type: "string"
          - 
            name: "findNext"
            required: false
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "findPrevious"
            required: false
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "page"
            required: false
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "enableNavigation"
            required: false
            defaultValue: "true"
            in: "formData"
            type: "boolean"
          - 
            name: "requestedOutputSize"
            description: "Set this to 0 get the complete document."
            required: false
            in: "formData"
            type: "integer"
            format: "int32"
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "formData"
            type: "string"
        responses: 
          200: 
            description: "No response"
      get: 
        operationId: "html"
        tags: 
          - "Search"
        summary: "Get html document"
        produces: 
          - "text/html"
        parameters: 
          - 
            name: "aq"
            description: "The advanced query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "cq"
            description: "The constant query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "dq"
            description: "The disjunction query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "lq"
            description: "The large query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "wildcards"
            description: "Whether to enable wildcards on the basic expression keywords.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "questionMark"
            description: "Whether to enable question marks with wildcards.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "partialMatch"
            description: "Whether to enable partial matching of the basic expression keywords.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "partialMatchKeywords"
            description: "The minimum number of keywords needed to activate partial match.\n"
            required: false
            defaultValue: "5"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "partialMatchThreshold"
            description: "The threshold to use for matching documents when partial match is enabled.\n"
            required: false
            defaultValue: "50%"
            in: "query"
            type: "string"
          - 
            name: "lowercaseOperators"
            description: ""
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "firstResult"
            description: "Index of the first result to return.\n"
            required: false
            defaultValue: "0"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "numberOfResults"
            description: "The number of results to return.\n"
            required: false
            defaultValue: "10"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "sortCriteria"
            description: "Sort criteria(s) to use to sort results.\n"
            required: false
            defaultValue: "Relevancy"
            in: "query"
            type: "string"
          - 
            name: "sortField"
            description: "Name of the field to use for sorting.\nDeprecated."
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "enableDuplicateFiltering"
            description: "Whether to filter duplicates.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "parentField"
            description: "Name of the parent field to use when loading the parent.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "childField"
            description: "Name of the child field to use when loading the parent.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "filterFieldRange"
            description: "Number of results that should be folded.\n"
            required: false
            defaultValue: "5"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "filterField"
            description: "Name of the field to use for folding.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "excerptLength"
            description: "Length of the generated excerpts.\n"
            required: false
            defaultValue: "200"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "summaryLength"
            description: ""
            required: false
            defaultValue: "0"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "retrieveFirstSentences"
            description: "Whether to retrieve the first sentences.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "groupBy"
            description: "Definition of the facets to compute on the results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items: 
              $ref: "#/definitions/RestGroupBy"
          - 
            name: "fieldsToInclude"
            description: "Fields that should be included in the query results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items: 
              type: "string"
          - 
            name: "fieldsToExclude"
            description: "Fields that should be excluded from the query results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items: 
              type: "string"
          - 
            name: "enableDidYouMean"
            description: "Whether to suggest query corrections.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "timezone"
            description: "The time zone to use for dates in the query and in the results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "enableThesaurus"
            description: "Whether to expand the query with the thesaurus.\n"
            required: false
            defaultValue: "true"
            in: "query"
            type: "boolean"
          - 
            name: "enableCollaborativeRating"
            description: ""
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "queryFunctions"
            description: "Definition of query functions to execute on the results.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items: 
              $ref: "#/definitions/RestQueryFunction"
          - 
            name: "rankingFunctions"
            description: "Definition of ranking functions to alter the ranking.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "array"
            items: 
              $ref: "#/definitions/RestRankingFunction"
          - 
            name: "maximumAge"
            description: "The maximum age for cached query results, in milliseconds.\n"
            required: false
            defaultValue: "-1"
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "disableQuerySyntax"
            description: "Whether or not to interpret special query syntax such as field references in the basic query expression (parameter q).\nDeprecated."
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "enableQuerySyntax"
            description: "Whether or not to interpret special query syntax such as field references in the basic query expression (parameter q).\n"
            required: false
            defaultValue: "true"
            in: "query"
            type: "boolean"
          - 
            name: "syntax"
            description: "Name of the query syntax to apply in the basic query expression (parameter q).\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "pipeline"
            description: "The query pipeline (pass an empty string to use an empty pipeline).\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "q"
            description: "The basic query expression.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "language"
            description: "Deprecated."
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "locale"
            description: ""
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "tab"
            description: "Represent the current Tab name in use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "searchHub"
            description: "Represents the search dimension name.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "debug"
            description: "Whether to include debug info in the results.\n"
            required: false
            defaultValue: "false"
            in: "query"
            type: "boolean"
          - 
            name: "format"
            description: "The format of the results.\n"
            required: false
            defaultValue: "json"
            in: "query"
            type: "string"
          - 
            name: "recommendation"
            description: "Represent the current Recommendation id in use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "context"
            description: "Value of the context JSON object to use.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "undefined"
          - 
            name: "actionsHistory"
            description: "The action history of the current user.\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "undefined"
          - 
            name: "indexToken"
            description: "A token that you can pass to always make queries using the same index\n"
            required: false
            defaultValue: ""
            in: "query"
            type: "string"
          - 
            name: "findNext"
            required: false
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "findPrevious"
            required: false
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "page"
            required: false
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "enableNavigation"
            required: false
            defaultValue: "true"
            in: "query"
            type: "boolean"
          - 
            name: "requestedOutputSize"
            description: "Set this to 0 get the complete document."
            required: false
            in: "query"
            type: "integer"
            format: "int32"
          - 
            name: "uniqueId"
            description: "The unique id of the document."
            required: true
            in: "query"
            type: "string"
        responses: 
          200: 
            description: "No response"
    /rest/organizations/{organizationId}/pages/: 
      post: 
        operationId: "createSearchPage"
        tags: 
          - "Organizations"
        summary: "Creates a new search page in an organization"
        parameters: 
          - 
            name: "page"
            description: "The search page data"
            required: true
            in: "body"
            schema: 
              $ref: "#/definitions/IncomingSearchPage"
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              $ref: "#/definitions/CreatedSearchPage"
      get: 
        operationId: "listSearchPages"
        tags: 
          - "Organizations"
        summary: "Lists the search pages for an organization"
        parameters: 
          - 
            name: "organizationId"
            description: "The organization ID"
            required: true
            in: "path"
            type: "string"
        responses: 
          200: 
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/OutgoingSearchPage"
  definitions: 
    OnPremisesIndex: 
      properties: 
        uri: 
          type: "string"
    OutgoingSamlAuthentication: 
      properties: 
        secret: 
          type: "string"
        organization: 
          type: "string"
        name: 
          type: "string"
        provider: 
          type: "string"
        id: 
          type: "string"
        assertionConsumerServiceUrl: 
          type: "string"
        metadata: 
          type: "string"
        relyingPartyIdentifier: 
          type: "string"
        expiration: 
          type: "integer"
          format: "int32"
        protocol: 
          type: "string"
    IncomingSearchPage:
      type: "object"
      properties: 
        name: 
          type: "string"
        title: 
          type: "string"
        html: 
          type: "string"
    List[Throwable]: 
      properties: {}
    RestUserId:
      type: "object"
      properties:
        name: 
          type: "string"
          example: "john_doe@some-domain.com"
          description: |
            The name of this user ID (e.g., `john_doe@some-domain.com`).
        provider: 
          type: "string"
          example: "Email Security Provider"
          description: |
            The security provider of this user ID (e.g., `Email Security Provider`).
        infos:
          type: "array"
          description: |
            **Deprecated**

            This is a legacy parameter.
          items:
            type: "string"
            example: ""
        type: 
          type: "string"
          example: "User"
          description: |
            The type of this user ID (e.g., `User`).
        authCookie:
          type: "string"
          description: |
            **Deprecated**

            This is a legacy parameter.
          example: ""
        password:
          type: "string"
          description: |
            **Deprecated**

            This is a legacy parameter.
          example: ""
    IncomingMoveStatement:
      type: "object"
      properties: 
        position: 
          type: "integer"
          format: "int32"
        after: 
          type: "string"
        pageSize: 
          type: "integer"
          format: "int32"
    StackTraceElement: 
      properties: 
        declaringClass: 
          type: "string"
        methodName: 
          type: "string"
        fileName: 
          type: "string"
        lineNumber: 
          type: "integer"
          format: "int32"
    OnPremisesIndexStatus: 
      properties: 
        status: 
          type: "string"
        message: 
          type: "string"
    RestTokenParams:
      type: "object"
      properties: 
        userGroups: 
          type: "array"
          example:
            - "Tech Support"
            - "Employee"
          description: |
            The groups that the user or list of users to associate this search token with belong to.

            A group can be any arbitrary string.
          items: 
            type: "string"
        userDisplayName:
          type: "string"
          example: "John Doe"
          description: |
            The display name of the user or list of users to associate this search token with.
        searchHub: 
          type: "string"
          example: "Search"
          description: |
            The searchhub to enforce on this search token.

            The searchhub is an important parameter for the analytics service, the Coveo Machine Learning service, and
            the query pipeline.
        superUserToken:
          type: "string"
          description: |
            **Internal**

            Coveo uses this parameter internally in its Salesforce integration.
          example: ""
        scope:
          type: "integer"
          format: "int32"
          description: |
            **Deprecated**

            This is a legacy parameter.
          example: 0
        salesforceUser:
          type: "string"
          description: |
            **Internal**

            Coveo uses this parameter internally in its Salesforce integration.
          example: ""
        salesforceFallbackToAdmin:
          type: "boolean"
          description: |
            **Internal**

            Coveo uses this parameter internally in its Salesforce integration.
          example: false
        pipeline: 
          type: "string"
          example: "Tech Support Query Pipeline"
          description: |
            The query pipeline to use when performing queries using this search token (see
            [Managing Query Pipelines](http://www.coveo.com/go?dest=cloudhelp&lcid=9&context=128)).

            If you specify a value for this parameter, the query pipeline you specify takes precedence over the possible
            output of all other query pipeline mechanisms when using this search token (see
            [Query Pipeline Routing Mechanisms and Rules](http://www.coveo.com/go?dest=cloudhelp&lcid=9&context=164)).
        filter: 
          type: "string"
          example: "@objecttype=Case"
          description: |
            The query expression filter to add to queries when performing queries using the search token (see
            [Coveo Query Syntax Reference](http://www.coveo.com/go?dest=adminhelp70&lcid=9&context=10005)).

            You can use this value to generate tokens that can only query a subset of the documents in an index (e.g.,
            `@objecttype=Case`).
        userIds: 
          type: "array"
          description: |
            The list of `RestUserId` to associate with this search token.
          items: 
            $ref: "#/definitions/RestUserId"
        expiration:
          type: "integer"
          format: "int32"
          description: |
            **Deprecated**

            This parameter is deprecated.
          example: 0
        salesforceCommunityUrl:
          type: "string"
          description: |
            **Internal**

            Coveo uses this parameter internally in its Salesforce integration.
          example: ""
    Throwable: 
      properties: 
        detailMessage: 
          type: "string"
        cause: 
          $ref: "#/definitions/Throwable"
        stackTrace: 
          type: "array"
          items: 
            $ref: "#/definitions/StackTraceElement"
        suppressedExceptions: 
          type: "array"
          items: 
            $ref: "#/definitions/Throwable"
    TokenModel:
      type: "object"
      properties: 
        token: 
          type: "string"
          description: >
            The search token.
    RestGroupBy:
      type: "object"
      properties: 
        sortCriteria: 
          type: "string"
          description: |
            This specifies how the Group By values should be sorted by the indexer. If not specified, the default value
            is `Score`.

            The following table lists available sort criteria (the values are case-insensitive).

            | Criterion                                           | Description |
            | :-------------------------------------------------- | :---------- |
            | `Score`                                             | Sort by score. The score is computed from the number of occurrences as well as from the position in the result set where the items having this value are appearing. Using this criterion, an item with 100 occurrences might appear after one with only 10 occurrences if those occurrences tend to appear sooner in the ranked result set. |
            | `Occurrences`                                       | Sort by number of occurrences, with values having the highest number appearing first. |
            | `AlphaAscending`, `AlphaDescending`                 | Sort alphabetically on the field values. |
            | `ComputedFieldAscending`, `ComputedFieldDescending` | Sort on the values of the first computed field for each Group By value (see Computed Field Parameters). |
            | `ChiSquare`                                         | Sort based on the relative frequency of values in the result set compared to the frequency in the whole index. This means that a value that doesn't appear often in the index but does appear often in the result set will tend to appear higher in the list. |
            | `nosort`                                            | Do not sort the Group By values. The values will be returned in a random order. |

        lookupField: 
          type: "string"
          description: |
            Name of an additional field whose value to retrieve.

            This specifies the name of an additional field whose value should be included for each returned Group By
            value. This field value should have a 1:1 relationship with the values of the field specified using field.
            It is typically used to load a human readable caption when Group By is performed on a field containing IDs,
            GUIDs, etc.

            This feature was used in the past to work around performance issues when using fields containing textual
            content for facets. In recent versions of the Coveo Platform, it is no longer needed, and is typically not
            used.
        advancedQueryOverride: 
          type: "string"
        field: 
          type: "string"
          description: |
            Name of the field on which to perform Group By.

            This specifies the field on which the Group By operation is performed. The Group By will return a Group By
            value for each distinct value of this field within the result set.
        allowedValues:
          type: "array"
          items: 
            type: "string"
          description: |
            List of values allowed in the Group By results.

            This explicitly specifies a list of values for which Group By values should be generated. The values are
            passed as a JSON array of strings.

            Trailing wildcards can be used to include ranges of values.
        injectionDepth:
          type: "integer"
          format: "int32"
          description: |
            Depth of injection scan to find missing values.

            This specifies how deep the index will scan the results to identify missing Group By values. If not
            specified, the default value is `1000`.

            When executing a Group By operation, the index uses various heuristics to list all the values that are
            appearing in the result set. In some corner cases, some values might be omitted (it's a classical trade-off
            of precision vs performance). Using injection means that the index will explicitly scan the field values of
            the top n results of the query, and ensure that the values present in those results are included. Using
            higher values for this parameter may impact query performance.
        thoroughLookup:
          type: "boolean"
          description: |
            Whether to scan for lookup values.

            This specifies whether the index will take additional steps to locate a `lookupValue` if none is found at
            first attempt. You should only use this option if for some reason some results in your data set don't have a
            value for the lookup field. In most cases, this option isn't needed.
        maximumNumberOfValues: 
          type: "integer"
          format: "int32"
          description: |
            Maximum number of values to return.

            This specifies the maximum number of values that the Group By operation will return. If not specified, the
            default value is 10.
        disjunctionQueryOverride: 
          type: "string"
        constantQueryOverride:
          type: "string"
          description: |
            Override the constant query on which the Group By operation is performed.

            This specifies a constant query expression on which to compute the Group By operation. By default, the
            constant part of the query expression being executed is used.

            This feature is much like the normal `queryOverride` except that the index will keep the query expression in
            cache for faster queries. Do no put dynamic query expression in this parameter, as it will negatively impact
            the performance.
        rangeValues:
          type: "array"
          items: 
            $ref: "#/definitions/RestRangeValue"
          description: |
            List of range values.

            This explicitly specifies a list of range values for which Group By values should be generated.
        completeFacetWithStandardValues:
          type: "boolean"
          description: |
            Whether to complete facets with standard values.

            This is used in conjunction with the `allowedValues` parameter.

            When the number of allowed values is lower than expected, instead of just returning allowed values, it
            returns (standard) values up to the maximum number of values.
        computedFields:
          type: "array"
          items: 
            $ref: "#/definitions/RestComputedField"
          description: |
            Definition of the computed fields to compute for each Group By value.

            This specifies an array of computed fields that should be computed for each Group By value that is returned.
            Computed fields are used to perform aggregate operations on other fields for all the matching documents
            having a specific value in the Group By field in the results.
        queryOverride:
          type: "string"
          description: |
            Override the query on which the Group By operation is performed.

            This specifies a different query expression on which to compute the Group By operation. By default, the
            query expression being executed is used.

            This feature is typically used for performance reasons to retrieve Group By values on separate expressions
            while executing a normal query in a single operation.
        generateAutomaticRanges:
          type: "boolean"
          description: |
            Automatically calculate range values.

            By setting the parameter `generateAutomaticRanges` to `true`, the ranges will be calculated by the Coveo
            index.
    RestListFieldValuesParameters: 
      properties: 
        sortCriteria: 
          type: "string"
        lookupField: 
          type: "string"
        pattern: 
          type: "string"
        field: 
          type: "string"
        patternType: 
          type: "string"
        maximumNumberOfValues: 
          type: "integer"
          format: "int32"
        disjunctionQueryOverride: 
          type: "string"
        ignoreAccents: 
          type: "boolean"
        debug: 
          type: "boolean"
        constantQueryOverride: 
          type: "string"
        queryOverride: 
          type: "string"
    RestComputedField:
      type: "object"
      properties: 
        field:
          description: |
            Name of the field on which to perform the aggregate operation.

            This specifies the field on which the aggregate operation will be performed. This field is typically a
            numerical value.
          type: "string"
        operation:
          description: |
            Aggregate operation to perform.

            This specifies the operation to execute on the field value. Here is the list of available operations (the
            values are case insensitive):
            - `sum`: Computes the sum of all values.
            - `average`: Computes the average of all values.
            - `minimum`: Retrieves the smallest of all values.
            - `maximum`: Retrieves the largest of all values.
          type: "string"
    OutgoingSharePointAuthentication: 
      properties: 
        secret: 
          type: "string"
        organization: 
          type: "string"
        name: 
          type: "string"
        provider: 
          type: "string"
        uri: 
          type: "string"
        id: 
          type: "string"
        expiration: 
          type: "integer"
          format: "int32"
        protocol: 
          type: "string"
    IncomingOAuthHandshake:
      type: "object"
      properties: 
        redirectUri: 
          type: "string"
        sandbox: 
          type: "boolean"
    Object:
      type: "object"
      properties: {}
    RestRangeValue:
      type: "object"
      properties: 
        start: 
          $ref: "#/definitions/Object"
        end: 
          $ref: "#/definitions/Object"
        label: 
          type: "string"
        endInclusive: 
          type: "boolean"
    RestRankingFunction:
      type: "object"
      properties: 
        expression: 
          type: "string"
          description: |
            The expression to execute.

            The mathematical expression that calculates the ranking value to add to the result score.
        normalizeWeight: 
          type: "boolean"
          description: |
            Normalize the weight.

            Whether to normalize the value using the standard index scale or not. If you don't want to completely
            override the index ranking and use the qrf as a boost, you should turn this on.
    IncomingPipeline:
      type: "object"
      properties: 
        name: 
          type: "string"
        splitTestEnabled: 
          type: "boolean"
        description: 
          type: "string"
        splitTestTarget: 
          type: "string"
        splitTestName: 
          type: "string"
        splitTestRatio: 
          type: "number"
          format: "double"
        filter: 
          type: "string"
        condition: 
          $ref: "#/definitions/IncomingCondition"
        modifiedBy: 
          type: "string"
        isDefault: 
          type: "boolean"
    OutgoingSearchPage: 
      properties: 
        name: 
          type: "string"
        lastModified: 
          type: "string"
          format: "date-time"
        id: 
          type: "string"
        title: 
          type: "string"
        html: 
          type: "string"
    IncomingStatement:
      type: "object"
      properties: 
        parent: 
          type: "string"
        feature: 
          type: "string"
        description: 
          type: "string"
        id: 
          type: "string"
        modified_by: 
          type: "string"
        definition: 
          type: "string"
        position: 
          type: "string"
    CreatedSharePointAuthentication:
      type: "object"
      properties: 
        id: 
          type: "string"
          description: >
            The ID of the created SharePoint authentication.
    IncomingSharePointAuthentication:
      type: "object"
      properties: 
        secret: 
          type: "string"
          description: >
            The string to use to sign claims information (using HMACSHA1). This should be a random string. The longer
            the string, the more secure.
        name: 
          type: "string"
          description: >
            The name of the SharePoint server.
        provider: 
          type: "string"
          description: >
            The name of the SharePoint security provider in your index configuration.
        uri: 
          type: "string"
          description: >
            The full URI of the page that serves the claims information.
        expiration: 
          type: "integer"
          format: "int32"
          description: >
            How much time (in milliseconds) it takes for the browser cookie that stores the claims information to
            expire. If you set this parameter to 0, the cookie expires at the end of a browser session.
      example:
        name: "mySharePointServer1"
        uri: "http://uri/to/the/page/that/serves/the/claims/information/SearchApiClaims.aspx"
        provider: "My SharePoint Claims Security Provider Name"
        secret: "-+d@.}&3HMT)dc$tZ:x4u{*KB&T9#G.O%?cQ2vO^aW:Nmxtw3@LQLp,C&)PL8wN"
        expiration: 86400000
    IncomingSamlAuthentication:
      type: "object"
      properties: 
        name: 
          type: "string"
        provider: 
          type: "string"
        assertionConsumerServiceUrl: 
          type: "string"
        metadata: 
          type: "string"
        relyingPartyIdentifier: 
          type: "string"
        expiration: 
          type: "integer"
          format: "int32"
    IncomingCondition:
      type: "object"
      properties: 
        id: 
          type: "string"
        description: 
          type: "string"
        definition: 
          type: "string"
    CreatedSearchPage:
      type: "object"
      properties: 
        id: 
          type: "string"
    CreatedSamlAuthentication:
      type: "object"
      properties: 
        id: 
          type: "string"
    CreatedOAuthHandshake:
      type: "object"
      properties: 
        uri: 
          type: "string"
    RestQueryFunction:
      type: "object"
      properties: 
        function: 
          type: "string"
          description: |
            The function to execute.

            The mathematical expression that calculates the value to inject in the field.

            ### ExprTK

            The Coveo query function supports the syntax of the C++ Mathematical Expression Library ExprTk (see ExprTk
            Library).

            Be aware that the following statements have been disabled:

            - `if / else`
            - `while`
            - `repeat until`
            - `switch`

            **Example:**
            > You have a `@price` field on your items. You need a `@discountedprice` field that contains the price with
            > a 10% discount. Your function should look like this:
            >> ```
            >> (function:"@price*0.9", fieldName:"@discountPrice")
            >> ```

            ### dist

            The dist function was added to the supported query functions, on top of the ExprTK library functions. The
            dist function calculates the distance as the crow flies between two sets of latitude and longitude
            coordinates (using the Levenshtein distance algorithm) useful in geolocalization applications (see
            [Getting Geolocalized Results in a JavaScript Search Page](https://developers.coveo.com/x/CYGfAQ)).

            The dist function syntax is:
            ```javascript
            dist(latitude1, longitude1, latitude2, longitude2)
            ```

            The returned value is in meters.

            **Example:**
            > Your index includes geographic latitude and longitude fields for all kinds of shops. You want to
            > calculate a distance between the current user geographic location and a restaurant location. You use the
            > dist query function to calculate and inject a distance field at query time.
            >> ```
            >> /rest/search/?q=restaurants&queryFunctions=[{"function":"dist(@latitude, @longitude, 46.8167, -71.2167)","fieldName":"distance"}]
            >> ```
            > In the response, the distance field is added.
            >> ```javascript
            >> {
            >>   "totalCount" : 2,
            >>   "duration" : 15,
            >>   "indexDuration" : 10,
            >>   "exception" : {
            >>     "code" : "1",
            >>     "context" : ""
            >>   },
            >>   "queryCorrections" : [ ],
            >>   "results" : [ {
            >>     "title" : "Family Deli",
            >>     ...
            >>     "raw" : [
            >>       "sysuri" : "http://familydeli.com",
            >>       "distance" : "300"
            >>     ]
            >>     ...
            >>   }]
            >> }
            >> ```

        fieldName: 
          type: "string"
          description: |
            Name of the field that will hold the results.

            This specifies the name of the field to be generated at query time. This field can be used as a facet or as
            a computed field.

            **Note:**
            > The field name can only contain alphanumerical characters, and must not already exist in your index.
    IncomingQueryParameters:
      type: "object"
      properties:
        aq:
          type: "string"
          description: |
            The *advanced query expression*.

            This part of the query expression is usually generated by code, based on various rules.

            **Example:**
            > Selecting a `Facet` value in a search page created with the Coveo JavaScript Search Framework
            > automatically sends a new query in which it appends an expression such as
            > `@syssfacetfield=="Selected Facet Value"` to the `aq` value.
          required: false
          defaultValue: ""
          example: "(NOT @filetype=(PDF)) (@source==Forum) (@forumcategory=='Requests')"
        cq:
          type: "string"
          description: |
            The *constant query expression*.

            This part of the query expression is similar to the advanced query expression (see `aq`). However, it
            should hold expressions which are *constant* for all users of a search interface or widget.

            The Search API keeps the evaluation results of the constant query expressions in a special index cache, to
            avoid having to re-evaluate them on each query.

            You must be careful not to include dynamic parts in the constant expression. Otherwise, you risk filling
            up the cache with useless data, which might have a negative impact on performance.

            **Note:**
            > Expressions other than `cq` also benefit from caching in the index. However, using `cq` allows you to
            > explicitly require a part of the query to be included in the cache.
          required: false
          defaultValue: ""
          example: ""
        dq:
          type: "string"
          description: |
            The *disjunction query expression*.

            This is the disjunctive part of the query expression which is merged with other parts of the expression
            using an `OR` boolean operator.

            When specified, the final expression evaluated by the index ends up being `(((q aq) OR (dq)) cq)`.
          required: false
          defaultValue: ""
        lq:
          type: "string"
          description: |
            The *large query expression*.
          required: false
          defaultValue: ""
        wildcards:
          type: "boolean"
          description: |
            Specifies whether to enable wildcards on the basic expression keywords.

            Setting this parameter to `true` enables the wildcard features of the index so that keywords containing
            wildcard characters are expanded to the possible matching keywords to broaden the query.
          required: false
          defaultValue: "false"
        questionMark:
          type: "boolean"
          description: |
            Specifies whether to enable question marks with wildcards.

            Setting this parameter to `true` enables using the question mark character (`?`) within wildcard
            expressions.
          required: false
          defaultValue: "false"
        partialMatch:
          type: "boolean"
          description: |
            Specifies whether to enable partial matching of basic expression keywords.

            Setting this to `true` enables the partial match feature of the index. When this feature is enabled,
            if the basic expression (see `q`) contains at least `partialMatchKeywords` keywords, documents containing
            only the number of keywords specified by `partialMatchThreshold` will also match the query. When this
            feature is not enabled, documents must contain all of the basic expression keywords to match the query.

            This feature is automatically disabled if the basic expression contains special query syntax such as
            operators or field expressions.
          required: false
          defaultValue: "false"
        partialMatchKeywords:
          type: "integer"
          format: "int32"
          description: |
            The minimum number of keywords needed to activate partial match.

            This specifies the minimum number of keywords needed for the partial match feature to activate (see the
            `partialMatch` parameter). If the basic expression (see the `q` parameter) contains less than this number
            of keywords, no transformation is applied to the query.
          required: false
          defaultValue: "5"
        partialMatchThreshold:
          type: "string"
          description: |
            The threshold to use for matching documents when `partialMatch` is `true`.

            This specifies the minimum number of query keywords that a document must contain when partial match is
            enabled. This value can either be an absolute number or a percentage value based on the total number of
            keywords.
          required: false
          defaultValue: "50%"
        lowercaseOperators:
          type: "boolean"
          description: ""
          required: false
          defaultValue: "false"
        firstResult:
          type: "integer"
          format: "int32"
          description: |
            The 0-based index number of the first result to return.
          required: false
          defaultValue: 0
          example: 0
        numberOfResults:
          type: "integer"
          format: "int32"
          description: |
            The number of results to return, starting from the `firstResult` index number.
          required: false
          defaultValue: 10
          example: 10
        sortCriteria:
          type: "string"
          description: |
            The sort criteria to use when sorting the results.

            You can specify multiple sort criteria by separating them with commas (e.g.,
            `@myfield1 ascending,@myfield2 ascending,@myfield3 ascending, [ ... ]`.

            Multiple sort criteria only work when sorting by date or by custom fields (it is not possible to mix
            `Relevancy` and field sorting).

            Multiple sort criteria are evaluated in the order you specify them (just like an SQL `ORDER BY` clause).
            Note that if you specify multiple sort criteria, those criteria must all have the same direction (either
            `ascending` or `descending`), otherwise you will get and `Unsupported feature` exception.

            The following table lists all available sort criteria (the values are case-insensitive).

            | Criterion                               | Description |
            | :-------------------------------------- | :---------- |
            | `Relevancy`                             | Sort by relevancy. This uses all the configured ranking weights as well as any specified ranking expressions to rank results. |
            | `DateAscending`, `DateDescending`       | Sort using the value of the `@sysdate` field, which is typically the last modification date of an item in the index. |
            | `qre`                                   | Sort using only the weights applied through ranking expressions. This is much like using `Relevancy` except that automatic weights based on keyword proximity, etc., are not computed. |
            | `nosort`                                | Do not sort the results. The order in which items are returned is essentially random. |
            | `@field ascending`, `@field descending` | Sort using the value of a custom field. |
            | `FieldAscending`, `FieldDescending`     | Sort using the value of a custom field specified using the `sortField` argument. **Note:** This sort criteria is deprecated. You should rather use the `@field ascending` and `@field descending` syntax. |
          required: false
          defaultValue: "Relevancy"
          example: "relevancy"
        sortField:
          type: "string"
          description: |
            **Deprecated**

            The name of the field to use for sorting.

            **Note:**
            > This parameter is deprecated. You should rather use the `@field ascending` and `@field descending`
            > syntax (see the table in the `sortCriteria` parameter documentation).
          required: false
          defaultValue: ""
        enableDuplicateFiltering:
          type: "boolean"
          description: |
            Specifies whether to filter duplicates.

            If you set this parameter to `true`, documents that resemble others appear only once in the results. Also,
            the `QueryResults.FilteredResults` is populated.

            **Note:**
            > Enabling this feature may render the total result count less precise, as only the results up to those
            > being retrieved are submitted to filtering.
            >
            > **Example:**
            >> If you have 10 unique documents and then 90 duplicates ones in the results, the first result page
            >> displays a total count of 100 results, but when the user jumps to the second page, the count drops to
            >> 11 and only one result is displayed.
          required: false
          defaultValue: "false"
        parentField:
          type: "string"
          description: |
            The name of the parent field to use when loading the parent.

            This specifies a field that the child should match in order to load the parent in the `parentResult` field
            of the `QueryResult`.

            Parent loading can be used to load the parent of a result in a result. To do so, you have to specify two
            fields that will have the same value. So the `childField` value of the child field must match the
            `parentField` value of the parent field in order for the parent to be loaded.
          required: false
          defaultValue: ""
          example: "@forumparentid"
        childField:
          type: "string"
          description: |
            The name of the child field to use when loading the parent.

            This specifies a field that the parent should match in order to be loaded in the `parentResult` field of
            the `QueryResult`.

            Parent loading can be used to load the parent of a result in a result. To do so, you have to specify two
            fields that will have the same value. So the `childField` value of the child field must match the
            `parentField` value of the parent field in order for the parent to be loaded.
          required: false
          defaultValue: ""
          example: "@forumfoldingid"
        filterFieldRange:
          type: "integer"
          format: "int32"
          description: |
            The number of results that should be folded.

            This specifies the number of results that should be loaded as child results.
          required: false
          defaultValue: 5
          example: 3
        filterField:
          type: "string"
          description: |
            The name of the field to use for folding.

            This specifies a field on which folding should be performed.
            Folding is a kind of duplicate filtering where only the first result with any given value of the field is
            included in the result set. It's typically used to return only one result in a conversation, for example
            when forum posts in a thread are indexed as separate items.
          required: false
          defaultValue: ""
          example: "@forumfoldingid"
        excerptLength:
          type: "integer"
          format: "int32"
          description: |
            The length of the generated excerpts.

            This specifies the length (in number of characters) of the excerpts generated by the indexer based on the
            keywords present in the query. The index includes the top most interesting sentences (in the order they
            appear in the document) that fit in the specified number of characters.

            **Tip:**
            > When further clipping is performed on the `excerptLength` value (using `text-overflow: ellipsis` for
            > example), specify a value that is close to the number of characters that will really be displayed to the
            > user.
          required: false
          defaultValue: 200
        summaryLength:
          type: "integer"
          format: "int32"
          description: "The summary length."
          required: false
          defaultValue: "0"
        retrieveFirstSentences:
          type: "boolean"
          description: |
            Specifies whether to retrieve the first sentences.

            This specifies whether the first sentences of the document should be included in the results.

            **Tip:**
            > The `retrieveFirstSentences` option is typically used instead of excerpts when displaying email items,
            > where the first sentence of the email might be of more interest than a contextually generated excerpt.
          required: false
          defaultValue: "false"
        groupBy:
          type: array
          items:
            $ref: "#/definitions/RestGroupBy"
          description: |
            Definition of the facets to compute on the results.

            This specifies an array of Group By operations that can be performed on the query results to extract
            facets.
          required: false
          defaultValue: ""
        fieldsToInclude:
          type: "array"
          items:
            type: "string"
          description: |
            Fields that should be included in the query results.

            This specifies an array of fields that should be returned for each result. Use the syntax for a JSON
            array when passing this value through the query string (e.g., `fieldsToInclude=["foo", "bar"]`).

            If not specified, all fields are returned by default
          required: false
          defaultValue: ""
        fieldsToExclude:
          type: "array"
          items:
            type: "string"
          description: |
            Fields that should be excluded from the query results.

            This specifies an array of fields that should be excluded from the query results. Use the syntax for a
            JSON array when passing this value through the query string (e.g., `fieldsToExclude=["foo", "bar"]`).

            If not specified, all fields are returned by default.
          required: false
          defaultValue: ""
        enableDidYouMean:
          type: "boolean"
          description: |
            Whether to suggest query corrections.

            This enables the query correction feature of the index. By activating this, the index returns an array of
            `QueryCorrection` with suggested word corrections.
          required: false
          defaultValue: "false"
          example: true
        timezone:
          type: "string"
          description: |
            The time zone to use for dates in the query and in the results.

            Specifies in what time zone dates specified in the query are. This parameter also affects the dates
            returned for each results. If not specified, the default time zone of the index server is used.

            Time zones are referenced by their ID as specified by the well known TZ library. The list of time zones
            available can be accessed [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
          required: false
          defaultValue: ""
          example: "America/New_York"
        enableThesaurus:
          type: "boolean"
          description: "Whether to expand the query with the thesaurus.\n"
          required: false
          defaultValue: "true"
        enableCollaborativeRating:
          type: "boolean"
          description: ""
          required: false
          defaultValue: "false"
        queryFunctions:
          type: "array"
          items:
            $ref: "#/definitions/RestQueryFunction"
          description: |
            Definition of query functions to execute on the results.

            This specifies an array of Query Function operation that will be executed on the result.

            A Query Function is a mathematical expression that you run during a request to calculate a value for each
            result at query time, and output its result in a dynamic field.
          required: false
          defaultValue: ""
        rankingFunctions:
          type: "array"
          items:
            $ref: "#/definitions/RestRankingFunction"
          description: |
            Definition of ranking functions to alter the ranking.

            This specifies an array of Ranking Function operations that will be executed on the result.

            A Ranking Function is a mathematical expression that you want to run on a result at query time. Its results
            will be added to the ranking score of the current result. You can use multiple ranking functions at the same
            time.

            **Example:**
            > You may want to boost restaurants that are close to your user's current location using the following
            > expression.
            > ```
            > /rest/search/?q=restaurants&rankingFunctions=[{"expression":"-sqrt(dist(@longitude, @latitude, 46.8167, -71.2167))","normalizeWeight":true}]
            > ```
            > where `46.8167`, `-71.2167` are the user's current longitude and latitude.
            >
            > The `normalizeWeight` maps the complete value domain to the `0` to `600` range.
            >
            > Let's say that the value domain returned by the `-sqrt(dist(...))` function is from for a given query is
            > `-1000` to `0`.
            >
            > The result for a restaurant that has a  `-sqrt(dist(...))` value of `-500 has a boost of ``300`.
            >
            > The result for a restaurant that has a  `-sqrt(dist(...))` value of `-250` has a boost of `450`.
          required: false
          defaultValue: ""
        maximumAge:
          type: "integer"
          format: "int32"
          description: |
            The maximum age for cached query results, in milliseconds. If results for the exact same request
            (including user identities) are available in the in-memory cache, they will be used if they are not older
            than the specified value. Otherwise, the query will be sent to the index.

            The default value for this parameter is equivalent to 30 minutes.
          required: false
          defaultValue: "-1"
        disableQuerySyntax:
          type: "boolean"
          description: "Whether or not to interpret special query syntax such as field references in the basic query expression (parameter q).\nDeprecated."
          required: false
          defaultValue: "false"
        enableQuerySyntax:
          type: "boolean"
          description: |
            Wheter to enable the special query syntax such as field references for the basic query expression (parameter
            q).

            Setting this parameter to false is equivalent to applying a No syntax block to the basic query expression.
          required: false
          defaultValue: "true"
        syntax:
          type: "string"
          description: "Name of the query syntax to apply in the basic query expression (parameter q).\n"
          required: false
          defaultValue: ""
        pipeline:
          type: "string"
          description: |
            Name of the query pipeline to use.

            This specifies the name of the query pipeline to use for the query. If not specified, the default value is
            default, which means the default query pipeline will be used.  Add this parameter at the beginning of the
            query string, for example: http://server/MySearchPage?pipeline=MyPipeline
          required: false
          defaultValue: ""
        q:
          type: "string"
          description: |
            The *basic query expression*.

            This is typically the query expression entered by the user in a query box. Since this part of the query is
            expected to come from user input, it is processed by the *Did You Mean* feature.
          required: false
          defaultValue: ""
          example: 'this is "my query" expressino'
        language:
          type: "string"
          description: "Deprecated."
          required: false
          defaultValue: ""
          example: "en"
        locale:
          type: "string"
          description: |
            The locale of the query. This specifies the user's geographic region and language and is made available in
            Query Expressions, Pipeline Conditions, and QPL.
          required: false
          defaultValue: ""
        tab:
          type: "string"
          description: |
            The tab value set from the JavaScript Search Framework Tab component (see Tab Component [V1] and Tab
            Component [V0.9]). Represent the current Tab name in use.
          required: false
          defaultValue: ""
          example: "All"
        searchHub:
          type: "string"
          description: |
            The hub value set from the JavaScript Search Framework Analytics component (see Analytics Component [V1] and
            Analytics Component [V0.9]). Represents the search dimension name.
          required: false
          defaultValue: ""
        debug:
          type: "boolean"
          description: |
            Whether to include debug info in the results.

            This specifies whether additional debug information should be included in the resulting JSON. This argument
            is useful for troubleshooting but causes more data to be transferred back to the caller.
          required: false
          defaultValue: "false"
        format:
          type: "string"
          description: |
            The format of the results. Use xlsx for excel and json for JSON. By default, the service returns the results
            in a JSON format.
          required: false
          defaultValue: "json"
        recommendation:
          type: "string"
          description: "Represent the current Recommendation id in use.\n"
          required: false
          defaultValue: ""
        context:
          type: "undefined"
          description: |
            Value of the context JSON object to use.

            This specifies the JSON of the Context userDefinedContext to send in the query. This then makes it available
            to use with the QPL
          required: false
          defaultValue: ""
        actionsHistory:
          type: "undefined"
          description: "The action history of the current user.\n"
          required: false
          defaultValue: ""
        indexToken:
          type: "string"
          description: "A token that you can pass to always make queries using the same index\n"
          required: false
          defaultValue: ""
    OutgoingQueryResponse:
      type: "object"
      properties:
        totalCount:
          type: "int"
          format: "int32"
          description: |
            Total number of items matching the query.

            This value tells how many items in the index are matching the query for the current user (security trimming
            applied).
          example: 3
        totalCountFiltered:
          type: "int"
          format: "int32"
          description: |
            Total number of items matching the query (filtered).

            This value tells how many items in the index are matching the query for the current user (security trimming
            applied) after filtering has been applied.
          example: 3
        duration:
          type: "int"
          format: "int32"
          description: |
            Time needed to execute the query.

            This value tells how much time in milliseconds was needed to execute the query, from the standpoint of the
            server hosting the REST Search API. This measurement includes any network connection time needed to
            establish a connection to the index server.
          example: 55
        indexDuration:
          type: "int"
          format: "int32"
          description: |
            Time needed to execute the query within the index.

            This value tells how much time was spent in the index to execute the query. It does not include network
            connection time between the REST Search API server and the index.
          example: 43
        requestDuration:
          type: "int"
          format: "int32"
          description: |
          example: 53
        searchUid:
          type: "string"
          description: |
          example: "a0e4773c-39c3-423c-90cd-c03a640ecde5"
        pipeline:
          type: "string"
          description: |
            Name of the query pipeline that processed the query.

            This value holds the name of the query pipeline that was used to execute the query (see
            [Managing the Query Pipeline](https://developers.coveo.com/x/KYOy)).
          example: "default"
        apiVersion:
          type: "int"
          format: "int32"
          description: |
          example: 2
        index:
          type: "string"
          description: |
          example: "mycoveocloudv2organizationid-cqjd206sta1xb9qyxfhhnsu294-Indexer-2-9rbfxhp1n07cth80ckzeh3zotc"
        indexToken:
          type: "string"
          description: |
          example: "EP0RxuedSqPbhRRtYQhszwu3MaHiqeTI1xnj6m2Mj3q3BfXVCiejp3W5afdtt0Ik1zVgB4vEqdrc9Zpb1NbHSHd9ngdzEMYiEoUPj3q3BfXVCiejp3W="
        triggers:
          type: "array"
          description: |
            List of actions to perform by the client.

            This value holds an array of actions generated by the query pipeline based on the defined Trigger
            statements.
          example:
            - ""
        termsToHighlight:
          type: "object"
          example:
            this:
              - "thisness"
              - "thís"
              - "thîs"
              - "..."
            is:
              - "iś"
              - "iŝ"
              - "iş"
              - "..."
            expression:
              - "express"
              - "expressability"
              - "expressable"
              - "..."
        phrasesToHighlight:
          type: "object"
          example:
            my query:
              my:
                - "my̓"
                - "my͒"
                - "mý"
                - "..."
              query:
                - "quéry"
        queryCorrections:
          type: "array"
          description: |
            List of query corrections.

            This value holds an array of query corrections that the index suggests. Each query correction includes the
            following values:

            - `correctedQuery`: The corrected query.
            - `wordCorrections`: A list of word corrections and their offsets.
              - `offset`: The offset of the corrected word.
              - `length`: The length of the corrected word.
              - `originalWord`: The original word.
              - `correctedWord`: The corrected word.

            This value is only included in the result if the `enableDidYouMean` flag was `true` when performing the
            query
          example:
            -
              correctedQuery: 'this is \"my query\" expression'
              wordCorrections:
                -
                  offset: 19
                  length: 10
                  originalWord: "expressino"
                  correctedWord: "expression"
        groupByResults:
          type: "array"
          description: |
            Group By results returned by the query.

            This value holds an array of Group By results returned for the query. Group By results are included in the
            same order as they were requested through the groupBy parameter.
        results:
          type: "array"
          items:
            $ref: "#/definitions/RestQueryResults"
          description: |
            Results returned by the query.

            This value holds an array of results returned for the query.
        refinedKeywords:
          type: "array"
    RestQueryResults:
      type: "object"
      properties:
        title:
          type: "string"
          description: |
            Title of the result.

            This value holds the title of the result, read from the `@systitle` field.
          example: "Thoughts on adding a new feature"
        uri:
          type: "string"
          description: |
            URI of the result.

            This value holds the URI of the result, read from the `@sysuri` field. Do not use this value to
            hyperlinking to the item, rather use the `ClickUri` value.
          example: "https://example.com/Root:0/topic:898/post:2"
        printableUri:
          type: "string"
          description: |
            Human readable URI of the result.

            This value holds a human readable version of the result URI. Do not use this value to hyperlinking to the
            item, rather use the `ClickUri` value.
          example: "https://example.com/topic:898/post:2"
        clickUri:
          type: "string"
          description: |
            URI of the result for use in hyperlinks.

            This value is the hyperlink version of the URI of the item. It's designed to be usable through an hyperlink
            in a Web Browser. This value is not necessarily unique for each result.
          example: "https://example.com/t/1/898/2"
        uniqueId:
          type: "string"
          description: |
            Unique ID for the result.

            This value is a unique ID for the result across all the index. The specific content of this value should be
            considered an opaque string.
          example: "84.72597$https://example.com/Root:0/Topic:898/Post:2"
        excerpt:
          type: "string"
          description: |
            Excerpt for the result.

            This value holds the generated contextual excerpt for the result. The excerptLength query parameter can be
            used to control the length of the generated value.
          example: "... we are currently working on this feature ... I can send you some feedback when it is ready ..."
        firstSentences:
          type: "string"
          description: |
            First sentences for the result.

            This value holds the first sentences of the body of the result. The `excerptLength` query parameter can be
            used to control the length of the generated value
          example: "Hello, Thanks for reporting this. You will be pleased to learn that we are currently working on this feature. For now, you can use the following workaround ..."
        summary:
          type: "string"
          description: |
            Summary for the result.

            This value holds the generated summary for the result.
          example: ""
        flags:
          type: "string"
          description: |
            Flags for the result.

            This value holds an array of flags that are set on the result.
          example: "HasHtmlVersion"
        hasHtmlVersion:
          type: "boolean"
          description: |
            Whether result has an HTML version.

            This value specifies whether the index contains an HTML version for this result.
          example: true
        hasMobileHtmlVersion:
          type: "boolean"
          description: |
            Whether the result has a mobile HTML version.

            This value specifies whether the index contains a mobile HTML version for this result.
          example: false
        score:
          type: "int"
          format: "int32"
          description: |
            The ranking score of the result.

            This value specifies the total ranking score computed for this result.
          example: 1581
        percentScore:
          type: "float"
          description: |
            The ranking score of the result expressed as a percentage.

            This value specifies the ranking score of the result expressed as a percentage.
          example: 89.47102
        rankingInfo:
          type: "string"
          description: |
            Debug information about the result ranking score.

            When enabled, this field holds raw information generated by the index about how the result was ranked.
          example: ""
        rating:
          type: "int"
          format: "int32"
          description: |
          example: 3
        isTopResult:
          type: "boolean"
          description: |
            Whether the result is a Top Result.

            This value specifies whether the result was included because it is a Top Result in the index configuration.
          example: false
        isRecommendation:
          type: "boolean"
          description: |
          example: false
        titleHighlights:
          type: "array"
          description: |
            Highlights for the Title.

            This value holds an array of length and offset of highlighted words and stems for the title.
          example:
            -
              length: 11
              offset: 55
        firstSentencesHighlights:
          type: "array"
          description: |
            Highlights for the First sentences.

            This value holds an array of length and offset of highlighted words and stems for the first sentences.
          example:
            -
              length: 5
              offset: 129
        excerptHighlights:
          type: "array"
          description: |
            Highlights for the Excerpt.

            This value holds an array of length and offset of highlighted words and stems for the excerpt.
          example:
            -
              length: 5
              offset: 88
            -
              length: 4
              offset: 133
        printableUriHighlights:
          type: "array"
          description: |
            Highlights for the Printable Uri.

            This value holds an array of length and offset of highlighted words and stems for the printable URI.
        summaryHighlights:
          type: "array"
          description: |
            Highlights for the Summary.

            This value holds an array of length and offset of highlighted words and stems for the summary.
        parentResult:
          type: "string"
          description: |
            Parent result when parent/child loading is used.

            This value holds information about the parent result when parent/child loading is being used.
          example:

        childResults:
          type: "array"
          description: |
            List of filtered out child results when `filterField` is used.

            This value holds an array containing the results that were filtered out when the `filterField query`
             parameter is set to the name of a field.
        totalNumberOfChildResults:
          type: "int"
          format: "int32"
          description: |
            Total number of child results.

            This value specifies the total number of child results available in the index when the `filterField` query
            parameter is being used.
          example: 2
        raw:
          type: "object"
          description: |
            Values of fields for the result.

            This sub-object holds all the raw field values for the result.

            **Example:**
            > The `@sysauthor` field can be accessed using `raw.sysauthor`.
  host: "platform.cloud.coveo.com:443"
  basepath: "/"
  securityDefinitions:
    oauth2:
      flow: "implicit"
      type: "oauth2"
      authorizationUrl: "https://platform.cloud.coveo.com/oauth/authorize"
      scopes:
        full: "Required"
