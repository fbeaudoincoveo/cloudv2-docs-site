// ---- CSS3 SASS MIXINS ----
// https://github.com/madr/css3-sass-mixins
//
//  Copyright (C) 2011 by Anders Ytterstr√∂m
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//

// ---- LEGACY IE SUPPORT USING FILTERS ----
//  Should IE filters be used or not?
//  PROS: gradients, drop shadows etc will be handled by css.
//  CONS: will harm the site performance badly,
//        especially on sites with heavy rendering and scripting.
$useIEFilters: 1;

// might be 0 or 1. disabled by default.
// ---- /LEGACY IE SUPPORT USING FILTERS ----


@mixin background-size ($value) {
  -webkit-background-size: $value;
          background-size: $value;
}

@mixin border-image ($path, $offsets, $repeats) {
     -moz-border-image: $path $offsets $repeats;
       -o-border-image: $path $offsets $repeats;
  -webkit-border-image: $path $offsets $repeats;
          border-image: $path $offsets $repeats;
}

@mixin border-radius ($values) {
     -moz-border-radius: $values;
  -webkit-border-radius: $values;
          border-radius: $values;
             -moz-background-clip: padding;
          -webkit-background-clip: padding-box;
                  background-clip: padding-box;
}


@mixin hurmeFancy{
	font-family: 'hurme_geometric_sans_4bold';
	-moz-font-feature-settings:"swsh" 1;
	-ms-font-feature-settings:"swsh" 1;
	-o-font-feature-settings:"swsh" 1;
	-webkit-font-feature-settings:"swsh" 1;
	font-feature-settings:"swsh" 1;
}


@mixin box-shadow ($x, $y, $offset, $hex, $ie: $useIEFilters, $inset: null, $spread:null) {
     -moz-box-shadow: $x $y $offset $spread $hex $inset;
  -webkit-box-shadow: $x $y $offset $spread $hex $inset;
          box-shadow: $x $y $offset $spread $hex $inset;

  @if $ie == 1 {
    $iecolor: '#' + red($hex) + green($hex) + blue($hex);
    filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}');
    -ms-filter: quote(progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}'));
  }
}

@mixin box-sizing($value) {
     -moz-box-sizing: $value;
  -webkit-box-sizing: $value;
          box-sizing: $value;
}

// requires sass 3.2
@mixin keyframes {
     @-moz-keyframes { @content; }
      @-ms-keyframes { @content; }
       @-o-keyframes { @content; }
  @-webkit-keyframes { @content; }
          @keyframes { @content; }
}

@mixin linear-gradient($from, $to, $ie: $useIEFilters) {
  @if $ie != 1 { background-color: $to; }

  background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, $from),color-stop(1, $to));
  background-image: -webkit-linear-gradient(top, $from, $to);
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -ms-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(top, bottom, $from, $to);

  @if $ie == 1 {
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}'));
  }
}

@mixin rgba-bg ($hex, $alpha, $ie: $useIEFilters) {
  @if $ie == 1 {
    background-color: transparent;
    $hexopac: ie-hex-str(rgba($hex, $alpha));
        filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$hexopac}',EndColorStr='#{$hexopac}}');
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$hexopac}',EndColorStr='#{$hexopac}'));
  }
  @else {
    background-color: $hex;
    background-color: rgba($hex, $alpha);
  }
}

@mixin perspective($perspective) {
     -moz-perspective: $perspective;
      -ms-perspective: $perspective;
  -webkit-perspective: $perspective;
          perspective: $perspective;
     -moz-transform-style: preserve-3d;
      -ms-transform-style: preserve-3d;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

@mixin transform ($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}

    @mixin matrix ($a, $b, $c, $d, $e, $f) {
    	   -moz-transform: matrix($a, $b, $c, $d, #{$e}px, #{$f}px);
    	     -o-transform: matrix($a, $b, $c, $d, $e, $f);
    	    -ms-transform: matrix($a, $b, $c, $d, $e, $f);
    	-webkit-transform: matrix($a, $b, $c, $d, $e, $f);
              transform: matrix($a, $b, $c, $d, $e, $f);
    }

    @mixin rotate ($deg) {
      @include transform(rotate(#{$deg}deg));
    }

    @mixin scale ($size) {
      @include transform(scale(#{$size}));
    }

    @mixin translate ($x, $y) {
    	@include transform(translate($x, $y));
    }

@mixin transition($property : opacity, $duration : 0.5, $ease : cubic-bezier(0.190, 1.000, 0.220, 1.000)) {
  @include transition-property($property);
  @include transition-duration($duration);
  @include transition-timing-function($ease);
}



@mixin transition-duration($duration : 0.5) {
  -moz-transition-duration : #{$duration}s; /* FireFox */
  -webkit-transition-duration : #{$duration}s; /* Safari / Chrome */
  -o-transition-duration : #{$duration}s; /* Opera */
  transition-duration : #{$duration}s; /* W3C */
}

@mixin transition-property($property : opacity) {
  -moz-transition-property : $property; /* FireFox */
  -webkit-transition-property : $property; /* Safari / Chrome */
  -o-transition-property : $property; /* Opera */
  transition-property : $property; /* W3C */
}


@mixin transition-timing-function($ease : ease-out) {
  /* linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(n,n,n,n); */
  -webkit-transition-timing-function: $ease;
  -moz-transition-timing-function: $ease;
  -o-transition-timing-function: $ease;
  transition-timing-function: $ease;
}

@mixin display($value) {
  @if $value == 'inline-block' {
    display: inline-block; *display: inline; *zoom: 1;
  }
  @else {
    display: $value;
  }
}

@mixin font-size($fs) {
  @if unitless($fs) and $fs != 0 {
    $fsem: $fs / 10;
    font-size: #{$fs}px;
    font-size: #{$fsem}em;
  }
  @else {
    font-size: $fs;
  }
}

// ==== /CSS3 SASS MIXINS ====

@mixin text-shadow($hor, $ver, $blur, $color){
	text-shadow: $hor $ver $blur $color;
    filter: dropshadow(color=$color, offx=$hor, offy=$ver);
}



// ==== Border-box ====
@mixin border-box(){
  -webkit-box-sizing: border-box; /* Safari/Chrome, other WebKit */
  -moz-box-sizing: border-box;    /* Firefox, other Gecko */
  box-sizing: border-box;         /* Opera/IE 8+ */
}

// ==== Media queries ====
$tablet : 768px;
$mobile-landscape : 667px;

@mixin below-ipad {
  @media only screen and (max-width: 767px){
    @content;
  }
}

@mixin max-400 {
  @media only screen and (max-width: 400px){
    @content;
  }
}

@mixin ipad-and-below {
  @media only screen and (max-width: $tablet) {
    @content;
  }
}

@mixin ipad-and-above {
  @media only screen and (min-width: 769px) {
    @content;
  }
}

@mixin between-ipad {
  @media only screen and (min-width: 767px) and (max-width: 1023px){
    @content;
  }
}
@mixin min-1024 {
  @media only screen and (min-width: 1024px) {
    @content;
  }
}
@mixin max-960{
  @media only screen and (max-width: 960px) {
    @content;
  }
}
@mixin max-1024{
  @media only screen and (max-width: 1024px) {
    @content;
  }
}
@mixin below-1024{
  @media only screen and (max-width: 1023px) {
    @content;
  }
}
@mixin max-1320{
  @media only screen and (max-width: 1320px) {
    @content;
  }
}
@mixin retina{
	@media (-webkit-min-device-pixel-ratio: 2),	(min-resolution: 192dpi) {
  	@content;
	}
}

@mixin mobile-landscape-and-below{
  @media only screen and (max-width: $mobile-landscape) {
    @content;
  }
}
